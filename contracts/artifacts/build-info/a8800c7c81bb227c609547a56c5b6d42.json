{
	"id": "a8800c7c81bb227c609547a56c5b6d42",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SPSv2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n/**\n * @title Splintershards (SPS) Token Contract\n * @dev Extends ERC20 Token Standard basic implementation with burnability, access control, and anti-reentrancy features.\n * Includes functionality for token minting, delegation of voting power, and signature-based delegation.\n * Utilizes EIP712 for typed structured data hashing and signing.\n */\ncontract SPS is ERC20, ERC20Burnable, AccessControl, ReentrancyGuard, EIP712 {\n    \n    // Defining roles for the contract with unique identifiers.\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    // Mapping to store voting checkpoints for each account.\n    // mapping(address => mapping(uint256 => Checkpoint)) public checkpoints;\n    // Mapping to store the number of checkpoints for each account.\n    // mapping(address => uint256) public numCheckpoints;\n    // Mapping to store the delegatee for each account.\n    // mapping(address => address) public delegates;\n    // Mapping to store nonces for each account, used for delegateBySig function.\n    // mapping(address => uint256) public nonces;\n\n    // Struct to represent vote checkpoints.\n    // struct Checkpoint {\n    //     uint32 fromBlock;\n    //     uint256 votes;\n    // }\n\n    // Events for logging changes in delegation and vote balances.\n    // event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n    // event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes EIP-712 domain separator.\n     * All two of these values are immutable: they can only be set once during construction.\n     */\n    constructor() ERC20(\"Splintershards\", \"SPS\") EIP712(\"Splintershards\", \"1\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender); // Granting the deployer the default admin role directly.\n        _grantRole(ADMIN_ROLE, msg.sender); // Also granting admin role explicitly to the deployer.\n    }\n\n\n    /**\n     * @dev Mints `amount` tokens to address `to`, requires the caller to have MINTER_ROLE.\n     * Emits a {Transfer} event.\n     * @param to The address of the beneficiary that will receive the minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {\n        _mint(to, amount);\n        // _moveDelegates(address(0), delegates[to], amount);\n    }\n\n    /**\n     * @dev Delegates voting power of the caller to the delegatee `delegatee`.\n     * @param delegatee The address to which the caller's voting power will be delegated.\n     */\n    // function delegate(address delegatee) public nonReentrant {\n    //     _delegate(msg.sender, delegatee);\n    // }\n\n    /**\n     * @dev Delegates voting power to `delegatee` using an off-chain signature.\n     * @param delegatee The address to which the voting power will be delegated.\n     * @param nonce The contract state required to match the signature.\n     * @param expiry The time at which to expire the signature.\n     * @param v The recovery byte of the signature.\n     * @param r Half of the ECDSA signature pair.\n     * @param s Half of the ECDSA signature pair.\n     */\n    // function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public nonReentrant {\n    //     bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n    //     bytes32 digest = _hashTypedDataV4(structHash);\n    //     address signatory = ECDSA.recover(digest, v, r, s);\n    //     require(nonce == nonces[signatory]++, \"SPS::delegateBySig: invalid nonce\");\n    //     require(block.timestamp <= expiry, \"SPS::delegateBySig: signature expired\");\n    //     _delegate(signatory, delegatee);\n    // }\n\n    /**\n     * @dev Internal function to delegate a user's voting power to a delegatee.\n     * Updates the delegate mappings and emits a {DelegateChanged} event.\n     * @param delegator The address delegating its voting power.\n     * @param delegatee The address receiving the voting power.\n     */\n    // function _delegate(address delegator, address delegatee) internal {\n    //     address currentDelegate = delegates[delegator];\n    //     uint256 delegatorBalance = balanceOf(delegator);\n    //     delegates[delegator] = delegatee;\n\n    //     emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n    //     _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    // }\n\n    /**\n    * @dev Internal function to move delegates between addresses when tokens are transferred.\n    * Ensures that vote balances are updated in accordance with token transfers.\n    * @param srcRep The source address from which the votes are being moved.\n    * @param dstRep The destination address to which the votes are being moved.\n    * @param amount The amount of tokens being transferred.\n    */\n    // function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n    //     if (srcRep != dstRep && amount > 0) {\n    //         if (srcRep != address(0)) {\n    //             uint32 srcRepNum = uint32(numCheckpoints[srcRep]);\n    //             uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n    //             uint256 srcRepNew = srcRepOld + amount;\n\n    //             _writeCheckpoint(srcRep, srcRepNum, srcRepNew); // Updated call\n    //             emit DelegateVotesChanged(srcRep, srcRepOld, srcRepNew);\n    //         }\n\n    //         if (dstRep != address(0)) {\n    //             uint32 dstRepNum = uint32(numCheckpoints[dstRep]);\n    //             uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n    //             uint256 dstRepNew = dstRepOld + amount;\n\n    //             _writeCheckpoint(dstRep, dstRepNum, dstRepNew); // Updated call\n    //             emit DelegateVotesChanged(dstRep, dstRepOld, dstRepNew);\n    //         }\n    //     }\n    // }\n\n    /**\n    * @dev Internal function to write a checkpoint for an address's vote count.\n    * @param delegatee The address whose vote count is being checkpointed.\n    * @param nCheckpoints The number of checkpoints the address currently has.\n    * @param newVotes The new number of votes the address will have.\n    */\n    // function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 newVotes) internal {\n    //     if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == block.number) {\n    //         checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n    //     } else {\n    //         checkpoints[delegatee][nCheckpoints] = Checkpoint(uint32(block.number), newVotes);\n    //         numCheckpoints[delegatee] = nCheckpoints + 1;\n    //     }\n    // }\n\n    /**\n     * @notice Returns the current voting power of an address.\n     * @dev In this simplified version, the voting power is equivalent to the address's token balance.\n     * If your implementation involves delegated votes, adjust the logic to include those calculations.\n     * @param account The address to query the voting power of.\n     * @return The current voting power of the address.\n     */\n    // function getCurrentVotes(address account) public view returns (uint256) {\n    //     return balanceOf(account);\n    // }\n\n    /**\n     * @notice Grants a specific role to an account.\n     * Only accounts with the admin role for the given role can grant it to others.\n     * Emits a {RoleGranted} event.\n     *\n     * @dev Overrides the {AccessControl.grantRole} function to include non-reentrancy guard.\n     * @param role The bytes32 role identifier being granted.\n     * @param account The address being granted the role.\n     */\n    function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {\n        super.grantRole(role, account);\n    }\n\n    /**\n     * @notice Revokes a specific role from an account.\n     * Only accounts with the admin role for the given role can revoke it from others.\n     * Emits a {RoleRevoked} event.\n     *\n     * @dev Overrides the {AccessControl.revokeRole} function to include non-reentrancy guard.\n     * @param role The bytes32 role identifier being revoked.\n     * @param account The address from which the role is being revoked.\n     */\n    function revokeRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {\n        super.revokeRole(role, account);\n    }\n\n    /**\n     * @notice Renounces a specific role from the calling account.\n     * Accounts can renounce roles granted to them, leaving them without that role.\n     * Emits a {RoleRevoked} event.\n     *\n     * @dev Overrides the {AccessControl.renounceRole} function to include non-reentrancy guard.\n     * @param role The bytes32 role identifier being renounced.\n     * @param account The address that is renouncing the role. Must be the transaction sender.\n     */\n    function renounceRole(bytes32 role, address account) public override nonReentrant {\n        require(account == msg.sender, \"SPS::renounceRole: can only renounce roles for self\");\n        super.renounceRole(role, account);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 563,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 569,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 571,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 573,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 575,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 563,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 569,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 571,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 573,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 575,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1246,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALL 0xCF 0xAA 0xAC 0xEF TSTORE MULMOD CALLDATALOAD 0xB2 EXTCODEHASH MSTORE8 SWAP3 0xDF DUP8 SUB 0xEA MSTORE PUSH22 0x89C82BD6CDC28555B92A9A230964736F6C6343000818 STOP CALLER ",
							"sourceMap": "1255:3053:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALL 0xCF 0xAA 0xAC 0xEF TSTORE MULMOD CALLDATALOAD 0xB2 EXTCODEHASH MSTORE8 SWAP3 0xDF DUP8 SUB 0xEA MSTORE PUSH22 0x89C82BD6CDC28555B92A9A230964736F6C6343000818 STOP CALLER ",
							"sourceMap": "1255:3053:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2f1cfaaacef5d0935b23f5392df8703ea527589c82bd6cdc28555b92a9a230964736f6c63430008180033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP2 MOD PUSH24 0x3EEEC084ADE89857853ADF18EABEA7AC19B669DD0F333182 0xB9 DUP5 0xC3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP2 MOD PUSH24 0x3EEEC084ADE89857853ADF18EABEA7AC19B669DD0F333182 0xB9 DUP5 0xC3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c29106773eeec084ade89857853adf18eabea7ac19b669dd0f333182b984c3e264736f6c63430008180033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG2 PUSH0 CALLVALUE LOG4 STOP CREATE2 PUSH13 0xD85B5BAA93AE6EF52B60A3BE5 SELFDESTRUCT PUSH32 0x145980E919FDF7293264736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "344:7386:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG2 PUSH0 CALLVALUE LOG4 STOP CREATE2 PUSH13 0xD85B5BAA93AE6EF52B60A3BE5 SELFDESTRUCT PUSH32 0x145980E919FDF7293264736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "344:7386:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9a25f34a400f56c0d85b5baa93ae6ef52b60a3be5ff7f145980e919fdf7293264736f6c63430008180033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2271,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2273,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 XOR 0xDD SWAP14 0x24 0xD4 MLOAD 0x1F CALLDATACOPY 0x4F 0x24 0xA9 0xAA 0xD3 DUP5 KECCAK256 CALLVALUE 0xBE 0xF7 PUSH21 0x22F74EF19DC9B4286FBFA05664736F6C6343000818 STOP CALLER ",
							"sourceMap": "521:3235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 XOR 0xDD SWAP14 0x24 0xD4 MLOAD 0x1F CALLDATACOPY 0x4F 0x24 0xA9 0xAA 0xD3 DUP5 KECCAK256 CALLVALUE 0xBE 0xF7 PUSH21 0x22F74EF19DC9B4286FBFA05664736F6C6343000818 STOP CALLER ",
							"sourceMap": "521:3235:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208818dd9d24d4511f374f24a9aad3842034bef77422f74ef19dc9b4286fbfa05664736f6c63430008180033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SPSv2.sol": {
				"SPS": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extends ERC20 Token Standard basic implementation with burnability, access control, and anti-reentrancy features. Includes functionality for token minting, delegation of voting power, and signature-based delegation. Utilizes EIP712 for typed structured data hashing and signing.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes EIP-712 domain separator. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Overrides the {AccessControl.grantRole} function to include non-reentrancy guard.",
								"params": {
									"account": "The address being granted the role.",
									"role": "The bytes32 role identifier being granted."
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"mint(address,uint256)": {
								"details": "Mints `amount` tokens to address `to`, requires the caller to have MINTER_ROLE. Emits a {Transfer} event.",
								"params": {
									"amount": "The amount of tokens to mint.",
									"to": "The address of the beneficiary that will receive the minted tokens."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Overrides the {AccessControl.renounceRole} function to include non-reentrancy guard.",
								"params": {
									"account": "The address that is renouncing the role. Must be the transaction sender.",
									"role": "The bytes32 role identifier being renounced."
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Overrides the {AccessControl.revokeRole} function to include non-reentrancy guard.",
								"params": {
									"account": "The address from which the role is being revoked.",
									"role": "The bytes32 role identifier being revoked."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "Splintershards (SPS) Token Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SPSv2.sol\":782:9774  contract SPS is ERC20, ERC20Burnable, AccessControl, ReentrancyGuard, EIP712 {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/SPSv2.sol\":2321:2613  constructor() ERC20(\"Splintershards\", \"SPS\") EIP712(\"Splintershards\", \"1\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x53706c696e746572736861726473000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x53706c696e746572736861726473000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5350530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x07\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_13)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x08\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_13)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"contracts/SPSv2.sol\":2406:2448  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/SPSv2.sol\":2417:2435  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/SPSv2.sol\":2437:2447  msg.sender */\n  caller\n    /* \"contracts/SPSv2.sol\":2406:2416  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/SPSv2.sol\":2406:2448  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/SPSv2.sol\":2516:2550  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_20\n    /* \"contracts/SPSv2.sol\":1039:1062  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/SPSv2.sol\":2539:2549  msg.sender */\n  caller\n    /* \"contracts/SPSv2.sol\":2516:2526  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/SPSv2.sol\":2516:2550  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n  pop\n    /* \"contracts/SPSv2.sol\":782:9774  contract SPS is ERC20, ERC20Burnable, AccessControl, ReentrancyGuard, EIP712 {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_27\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_29\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_29:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_22:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_31\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_34\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_37\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_33:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_44\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_49:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_50:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_51:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_52:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_87:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_89\n  tag_51\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":714:798   */\ntag_88:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_53:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_54:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_55:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_56:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_94\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_55\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1429:1468   */\n  tag_95\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_55\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_57:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_58:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_59:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_99\n    /* \"#utility.yul\":1818:1852   */\n  tag_100\n    /* \"#utility.yul\":1827:1851   */\n  tag_101\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_57\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1818:1852   */\n  tag_58\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1800:1853   */\n  tag_57\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_60:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_61:\n    /* \"#utility.yul\":2056:2095   */\n  tag_104\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_59\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2117:2208   */\n  tag_105\n    /* \"#utility.yul\":2166:2207   */\n  tag_106\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_60\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_62:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_63:\n    /* \"#utility.yul\":2377:2409   */\n  tag_109\n  tag_62\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2418:2483   */\n  tag_110\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_64:\n    /* \"#utility.yul\":2555:2675   */\ntag_112:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_115\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_65:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_118\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_53\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2906:2935   */\n  tag_119\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_54\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_120:\n    /* \"#utility.yul\":3133:3213   */\n  tag_121\n    /* \"#utility.yul\":3189:3211   */\n  tag_122\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_54\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_64\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_117:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_66:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_67:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_125\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_66\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_68:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_127\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_67\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_129\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_49\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_131\n  tag_50\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4038:4094   */\ntag_130:\n    /* \"#utility.yul\":4118:4156   */\n  tag_132\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_52\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4203:4270   */\n  tag_133\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_65\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_136:\n    /* \"#utility.yul\":5144:5211   */\n  tag_137\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_68\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_134)\n    /* \"#utility.yul\":4365:4983   */\ntag_135:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_138\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_53\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_139:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_143\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_67\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_142:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_134:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5311   */\ntag_69:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5300:5305   */\n  dup2\n    /* \"#utility.yul\":5289:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5317:5435   */\ntag_70:\n    /* \"#utility.yul\":5404:5428   */\n  tag_146\n    /* \"#utility.yul\":5422:5427   */\n  dup2\n    /* \"#utility.yul\":5404:5428   */\n  tag_69\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5399:5402   */\n  dup3\n    /* \"#utility.yul\":5392:5429   */\n  mstore\n    /* \"#utility.yul\":5317:5435   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5441:5559   */\ntag_71:\n    /* \"#utility.yul\":5528:5552   */\n  tag_148\n    /* \"#utility.yul\":5546:5551   */\n  dup2\n    /* \"#utility.yul\":5528:5552   */\n  tag_57\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5523:5526   */\n  dup3\n    /* \"#utility.yul\":5516:5553   */\n  mstore\n    /* \"#utility.yul\":5441:5559   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5565:5691   */\ntag_72:\n    /* \"#utility.yul\":5602:5609   */\n  0x00\n    /* \"#utility.yul\":5642:5684   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5635:5640   */\n  dup3\n    /* \"#utility.yul\":5631:5685   */\n  and\n    /* \"#utility.yul\":5620:5685   */\n  swap1\n  pop\n    /* \"#utility.yul\":5565:5691   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5697:5793   */\ntag_73:\n    /* \"#utility.yul\":5734:5741   */\n  0x00\n    /* \"#utility.yul\":5763:5787   */\n  tag_151\n    /* \"#utility.yul\":5781:5786   */\n  dup3\n    /* \"#utility.yul\":5763:5787   */\n  tag_72\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5752:5787   */\n  swap1\n  pop\n    /* \"#utility.yul\":5697:5793   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5799:5917   */\ntag_74:\n    /* \"#utility.yul\":5886:5910   */\n  tag_153\n    /* \"#utility.yul\":5904:5909   */\n  dup2\n    /* \"#utility.yul\":5886:5910   */\n  tag_73\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5881:5884   */\n  dup3\n    /* \"#utility.yul\":5874:5911   */\n  mstore\n    /* \"#utility.yul\":5799:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6587   */\ntag_32:\n    /* \"#utility.yul\":6128:6132   */\n  0x00\n    /* \"#utility.yul\":6166:6169   */\n  0xa0\n    /* \"#utility.yul\":6155:6164   */\n  dup3\n    /* \"#utility.yul\":6151:6170   */\n  add\n    /* \"#utility.yul\":6143:6170   */\n  swap1\n  pop\n    /* \"#utility.yul\":6180:6251   */\n  tag_155\n    /* \"#utility.yul\":6248:6249   */\n  0x00\n    /* \"#utility.yul\":6237:6246   */\n  dup4\n    /* \"#utility.yul\":6233:6250   */\n  add\n    /* \"#utility.yul\":6224:6230   */\n  dup9\n    /* \"#utility.yul\":6180:6251   */\n  tag_70\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6261:6333   */\n  tag_156\n    /* \"#utility.yul\":6329:6331   */\n  0x20\n    /* \"#utility.yul\":6318:6327   */\n  dup4\n    /* \"#utility.yul\":6314:6332   */\n  add\n    /* \"#utility.yul\":6305:6311   */\n  dup8\n    /* \"#utility.yul\":6261:6333   */\n  tag_70\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6343:6415   */\n  tag_157\n    /* \"#utility.yul\":6411:6413   */\n  0x40\n    /* \"#utility.yul\":6400:6409   */\n  dup4\n    /* \"#utility.yul\":6396:6414   */\n  add\n    /* \"#utility.yul\":6387:6393   */\n  dup7\n    /* \"#utility.yul\":6343:6415   */\n  tag_70\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6425:6497   */\n  tag_158\n    /* \"#utility.yul\":6493:6495   */\n  0x60\n    /* \"#utility.yul\":6482:6491   */\n  dup4\n    /* \"#utility.yul\":6478:6496   */\n  add\n    /* \"#utility.yul\":6469:6475   */\n  dup6\n    /* \"#utility.yul\":6425:6497   */\n  tag_71\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6507:6580   */\n  tag_159\n    /* \"#utility.yul\":6575:6578   */\n  0x80\n    /* \"#utility.yul\":6564:6573   */\n  dup4\n    /* \"#utility.yul\":6560:6579   */\n  add\n    /* \"#utility.yul\":6551:6557   */\n  dup5\n    /* \"#utility.yul\":6507:6580   */\n  tag_74\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5923:6587   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6593:6762   */\ntag_75:\n    /* \"#utility.yul\":6677:6688   */\n  0x00\n    /* \"#utility.yul\":6711:6717   */\n  dup3\n    /* \"#utility.yul\":6706:6709   */\n  dup3\n    /* \"#utility.yul\":6699:6718   */\n  mstore\n    /* \"#utility.yul\":6751:6755   */\n  0x20\n    /* \"#utility.yul\":6746:6749   */\n  dup3\n    /* \"#utility.yul\":6742:6756   */\n  add\n    /* \"#utility.yul\":6727:6756   */\n  swap1\n  pop\n    /* \"#utility.yul\":6593:6762   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6768:7014   */\ntag_76:\n    /* \"#utility.yul\":6849:6850   */\n  0x00\n    /* \"#utility.yul\":6859:6972   */\ntag_162:\n    /* \"#utility.yul\":6873:6879   */\n  dup4\n    /* \"#utility.yul\":6870:6871   */\n  dup2\n    /* \"#utility.yul\":6867:6880   */\n  lt\n    /* \"#utility.yul\":6859:6972   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6958:6959   */\n  dup1\n    /* \"#utility.yul\":6953:6956   */\n  dup3\n    /* \"#utility.yul\":6949:6960   */\n  add\n    /* \"#utility.yul\":6943:6961   */\n  mload\n    /* \"#utility.yul\":6939:6940   */\n  dup2\n    /* \"#utility.yul\":6934:6937   */\n  dup5\n    /* \"#utility.yul\":6930:6941   */\n  add\n    /* \"#utility.yul\":6923:6962   */\n  mstore\n    /* \"#utility.yul\":6895:6897   */\n  0x20\n    /* \"#utility.yul\":6892:6893   */\n  dup2\n    /* \"#utility.yul\":6888:6898   */\n  add\n    /* \"#utility.yul\":6883:6898   */\n  swap1\n  pop\n    /* \"#utility.yul\":6859:6972   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":7006:7007   */\n  0x00\n    /* \"#utility.yul\":6997:7003   */\n  dup5\n    /* \"#utility.yul\":6992:6995   */\n  dup5\n    /* \"#utility.yul\":6988:7004   */\n  add\n    /* \"#utility.yul\":6981:7008   */\n  mstore\n    /* \"#utility.yul\":6830:7014   */\n  pop\n    /* \"#utility.yul\":6768:7014   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7020:7122   */\ntag_77:\n    /* \"#utility.yul\":7061:7067   */\n  0x00\n    /* \"#utility.yul\":7112:7114   */\n  0x1f\n    /* \"#utility.yul\":7108:7115   */\n  not\n    /* \"#utility.yul\":7103:7105   */\n  0x1f\n    /* \"#utility.yul\":7096:7101   */\n  dup4\n    /* \"#utility.yul\":7092:7106   */\n  add\n    /* \"#utility.yul\":7088:7116   */\n  and\n    /* \"#utility.yul\":7078:7116   */\n  swap1\n  pop\n    /* \"#utility.yul\":7020:7122   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7128:7505   */\ntag_78:\n    /* \"#utility.yul\":7216:7219   */\n  0x00\n    /* \"#utility.yul\":7244:7283   */\n  tag_167\n    /* \"#utility.yul\":7277:7282   */\n  dup3\n    /* \"#utility.yul\":7244:7283   */\n  tag_49\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7299:7370   */\n  tag_168\n    /* \"#utility.yul\":7363:7369   */\n  dup2\n    /* \"#utility.yul\":7358:7361   */\n  dup6\n    /* \"#utility.yul\":7299:7370   */\n  tag_75\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7292:7370   */\n  swap4\n  pop\n    /* \"#utility.yul\":7379:7444   */\n  tag_169\n    /* \"#utility.yul\":7437:7443   */\n  dup2\n    /* \"#utility.yul\":7432:7435   */\n  dup6\n    /* \"#utility.yul\":7425:7429   */\n  0x20\n    /* \"#utility.yul\":7418:7423   */\n  dup7\n    /* \"#utility.yul\":7414:7430   */\n  add\n    /* \"#utility.yul\":7379:7444   */\n  tag_76\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7469:7498   */\n  tag_170\n    /* \"#utility.yul\":7491:7497   */\n  dup2\n    /* \"#utility.yul\":7469:7498   */\n  tag_77\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7464:7467   */\n  dup5\n    /* \"#utility.yul\":7460:7499   */\n  add\n    /* \"#utility.yul\":7453:7499   */\n  swap2\n  pop\n    /* \"#utility.yul\":7220:7505   */\n  pop\n    /* \"#utility.yul\":7128:7505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7511:7824   */\ntag_43:\n    /* \"#utility.yul\":7624:7628   */\n  0x00\n    /* \"#utility.yul\":7662:7664   */\n  0x20\n    /* \"#utility.yul\":7651:7660   */\n  dup3\n    /* \"#utility.yul\":7647:7665   */\n  add\n    /* \"#utility.yul\":7639:7665   */\n  swap1\n  pop\n    /* \"#utility.yul\":7711:7720   */\n  dup2\n    /* \"#utility.yul\":7705:7709   */\n  dup2\n    /* \"#utility.yul\":7701:7721   */\n  sub\n    /* \"#utility.yul\":7697:7698   */\n  0x00\n    /* \"#utility.yul\":7686:7695   */\n  dup4\n    /* \"#utility.yul\":7682:7699   */\n  add\n    /* \"#utility.yul\":7675:7722   */\n  mstore\n    /* \"#utility.yul\":7739:7817   */\n  tag_172\n    /* \"#utility.yul\":7812:7816   */\n  dup2\n    /* \"#utility.yul\":7803:7809   */\n  dup5\n    /* \"#utility.yul\":7739:7817   */\n  tag_78\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7731:7817   */\n  swap1\n  pop\n    /* \"#utility.yul\":7511:7824   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7830:7928   */\ntag_79:\n    /* \"#utility.yul\":7881:7887   */\n  0x00\n    /* \"#utility.yul\":7915:7920   */\n  dup2\n    /* \"#utility.yul\":7909:7921   */\n  mload\n    /* \"#utility.yul\":7899:7921   */\n  swap1\n  pop\n    /* \"#utility.yul\":7830:7928   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7934:8050   */\ntag_80:\n    /* \"#utility.yul\":7985:7989   */\n  0x00\n    /* \"#utility.yul\":8008:8011   */\n  dup2\n    /* \"#utility.yul\":8000:8011   */\n  swap1\n  pop\n    /* \"#utility.yul\":8038:8042   */\n  0x20\n    /* \"#utility.yul\":8033:8036   */\n  dup3\n    /* \"#utility.yul\":8029:8043   */\n  add\n    /* \"#utility.yul\":8021:8043   */\n  swap1\n  pop\n    /* \"#utility.yul\":7934:8050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8056:8210   */\ntag_81:\n    /* \"#utility.yul\":8099:8110   */\n  0x00\n    /* \"#utility.yul\":8135:8164   */\n  tag_176\n    /* \"#utility.yul\":8159:8162   */\n  dup3\n    /* \"#utility.yul\":8153:8163   */\n  mload\n    /* \"#utility.yul\":8135:8164   */\n  tag_69\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8198:8203   */\n  dup1\n    /* \"#utility.yul\":8174:8203   */\n  swap2\n  pop\n    /* \"#utility.yul\":8111:8210   */\n  pop\n    /* \"#utility.yul\":8056:8210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8216:8810   */\ntag_45:\n    /* \"#utility.yul\":8300:8305   */\n  0x00\n    /* \"#utility.yul\":8331:8369   */\n  tag_178\n    /* \"#utility.yul\":8363:8368   */\n  dup3\n    /* \"#utility.yul\":8331:8369   */\n  tag_79\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8394:8399   */\n  dup3\n    /* \"#utility.yul\":8421:8461   */\n  tag_179\n    /* \"#utility.yul\":8455:8460   */\n  dup5\n    /* \"#utility.yul\":8421:8461   */\n  tag_80\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8409:8461   */\n  swap1\n  pop\n    /* \"#utility.yul\":8480:8515   */\n  tag_180\n    /* \"#utility.yul\":8506:8514   */\n  dup2\n    /* \"#utility.yul\":8480:8515   */\n  tag_81\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8471:8515   */\n  swap3\n  pop\n    /* \"#utility.yul\":8539:8541   */\n  0x20\n    /* \"#utility.yul\":8531:8537   */\n  dup3\n    /* \"#utility.yul\":8528:8542   */\n  lt\n    /* \"#utility.yul\":8525:8803   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8610:8779   */\n  tag_182\n    /* \"#utility.yul\":8695:8761   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8665:8671   */\n  dup4\n    /* \"#utility.yul\":8661:8663   */\n  0x20\n    /* \"#utility.yul\":8657:8672   */\n  sub\n    /* \"#utility.yul\":8654:8655   */\n  0x08\n    /* \"#utility.yul\":8650:8673   */\n  mul\n    /* \"#utility.yul\":8610:8779   */\n  tag_55\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8587:8592   */\n  dup4\n    /* \"#utility.yul\":8566:8793   */\n  and\n    /* \"#utility.yul\":8557:8793   */\n  swap3\n  pop\n    /* \"#utility.yul\":8525:8803   */\ntag_181:\n    /* \"#utility.yul\":8306:8810   */\n  pop\n  pop\n    /* \"#utility.yul\":8216:8810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/SPSv2.sol\":782:9774  contract SPS is ERC20, ERC20Burnable, AccessControl, ReentrancyGuard, EIP712 {... */\ntag_21:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x9b372da1ff99b83ff9f151ba86ac2da23ab9ef4196e133ac375691426b53e2e9\")\n  0x00\n  assignImmutable(\"0x8107b79900bde62465e0a200790c3484f4324ca6c35e861f2875f1250f646a27\")\n  0x00\n  assignImmutable(\"0xbe14dd49e59525088d89709010083b2d00d047011a0701cee734201963dbdfca\")\n  0x00\n  assignImmutable(\"0xb0bb45057713e9b7f1b277549a4a1d93643012b5ffe57edaa9aec14e5b89eb97\")\n  0x00\n  assignImmutable(\"0x75daeb13b62d21632070b51337f5d5ea0600a2bb35b1ebb8aa2ce47c93b99756\")\n  0x00\n  assignImmutable(\"0x29020f4f1a795a436f0f2bcf8515507a2763761ef5cef6a2514c12dd744d75b5\")\n  0x00\n  assignImmutable(\"0xf7aecf6cc063f6827dc57fb1847144d81fcc79b1a7617a90b0b720cb646b263d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SPSv2.sol\":782:9774  contract SPS is ERC20, ERC20Burnable, AccessControl, ReentrancyGuard, EIP712 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x248a9ca3\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SPSv2.sol\":8350:8492  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SPSv2.sol\":9545:9772  function renounceRole(bytes32 role, address account) public override nonReentrant {... */\n    tag_11:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/SPSv2.sol\":2897:3077  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {... */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_13:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SPSv2.sol\":1002:1062  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_15:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_16:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_17:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_18:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SPSv2.sol\":934:996  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_22:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SPSv2.sol\":8929:9073  function revokeRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {... */\n    tag_23:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SPSv2.sol\":1068:1185  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_25:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_121\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_126\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":8350:8492  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"contracts/SPSv2.sol\":8425:8443  getRoleAdmin(role) */\n      tag_144\n        /* \"contracts/SPSv2.sol\":8438:8442  role */\n      dup3\n        /* \"contracts/SPSv2.sol\":8425:8437  getRoleAdmin */\n      tag_56\n        /* \"contracts/SPSv2.sol\":8425:8443  getRoleAdmin(role) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/SPSv2.sol\":8455:8485  super.grantRole(role, account) */\n      tag_149\n        /* \"contracts/SPSv2.sol\":8471:8475  role */\n      dup4\n        /* \"contracts/SPSv2.sol\":8477:8484  account */\n      dup4\n        /* \"contracts/SPSv2.sol\":8455:8470  super.grantRole */\n      tag_150\n        /* \"contracts/SPSv2.sol\":8455:8485  super.grantRole(role, account) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/SPSv2.sol\":8350:8492  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":9545:9772  function renounceRole(bytes32 role, address account) public override nonReentrant {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/SPSv2.sol\":9656:9666  msg.sender */\n      caller\n        /* \"contracts/SPSv2.sol\":9645:9666  account == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SPSv2.sol\":9645:9652  account */\n      dup2\n        /* \"contracts/SPSv2.sol\":9645:9666  account == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SPSv2.sol\":9637:9722  require(account == msg.sender, \"SPS::renounceRole: can only renounce roles for self\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/SPSv2.sol\":9732:9765  super.renounceRole(role, account) */\n      tag_159\n        /* \"contracts/SPSv2.sol\":9751:9755  role */\n      dup3\n        /* \"contracts/SPSv2.sol\":9757:9764  account */\n      dup3\n        /* \"contracts/SPSv2.sol\":9732:9750  super.renounceRole */\n      tag_160\n        /* \"contracts/SPSv2.sol\":9732:9765  super.renounceRole(role, account) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/SPSv2.sol\":9545:9772  function renounceRole(bytes32 role, address account) public override nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":2897:3077  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {... */\n    tag_72:\n        /* \"contracts/SPSv2.sol\":972:996  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/SPSv2.sol\":2991:3008  _mint(to, amount) */\n      tag_168\n        /* \"contracts/SPSv2.sol\":2997:2999  to */\n      dup4\n        /* \"contracts/SPSv2.sol\":3001:3007  amount */\n      dup4\n        /* \"contracts/SPSv2.sol\":2991:2996  _mint */\n      tag_169\n        /* \"contracts/SPSv2.sol\":2991:3008  _mint(to, amount) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/SPSv2.sol\":2897:3077  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":1002:1062  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_83:\n        /* \"contracts/SPSv2.sol\":1039:1062  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/SPSv2.sol\":1002:1062  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n    tag_185:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_188:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_126\n      jump\t// in\n    tag_191:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_126\n      jump\t// in\n    tag_192:\n      dup1\n      iszero\n      tag_193\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_194\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_193)\n    tag_194:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_195:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_195\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":934:996  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_107:\n        /* \"contracts/SPSv2.sol\":972:996  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/SPSv2.sol\":934:996  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":8929:9073  function revokeRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {... */\n    tag_111:\n        /* \"contracts/SPSv2.sol\":9005:9023  getRoleAdmin(role) */\n      tag_199\n        /* \"contracts/SPSv2.sol\":9018:9022  role */\n      dup3\n        /* \"contracts/SPSv2.sol\":9005:9017  getRoleAdmin */\n      tag_56\n        /* \"contracts/SPSv2.sol\":9005:9023  getRoleAdmin(role) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/SPSv2.sol\":9035:9066  super.revokeRole(role, account) */\n      tag_203\n        /* \"contracts/SPSv2.sol\":9052:9056  role */\n      dup4\n        /* \"contracts/SPSv2.sol\":9058:9065  account */\n      dup4\n        /* \"contracts/SPSv2.sol\":9035:9051  super.revokeRole */\n      tag_204\n        /* \"contracts/SPSv2.sol\":9035:9066  super.revokeRole(role, account) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/SPSv2.sol\":8929:9073  function revokeRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SPSv2.sol\":1068:1185  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_118:\n        /* \"contracts/SPSv2.sol\":1114:1185  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/SPSv2.sol\":1068:1185  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_227\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_229\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_230\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_235\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_234:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_241\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_242\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_253\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x07\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x8107b79900bde62465e0a200790c3484f4324ca6c35e861f2875f1250f646a27\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_254\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x08\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0x9b372da1ff99b83ff9f151ba86ac2da23ab9ef4196e133ac375691426b53e2e9\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_254\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_242\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_261:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_273)\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_277)\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_284)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_284:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_290\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_289)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_289:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_296\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_297\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_294)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_299\n      swap1\n      tag_126\n      jump\t// in\n    tag_299:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_126\n      jump\t// in\n    tag_300:\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_302\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_301)\n    tag_302:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_303:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_303\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_294:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_307\n      jumpi\n      tag_308\n      tag_187\n      jump\t// in\n    tag_308:\n    tag_307:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_309\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_309:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_313:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_315:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_316:\n        /* \"#utility.yul\":561:584   */\n      tag_359\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_315\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_360:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_317:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_362\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_316\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_365\n      tag_313\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":833:952   */\n    tag_364:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_366\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_317\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_318:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_319:\n        /* \"#utility.yul\":1268:1289   */\n      tag_369\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_318\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_371\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_319\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_320:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_321:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_322:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_375:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_375)\n    tag_377:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_323:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_324:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_380\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_320\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2329:2400   */\n      tag_381\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_321\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_382\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_322\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2499:2528   */\n      tag_383\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_323\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_38:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_385\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_324\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_325:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_326:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_388\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_325\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_327:\n        /* \"#utility.yul\":3167:3191   */\n      tag_390\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_326\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_391:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_328:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_393\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_327\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_329:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_330:\n        /* \"#utility.yul\":3523:3547   */\n      tag_396\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_329\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_397:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_331:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_399\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_330\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_41:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_402\n      tag_313\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3816:3935   */\n    tag_401:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_403\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_328\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_404\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_331\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_332:\n        /* \"#utility.yul\":4290:4314   */\n      tag_406\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_329\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_47:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_408\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_332\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_50:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_411\n      tag_313\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4665:4784   */\n    tag_410:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_412\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_328\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_413\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_328\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_414\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_331\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_333:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_334:\n        /* \"#utility.yul\":5336:5360   */\n      tag_417\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_333\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_418:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_335:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_420\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_334\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_55:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_423\n      tag_313\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5612:5731   */\n    tag_422:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_424\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_335\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_336:\n        /* \"#utility.yul\":5958:5982   */\n      tag_426\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_333\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_58:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_428\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_336\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_61:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_431\n      tag_313\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6316:6435   */\n    tag_430:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_432\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_335\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_433\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_328\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_337:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_338:\n        /* \"#utility.yul\":6878:6900   */\n      tag_436\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_337\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_66:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_438\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_338\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_75:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_441\n      tag_313\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7209:7328   */\n    tag_440:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_442\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_331\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7797   */\n    tag_79:\n        /* \"#utility.yul\":7527:7533   */\n      0x00\n        /* \"#utility.yul\":7576:7578   */\n      0x20\n        /* \"#utility.yul\":7564:7573   */\n      dup3\n        /* \"#utility.yul\":7555:7562   */\n      dup5\n        /* \"#utility.yul\":7551:7574   */\n      sub\n        /* \"#utility.yul\":7547:7579   */\n      slt\n        /* \"#utility.yul\":7544:7663   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":7582:7661   */\n      tag_445\n      tag_313\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7544:7663   */\n    tag_444:\n        /* \"#utility.yul\":7702:7703   */\n      0x00\n        /* \"#utility.yul\":7727:7780   */\n      tag_446\n        /* \"#utility.yul\":7772:7779   */\n      dup5\n        /* \"#utility.yul\":7763:7769   */\n      dup3\n        /* \"#utility.yul\":7752:7761   */\n      dup6\n        /* \"#utility.yul\":7748:7770   */\n      add\n        /* \"#utility.yul\":7727:7780   */\n      tag_328\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7717:7780   */\n      swap2\n      pop\n        /* \"#utility.yul\":7673:7790   */\n      pop\n        /* \"#utility.yul\":7468:7797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7803:7952   */\n    tag_339:\n        /* \"#utility.yul\":7839:7846   */\n      0x00\n        /* \"#utility.yul\":7879:7945   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7872:7877   */\n      dup3\n        /* \"#utility.yul\":7868:7946   */\n      and\n        /* \"#utility.yul\":7857:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7803:7952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7958:8073   */\n    tag_340:\n        /* \"#utility.yul\":8043:8066   */\n      tag_449\n        /* \"#utility.yul\":8060:8065   */\n      dup2\n        /* \"#utility.yul\":8043:8066   */\n      tag_339\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8038:8041   */\n      dup3\n        /* \"#utility.yul\":8031:8067   */\n      mstore\n        /* \"#utility.yul\":7958:8073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8079:8197   */\n    tag_341:\n        /* \"#utility.yul\":8166:8190   */\n      tag_451\n        /* \"#utility.yul\":8184:8189   */\n      dup2\n        /* \"#utility.yul\":8166:8190   */\n      tag_326\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8161:8164   */\n      dup3\n        /* \"#utility.yul\":8154:8191   */\n      mstore\n        /* \"#utility.yul\":8079:8197   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8203:8317   */\n    tag_342:\n        /* \"#utility.yul\":8270:8276   */\n      0x00\n        /* \"#utility.yul\":8304:8309   */\n      dup2\n        /* \"#utility.yul\":8298:8310   */\n      mload\n        /* \"#utility.yul\":8288:8310   */\n      swap1\n      pop\n        /* \"#utility.yul\":8203:8317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8323:8507   */\n    tag_343:\n        /* \"#utility.yul\":8422:8433   */\n      0x00\n        /* \"#utility.yul\":8456:8462   */\n      dup3\n        /* \"#utility.yul\":8451:8454   */\n      dup3\n        /* \"#utility.yul\":8444:8463   */\n      mstore\n        /* \"#utility.yul\":8496:8500   */\n      0x20\n        /* \"#utility.yul\":8491:8494   */\n      dup3\n        /* \"#utility.yul\":8487:8501   */\n      add\n        /* \"#utility.yul\":8472:8501   */\n      swap1\n      pop\n        /* \"#utility.yul\":8323:8507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8513:8645   */\n    tag_344:\n        /* \"#utility.yul\":8580:8584   */\n      0x00\n        /* \"#utility.yul\":8603:8606   */\n      dup2\n        /* \"#utility.yul\":8595:8606   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:8637   */\n      0x20\n        /* \"#utility.yul\":8628:8631   */\n      dup3\n        /* \"#utility.yul\":8624:8638   */\n      add\n        /* \"#utility.yul\":8616:8638   */\n      swap1\n      pop\n        /* \"#utility.yul\":8513:8645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8651:8759   */\n    tag_345:\n        /* \"#utility.yul\":8728:8752   */\n      tag_456\n        /* \"#utility.yul\":8746:8751   */\n      dup2\n        /* \"#utility.yul\":8728:8752   */\n      tag_329\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8723:8726   */\n      dup3\n        /* \"#utility.yul\":8716:8753   */\n      mstore\n        /* \"#utility.yul\":8651:8759   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8765:8944   */\n    tag_346:\n        /* \"#utility.yul\":8834:8844   */\n      0x00\n        /* \"#utility.yul\":8855:8901   */\n      tag_458\n        /* \"#utility.yul\":8897:8900   */\n      dup4\n        /* \"#utility.yul\":8889:8895   */\n      dup4\n        /* \"#utility.yul\":8855:8901   */\n      tag_345\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8933:8937   */\n      0x20\n        /* \"#utility.yul\":8928:8931   */\n      dup4\n        /* \"#utility.yul\":8924:8938   */\n      add\n        /* \"#utility.yul\":8910:8938   */\n      swap1\n      pop\n        /* \"#utility.yul\":8765:8944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8950:9063   */\n    tag_347:\n        /* \"#utility.yul\":9020:9024   */\n      0x00\n        /* \"#utility.yul\":9052:9056   */\n      0x20\n        /* \"#utility.yul\":9047:9050   */\n      dup3\n        /* \"#utility.yul\":9043:9057   */\n      add\n        /* \"#utility.yul\":9035:9057   */\n      swap1\n      pop\n        /* \"#utility.yul\":8950:9063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9099:9831   */\n    tag_348:\n        /* \"#utility.yul\":9218:9221   */\n      0x00\n        /* \"#utility.yul\":9247:9301   */\n      tag_461\n        /* \"#utility.yul\":9295:9300   */\n      dup3\n        /* \"#utility.yul\":9247:9301   */\n      tag_342\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9317:9403   */\n      tag_462\n        /* \"#utility.yul\":9396:9402   */\n      dup2\n        /* \"#utility.yul\":9391:9394   */\n      dup6\n        /* \"#utility.yul\":9317:9403   */\n      tag_343\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9310:9403   */\n      swap4\n      pop\n        /* \"#utility.yul\":9427:9483   */\n      tag_463\n        /* \"#utility.yul\":9477:9482   */\n      dup4\n        /* \"#utility.yul\":9427:9483   */\n      tag_344\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9506:9513   */\n      dup1\n        /* \"#utility.yul\":9537:9538   */\n      0x00\n        /* \"#utility.yul\":9522:9806   */\n    tag_464:\n        /* \"#utility.yul\":9547:9553   */\n      dup4\n        /* \"#utility.yul\":9544:9545   */\n      dup2\n        /* \"#utility.yul\":9541:9554   */\n      lt\n        /* \"#utility.yul\":9522:9806   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":9623:9629   */\n      dup2\n        /* \"#utility.yul\":9617:9630   */\n      mload\n        /* \"#utility.yul\":9650:9713   */\n      tag_467\n        /* \"#utility.yul\":9709:9712   */\n      dup9\n        /* \"#utility.yul\":9694:9707   */\n      dup3\n        /* \"#utility.yul\":9650:9713   */\n      tag_346\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9643:9713   */\n      swap8\n      pop\n        /* \"#utility.yul\":9736:9796   */\n      tag_468\n        /* \"#utility.yul\":9789:9795   */\n      dup4\n        /* \"#utility.yul\":9736:9796   */\n      tag_347\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9726:9796   */\n      swap3\n      pop\n        /* \"#utility.yul\":9582:9806   */\n      pop\n        /* \"#utility.yul\":9569:9570   */\n      0x01\n        /* \"#utility.yul\":9566:9567   */\n      dup2\n        /* \"#utility.yul\":9562:9571   */\n      add\n        /* \"#utility.yul\":9557:9571   */\n      swap1\n      pop\n        /* \"#utility.yul\":9522:9806   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":9526:9540   */\n      pop\n        /* \"#utility.yul\":9822:9825   */\n      dup6\n        /* \"#utility.yul\":9815:9825   */\n      swap4\n      pop\n        /* \"#utility.yul\":9223:9831   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9099:9831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:11052   */\n    tag_91:\n        /* \"#utility.yul\":10186:10190   */\n      0x00\n        /* \"#utility.yul\":10224:10227   */\n      0xe0\n        /* \"#utility.yul\":10213:10222   */\n      dup3\n        /* \"#utility.yul\":10209:10228   */\n      add\n        /* \"#utility.yul\":10201:10228   */\n      swap1\n      pop\n        /* \"#utility.yul\":10238:10307   */\n      tag_470\n        /* \"#utility.yul\":10304:10305   */\n      0x00\n        /* \"#utility.yul\":10293:10302   */\n      dup4\n        /* \"#utility.yul\":10289:10306   */\n      add\n        /* \"#utility.yul\":10280:10286   */\n      dup11\n        /* \"#utility.yul\":10238:10307   */\n      tag_340\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10354:10363   */\n      dup2\n        /* \"#utility.yul\":10348:10352   */\n      dup2\n        /* \"#utility.yul\":10344:10364   */\n      sub\n        /* \"#utility.yul\":10339:10341   */\n      0x20\n        /* \"#utility.yul\":10328:10337   */\n      dup4\n        /* \"#utility.yul\":10324:10342   */\n      add\n        /* \"#utility.yul\":10317:10365   */\n      mstore\n        /* \"#utility.yul\":10382:10460   */\n      tag_471\n        /* \"#utility.yul\":10455:10459   */\n      dup2\n        /* \"#utility.yul\":10446:10452   */\n      dup10\n        /* \"#utility.yul\":10382:10460   */\n      tag_324\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10374:10460   */\n      swap1\n      pop\n        /* \"#utility.yul\":10507:10516   */\n      dup2\n        /* \"#utility.yul\":10501:10505   */\n      dup2\n        /* \"#utility.yul\":10497:10517   */\n      sub\n        /* \"#utility.yul\":10492:10494   */\n      0x40\n        /* \"#utility.yul\":10481:10490   */\n      dup4\n        /* \"#utility.yul\":10477:10495   */\n      add\n        /* \"#utility.yul\":10470:10518   */\n      mstore\n        /* \"#utility.yul\":10535:10613   */\n      tag_472\n        /* \"#utility.yul\":10608:10612   */\n      dup2\n        /* \"#utility.yul\":10599:10605   */\n      dup9\n        /* \"#utility.yul\":10535:10613   */\n      tag_324\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10527:10613   */\n      swap1\n      pop\n        /* \"#utility.yul\":10623:10695   */\n      tag_473\n        /* \"#utility.yul\":10691:10693   */\n      0x60\n        /* \"#utility.yul\":10680:10689   */\n      dup4\n        /* \"#utility.yul\":10676:10694   */\n      add\n        /* \"#utility.yul\":10667:10673   */\n      dup8\n        /* \"#utility.yul\":10623:10695   */\n      tag_332\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10705:10778   */\n      tag_474\n        /* \"#utility.yul\":10773:10776   */\n      0x80\n        /* \"#utility.yul\":10762:10771   */\n      dup4\n        /* \"#utility.yul\":10758:10777   */\n      add\n        /* \"#utility.yul\":10749:10755   */\n      dup7\n        /* \"#utility.yul\":10705:10778   */\n      tag_341\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10788:10861   */\n      tag_475\n        /* \"#utility.yul\":10856:10859   */\n      0xa0\n        /* \"#utility.yul\":10845:10854   */\n      dup4\n        /* \"#utility.yul\":10841:10860   */\n      add\n        /* \"#utility.yul\":10832:10838   */\n      dup6\n        /* \"#utility.yul\":10788:10861   */\n      tag_336\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10909:10918   */\n      dup2\n        /* \"#utility.yul\":10903:10907   */\n      dup2\n        /* \"#utility.yul\":10899:10919   */\n      sub\n        /* \"#utility.yul\":10893:10896   */\n      0xc0\n        /* \"#utility.yul\":10882:10891   */\n      dup4\n        /* \"#utility.yul\":10878:10897   */\n      add\n        /* \"#utility.yul\":10871:10920   */\n      mstore\n        /* \"#utility.yul\":10937:11045   */\n      tag_476\n        /* \"#utility.yul\":11040:11044   */\n      dup2\n        /* \"#utility.yul\":11031:11037   */\n      dup5\n        /* \"#utility.yul\":10937:11045   */\n      tag_348\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10929:11045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9837:11052   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11058:11532   */\n    tag_114:\n        /* \"#utility.yul\":11126:11132   */\n      0x00\n        /* \"#utility.yul\":11134:11140   */\n      dup1\n        /* \"#utility.yul\":11183:11185   */\n      0x40\n        /* \"#utility.yul\":11171:11180   */\n      dup4\n        /* \"#utility.yul\":11162:11169   */\n      dup6\n        /* \"#utility.yul\":11158:11181   */\n      sub\n        /* \"#utility.yul\":11154:11186   */\n      slt\n        /* \"#utility.yul\":11151:11270   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":11189:11268   */\n      tag_479\n      tag_313\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11151:11270   */\n    tag_478:\n        /* \"#utility.yul\":11309:11310   */\n      0x00\n        /* \"#utility.yul\":11334:11387   */\n      tag_480\n        /* \"#utility.yul\":11379:11386   */\n      dup6\n        /* \"#utility.yul\":11370:11376   */\n      dup3\n        /* \"#utility.yul\":11359:11368   */\n      dup7\n        /* \"#utility.yul\":11355:11377   */\n      add\n        /* \"#utility.yul\":11334:11387   */\n      tag_328\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11324:11387   */\n      swap3\n      pop\n        /* \"#utility.yul\":11280:11397   */\n      pop\n        /* \"#utility.yul\":11436:11438   */\n      0x20\n        /* \"#utility.yul\":11462:11515   */\n      tag_481\n        /* \"#utility.yul\":11507:11514   */\n      dup6\n        /* \"#utility.yul\":11498:11504   */\n      dup3\n        /* \"#utility.yul\":11487:11496   */\n      dup7\n        /* \"#utility.yul\":11483:11505   */\n      add\n        /* \"#utility.yul\":11462:11515   */\n      tag_328\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11452:11515   */\n      swap2\n      pop\n        /* \"#utility.yul\":11407:11525   */\n      pop\n        /* \"#utility.yul\":11058:11532   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11538:11718   */\n    tag_349:\n        /* \"#utility.yul\":11586:11663   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11583:11584   */\n      0x00\n        /* \"#utility.yul\":11576:11664   */\n      mstore\n        /* \"#utility.yul\":11683:11687   */\n      0x22\n        /* \"#utility.yul\":11680:11681   */\n      0x04\n        /* \"#utility.yul\":11673:11688   */\n      mstore\n        /* \"#utility.yul\":11707:11711   */\n      0x24\n        /* \"#utility.yul\":11704:11705   */\n      0x00\n        /* \"#utility.yul\":11697:11712   */\n      revert\n        /* \"#utility.yul\":11724:12044   */\n    tag_126:\n        /* \"#utility.yul\":11768:11774   */\n      0x00\n        /* \"#utility.yul\":11805:11806   */\n      0x02\n        /* \"#utility.yul\":11799:11803   */\n      dup3\n        /* \"#utility.yul\":11795:11807   */\n      div\n        /* \"#utility.yul\":11785:11807   */\n      swap1\n      pop\n        /* \"#utility.yul\":11852:11853   */\n      0x01\n        /* \"#utility.yul\":11846:11850   */\n      dup3\n        /* \"#utility.yul\":11842:11854   */\n      and\n        /* \"#utility.yul\":11873:11891   */\n      dup1\n        /* \"#utility.yul\":11863:11944   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":11929:11933   */\n      0x7f\n        /* \"#utility.yul\":11921:11927   */\n      dup3\n        /* \"#utility.yul\":11917:11934   */\n      and\n        /* \"#utility.yul\":11907:11934   */\n      swap2\n      pop\n        /* \"#utility.yul\":11863:11944   */\n    tag_484:\n        /* \"#utility.yul\":11991:11993   */\n      0x20\n        /* \"#utility.yul\":11983:11989   */\n      dup3\n        /* \"#utility.yul\":11980:11994   */\n      lt\n        /* \"#utility.yul\":11960:11978   */\n      dup2\n        /* \"#utility.yul\":11957:11995   */\n      sub\n        /* \"#utility.yul\":11954:12038   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":12010:12028   */\n      tag_486\n      tag_349\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11954:12038   */\n    tag_485:\n        /* \"#utility.yul\":11775:12044   */\n      pop\n        /* \"#utility.yul\":11724:12044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12050:12288   */\n    tag_350:\n        /* \"#utility.yul\":12190:12224   */\n      0x5350533a3a72656e6f756e6365526f6c653a2063616e206f6e6c792072656e6f\n        /* \"#utility.yul\":12186:12187   */\n      0x00\n        /* \"#utility.yul\":12178:12184   */\n      dup3\n        /* \"#utility.yul\":12174:12188   */\n      add\n        /* \"#utility.yul\":12167:12225   */\n      mstore\n        /* \"#utility.yul\":12259:12280   */\n      0x756e636520726f6c657320666f722073656c6600000000000000000000000000\n        /* \"#utility.yul\":12254:12256   */\n      0x20\n        /* \"#utility.yul\":12246:12252   */\n      dup3\n        /* \"#utility.yul\":12242:12257   */\n      add\n        /* \"#utility.yul\":12235:12281   */\n      mstore\n        /* \"#utility.yul\":12050:12288   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12294:12660   */\n    tag_351:\n        /* \"#utility.yul\":12436:12439   */\n      0x00\n        /* \"#utility.yul\":12457:12524   */\n      tag_489\n        /* \"#utility.yul\":12521:12523   */\n      0x33\n        /* \"#utility.yul\":12516:12519   */\n      dup4\n        /* \"#utility.yul\":12457:12524   */\n      tag_321\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12450:12524   */\n      swap2\n      pop\n        /* \"#utility.yul\":12533:12626   */\n      tag_490\n        /* \"#utility.yul\":12622:12625   */\n      dup3\n        /* \"#utility.yul\":12533:12626   */\n      tag_350\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12651:12653   */\n      0x40\n        /* \"#utility.yul\":12646:12649   */\n      dup3\n        /* \"#utility.yul\":12642:12654   */\n      add\n        /* \"#utility.yul\":12635:12654   */\n      swap1\n      pop\n        /* \"#utility.yul\":12294:12660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12666:13085   */\n    tag_158:\n        /* \"#utility.yul\":12832:12836   */\n      0x00\n        /* \"#utility.yul\":12870:12872   */\n      0x20\n        /* \"#utility.yul\":12859:12868   */\n      dup3\n        /* \"#utility.yul\":12855:12873   */\n      add\n        /* \"#utility.yul\":12847:12873   */\n      swap1\n      pop\n        /* \"#utility.yul\":12919:12928   */\n      dup2\n        /* \"#utility.yul\":12913:12917   */\n      dup2\n        /* \"#utility.yul\":12909:12929   */\n      sub\n        /* \"#utility.yul\":12905:12906   */\n      0x00\n        /* \"#utility.yul\":12894:12903   */\n      dup4\n        /* \"#utility.yul\":12890:12907   */\n      add\n        /* \"#utility.yul\":12883:12930   */\n      mstore\n        /* \"#utility.yul\":12947:13078   */\n      tag_492\n        /* \"#utility.yul\":13073:13077   */\n      dup2\n        /* \"#utility.yul\":12947:13078   */\n      tag_351\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12939:13078   */\n      swap1\n      pop\n        /* \"#utility.yul\":12666:13085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13091:13271   */\n    tag_187:\n        /* \"#utility.yul\":13139:13216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13136:13137   */\n      0x00\n        /* \"#utility.yul\":13129:13217   */\n      mstore\n        /* \"#utility.yul\":13236:13240   */\n      0x41\n        /* \"#utility.yul\":13233:13234   */\n      0x04\n        /* \"#utility.yul\":13226:13241   */\n      mstore\n        /* \"#utility.yul\":13260:13264   */\n      0x24\n        /* \"#utility.yul\":13257:13258   */\n      0x00\n        /* \"#utility.yul\":13250:13265   */\n      revert\n        /* \"#utility.yul\":13277:13719   */\n    tag_216:\n        /* \"#utility.yul\":13426:13430   */\n      0x00\n        /* \"#utility.yul\":13464:13466   */\n      0x60\n        /* \"#utility.yul\":13453:13462   */\n      dup3\n        /* \"#utility.yul\":13449:13467   */\n      add\n        /* \"#utility.yul\":13441:13467   */\n      swap1\n      pop\n        /* \"#utility.yul\":13477:13548   */\n      tag_495\n        /* \"#utility.yul\":13545:13546   */\n      0x00\n        /* \"#utility.yul\":13534:13543   */\n      dup4\n        /* \"#utility.yul\":13530:13547   */\n      add\n        /* \"#utility.yul\":13521:13527   */\n      dup7\n        /* \"#utility.yul\":13477:13548   */\n      tag_341\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13558:13630   */\n      tag_496\n        /* \"#utility.yul\":13626:13628   */\n      0x20\n        /* \"#utility.yul\":13615:13624   */\n      dup4\n        /* \"#utility.yul\":13611:13629   */\n      add\n        /* \"#utility.yul\":13602:13608   */\n      dup6\n        /* \"#utility.yul\":13558:13630   */\n      tag_332\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13640:13712   */\n      tag_497\n        /* \"#utility.yul\":13708:13710   */\n      0x40\n        /* \"#utility.yul\":13697:13706   */\n      dup4\n        /* \"#utility.yul\":13693:13711   */\n      add\n        /* \"#utility.yul\":13684:13690   */\n      dup5\n        /* \"#utility.yul\":13640:13712   */\n      tag_332\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13277:13719   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13725:13947   */\n    tag_221:\n        /* \"#utility.yul\":13818:13822   */\n      0x00\n        /* \"#utility.yul\":13856:13858   */\n      0x20\n        /* \"#utility.yul\":13845:13854   */\n      dup3\n        /* \"#utility.yul\":13841:13859   */\n      add\n        /* \"#utility.yul\":13833:13859   */\n      swap1\n      pop\n        /* \"#utility.yul\":13869:13940   */\n      tag_499\n        /* \"#utility.yul\":13937:13938   */\n      0x00\n        /* \"#utility.yul\":13926:13935   */\n      dup4\n        /* \"#utility.yul\":13922:13939   */\n      add\n        /* \"#utility.yul\":13913:13919   */\n      dup5\n        /* \"#utility.yul\":13869:13940   */\n      tag_341\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13725:13947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13953:14133   */\n    tag_352:\n        /* \"#utility.yul\":14001:14078   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13998:13999   */\n      0x00\n        /* \"#utility.yul\":13991:14079   */\n      mstore\n        /* \"#utility.yul\":14098:14102   */\n      0x11\n        /* \"#utility.yul\":14095:14096   */\n      0x04\n        /* \"#utility.yul\":14088:14103   */\n      mstore\n        /* \"#utility.yul\":14122:14126   */\n      0x24\n        /* \"#utility.yul\":14119:14120   */\n      0x00\n        /* \"#utility.yul\":14112:14127   */\n      revert\n        /* \"#utility.yul\":14139:14330   */\n    tag_272:\n        /* \"#utility.yul\":14179:14182   */\n      0x00\n        /* \"#utility.yul\":14198:14218   */\n      tag_502\n        /* \"#utility.yul\":14216:14217   */\n      dup3\n        /* \"#utility.yul\":14198:14218   */\n      tag_329\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14193:14218   */\n      swap2\n      pop\n        /* \"#utility.yul\":14232:14252   */\n      tag_503\n        /* \"#utility.yul\":14250:14251   */\n      dup4\n        /* \"#utility.yul\":14232:14252   */\n      tag_329\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14227:14252   */\n      swap3\n      pop\n        /* \"#utility.yul\":14275:14276   */\n      dup3\n        /* \"#utility.yul\":14272:14273   */\n      dup3\n        /* \"#utility.yul\":14268:14277   */\n      add\n        /* \"#utility.yul\":14261:14277   */\n      swap1\n      pop\n        /* \"#utility.yul\":14296:14299   */\n      dup1\n        /* \"#utility.yul\":14293:14294   */\n      dup3\n        /* \"#utility.yul\":14290:14300   */\n      gt\n        /* \"#utility.yul\":14287:14323   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":14303:14321   */\n      tag_505\n      tag_352\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14287:14323   */\n    tag_504:\n        /* \"#utility.yul\":14139:14330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14336:14668   */\n    tag_283:\n        /* \"#utility.yul\":14457:14461   */\n      0x00\n        /* \"#utility.yul\":14495:14497   */\n      0x40\n        /* \"#utility.yul\":14484:14493   */\n      dup3\n        /* \"#utility.yul\":14480:14498   */\n      add\n        /* \"#utility.yul\":14472:14498   */\n      swap1\n      pop\n        /* \"#utility.yul\":14508:14579   */\n      tag_507\n        /* \"#utility.yul\":14576:14577   */\n      0x00\n        /* \"#utility.yul\":14565:14574   */\n      dup4\n        /* \"#utility.yul\":14561:14578   */\n      add\n        /* \"#utility.yul\":14552:14558   */\n      dup6\n        /* \"#utility.yul\":14508:14579   */\n      tag_341\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14589:14661   */\n      tag_508\n        /* \"#utility.yul\":14657:14659   */\n      0x20\n        /* \"#utility.yul\":14646:14655   */\n      dup4\n        /* \"#utility.yul\":14642:14660   */\n      add\n        /* \"#utility.yul\":14633:14639   */\n      dup5\n        /* \"#utility.yul\":14589:14661   */\n      tag_336\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14336:14668   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b360732b887d6fc10615b4b1043dc17d42ecfb9557669270a5b885b1c72bca7e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1257": {
									"entryPoint": null,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2331": {
									"entryPoint": null,
									"id": 2331,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3789": {
									"entryPoint": null,
									"id": 3789,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_592": {
									"entryPoint": null,
									"id": 592,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2378": {
									"entryPoint": 619,
									"id": 2378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 711,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1217": {
									"entryPoint": 1178,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1608": {
									"entryPoint": 1069,
									"id": 1608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 1078,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1462": {
									"entryPoint": 534,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1364": {
									"entryPoint": 963,
									"id": 1364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8813:21",
										"nodeType": "YulBlock",
										"src": "0:8813:21",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:21",
													"nodeType": "YulBlock",
													"src": "66:40:21",
													"statements": [
														{
															"nativeSrc": "77:22:21",
															"nodeType": "YulAssignment",
															"src": "77:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:21"
																},
																"nativeSrc": "87:12:21",
																"nodeType": "YulFunctionCall",
																"src": "87:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:21",
														"nodeType": "YulTypedName",
														"src": "49:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:21",
														"nodeType": "YulTypedName",
														"src": "59:6:21",
														"type": ""
													}
												],
												"src": "7:99:21"
											},
											{
												"body": {
													"nativeSrc": "140:152:21",
													"nodeType": "YulBlock",
													"src": "140:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:21",
																		"nodeType": "YulLiteral",
																		"src": "157:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:21",
																		"nodeType": "YulLiteral",
																		"src": "160:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:21"
																},
																"nativeSrc": "150:88:21",
																"nodeType": "YulFunctionCall",
																"src": "150:88:21"
															},
															"nativeSrc": "150:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:21",
																		"nodeType": "YulLiteral",
																		"src": "254:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:21",
																		"nodeType": "YulLiteral",
																		"src": "257:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:21"
																},
																"nativeSrc": "247:15:21",
																"nodeType": "YulFunctionCall",
																"src": "247:15:21"
															},
															"nativeSrc": "247:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:21",
																		"nodeType": "YulLiteral",
																		"src": "278:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:21",
																		"nodeType": "YulLiteral",
																		"src": "281:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:21"
																},
																"nativeSrc": "271:15:21",
																"nodeType": "YulFunctionCall",
																"src": "271:15:21"
															},
															"nativeSrc": "271:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:21"
											},
											{
												"body": {
													"nativeSrc": "326:152:21",
													"nodeType": "YulBlock",
													"src": "326:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:21",
																		"nodeType": "YulLiteral",
																		"src": "343:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:21",
																		"nodeType": "YulLiteral",
																		"src": "346:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:21"
																},
																"nativeSrc": "336:88:21",
																"nodeType": "YulFunctionCall",
																"src": "336:88:21"
															},
															"nativeSrc": "336:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:21",
																		"nodeType": "YulLiteral",
																		"src": "440:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:21",
																		"nodeType": "YulLiteral",
																		"src": "443:4:21",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:21"
																},
																"nativeSrc": "433:15:21",
																"nodeType": "YulFunctionCall",
																"src": "433:15:21"
															},
															"nativeSrc": "433:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:21",
																		"nodeType": "YulLiteral",
																		"src": "464:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:21",
																		"nodeType": "YulLiteral",
																		"src": "467:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:21"
																},
																"nativeSrc": "457:15:21",
																"nodeType": "YulFunctionCall",
																"src": "457:15:21"
															},
															"nativeSrc": "457:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:21"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:21"
											},
											{
												"body": {
													"nativeSrc": "535:269:21",
													"nodeType": "YulBlock",
													"src": "535:269:21",
													"statements": [
														{
															"nativeSrc": "545:22:21",
															"nodeType": "YulAssignment",
															"src": "545:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:21",
																		"nodeType": "YulLiteral",
																		"src": "565:1:21",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:21"
																},
																"nativeSrc": "555:12:21",
																"nodeType": "YulFunctionCall",
																"src": "555:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:21"
																}
															]
														},
														{
															"nativeSrc": "576:38:21",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:21",
																		"nodeType": "YulLiteral",
																		"src": "612:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:21"
																},
																"nativeSrc": "602:12:21",
																"nodeType": "YulFunctionCall",
																"src": "602:12:21"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:21",
																	"nodeType": "YulTypedName",
																	"src": "580:18:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:21",
																"nodeType": "YulBlock",
																"src": "653:51:21",
																"statements": [
																	{
																		"nativeSrc": "667:27:21",
																		"nodeType": "YulAssignment",
																		"src": "667:27:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:21",
																					"nodeType": "YulLiteral",
																					"src": "689:4:21",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:21"
																			},
																			"nativeSrc": "677:17:21",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:21"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:21"
																},
																"nativeSrc": "626:26:21",
																"nodeType": "YulFunctionCall",
																"src": "626:26:21"
															},
															"nativeSrc": "623:81:21",
															"nodeType": "YulIf",
															"src": "623:81:21"
														},
														{
															"body": {
																"nativeSrc": "756:42:21",
																"nodeType": "YulBlock",
																"src": "756:42:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:21"
																			},
																			"nativeSrc": "770:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:21"
																		},
																		"nativeSrc": "770:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:21",
																				"nodeType": "YulLiteral",
																				"src": "751:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:21"
																		},
																		"nativeSrc": "740:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:21"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:21"
																},
																"nativeSrc": "717:38:21",
																"nodeType": "YulFunctionCall",
																"src": "717:38:21"
															},
															"nativeSrc": "714:84:21",
															"nodeType": "YulIf",
															"src": "714:84:21"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:21",
														"nodeType": "YulTypedName",
														"src": "519:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:21",
														"nodeType": "YulTypedName",
														"src": "528:6:21",
														"type": ""
													}
												],
												"src": "484:320:21"
											},
											{
												"body": {
													"nativeSrc": "864:87:21",
													"nodeType": "YulBlock",
													"src": "864:87:21",
													"statements": [
														{
															"nativeSrc": "874:11:21",
															"nodeType": "YulAssignment",
															"src": "874:11:21",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:21",
																"nodeType": "YulIdentifier",
																"src": "882:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:21",
																		"nodeType": "YulLiteral",
																		"src": "902:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:21"
																},
																"nativeSrc": "895:14:21",
																"nodeType": "YulFunctionCall",
																"src": "895:14:21"
															},
															"nativeSrc": "895:14:21",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:21"
														},
														{
															"nativeSrc": "918:26:21",
															"nodeType": "YulAssignment",
															"src": "918:26:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:21",
																		"nodeType": "YulLiteral",
																		"src": "936:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:21",
																		"nodeType": "YulLiteral",
																		"src": "939:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:21"
																},
																"nativeSrc": "926:18:21",
																"nodeType": "YulFunctionCall",
																"src": "926:18:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:21",
														"nodeType": "YulTypedName",
														"src": "851:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:21",
														"nodeType": "YulTypedName",
														"src": "859:4:21",
														"type": ""
													}
												],
												"src": "810:141:21"
											},
											{
												"body": {
													"nativeSrc": "1001:49:21",
													"nodeType": "YulBlock",
													"src": "1001:49:21",
													"statements": [
														{
															"nativeSrc": "1011:33:21",
															"nodeType": "YulAssignment",
															"src": "1011:33:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:21",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:21"
																		},
																		"nativeSrc": "1025:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:21"
																},
																"nativeSrc": "1021:23:21",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:21"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:21",
														"nodeType": "YulTypedName",
														"src": "984:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:21",
														"nodeType": "YulTypedName",
														"src": "994:6:21",
														"type": ""
													}
												],
												"src": "957:93:21"
											},
											{
												"body": {
													"nativeSrc": "1109:54:21",
													"nodeType": "YulBlock",
													"src": "1109:54:21",
													"statements": [
														{
															"nativeSrc": "1119:37:21",
															"nodeType": "YulAssignment",
															"src": "1119:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:21"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:21"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:21"
																},
																"nativeSrc": "1140:16:21",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:21"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:21",
														"nodeType": "YulTypedName",
														"src": "1084:4:21",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:21",
														"nodeType": "YulTypedName",
														"src": "1090:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:21",
														"nodeType": "YulTypedName",
														"src": "1100:8:21",
														"type": ""
													}
												],
												"src": "1056:107:21"
											},
											{
												"body": {
													"nativeSrc": "1245:317:21",
													"nodeType": "YulBlock",
													"src": "1245:317:21",
													"statements": [
														{
															"nativeSrc": "1255:35:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:21",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:21",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:21",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:21"
																},
																"nativeSrc": "1272:18:21",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:21"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:21",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:21",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:21"
																},
																"nativeSrc": "1311:97:21",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:21"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:21",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:21",
															"nodeType": "YulAssignment",
															"src": "1417:51:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:21"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:21",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:21"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:21"
																},
																"nativeSrc": "1429:39:21",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:21"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:21"
																}
															]
														},
														{
															"nativeSrc": "1477:30:21",
															"nodeType": "YulAssignment",
															"src": "1477:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:21"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:21"
																		},
																		"nativeSrc": "1497:9:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:21"
																},
																"nativeSrc": "1486:21:21",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:21"
																}
															]
														},
														{
															"nativeSrc": "1516:40:21",
															"nodeType": "YulAssignment",
															"src": "1516:40:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:21",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:21"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:21"
																		},
																		"nativeSrc": "1536:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:21"
																},
																"nativeSrc": "1526:30:21",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:21"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:21",
														"nodeType": "YulTypedName",
														"src": "1206:5:21",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:21",
														"nodeType": "YulTypedName",
														"src": "1213:10:21",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:21",
														"nodeType": "YulTypedName",
														"src": "1225:8:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:21",
														"nodeType": "YulTypedName",
														"src": "1238:6:21",
														"type": ""
													}
												],
												"src": "1169:393:21"
											},
											{
												"body": {
													"nativeSrc": "1613:32:21",
													"nodeType": "YulBlock",
													"src": "1613:32:21",
													"statements": [
														{
															"nativeSrc": "1623:16:21",
															"nodeType": "YulAssignment",
															"src": "1623:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:21",
																"nodeType": "YulIdentifier",
																"src": "1634:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:21",
														"nodeType": "YulTypedName",
														"src": "1595:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:21",
														"nodeType": "YulTypedName",
														"src": "1605:7:21",
														"type": ""
													}
												],
												"src": "1568:77:21"
											},
											{
												"body": {
													"nativeSrc": "1683:28:21",
													"nodeType": "YulBlock",
													"src": "1683:28:21",
													"statements": [
														{
															"nativeSrc": "1693:12:21",
															"nodeType": "YulAssignment",
															"src": "1693:12:21",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:21",
																"nodeType": "YulIdentifier",
																"src": "1700:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:21"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:21",
														"nodeType": "YulTypedName",
														"src": "1669:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:21",
														"nodeType": "YulTypedName",
														"src": "1679:3:21",
														"type": ""
													}
												],
												"src": "1651:60:21"
											},
											{
												"body": {
													"nativeSrc": "1777:82:21",
													"nodeType": "YulBlock",
													"src": "1777:82:21",
													"statements": [
														{
															"nativeSrc": "1787:66:21",
															"nodeType": "YulAssignment",
															"src": "1787:66:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:21"
																				},
																				"nativeSrc": "1827:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:21"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:21",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:21"
																		},
																		"nativeSrc": "1818:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:21"
																},
																"nativeSrc": "1800:53:21",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:21",
														"nodeType": "YulTypedName",
														"src": "1757:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:21",
														"nodeType": "YulTypedName",
														"src": "1767:9:21",
														"type": ""
													}
												],
												"src": "1717:142:21"
											},
											{
												"body": {
													"nativeSrc": "1912:28:21",
													"nodeType": "YulBlock",
													"src": "1912:28:21",
													"statements": [
														{
															"nativeSrc": "1922:12:21",
															"nodeType": "YulAssignment",
															"src": "1922:12:21",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:21",
																"nodeType": "YulIdentifier",
																"src": "1929:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:21"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:21",
														"nodeType": "YulTypedName",
														"src": "1898:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:21",
														"nodeType": "YulTypedName",
														"src": "1908:3:21",
														"type": ""
													}
												],
												"src": "1865:75:21"
											},
											{
												"body": {
													"nativeSrc": "2022:193:21",
													"nodeType": "YulBlock",
													"src": "2022:193:21",
													"statements": [
														{
															"nativeSrc": "2032:63:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:21",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:21"
																},
																"nativeSrc": "2056:39:21",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:21"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:21",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:21",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:21"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:21"
																				},
																				"nativeSrc": "2145:11:21",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:21"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:21",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:21"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:21",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:21"
																				},
																				"nativeSrc": "2166:41:21",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:21"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:21",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:21"
																		},
																		"nativeSrc": "2117:91:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:21"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:21"
																},
																"nativeSrc": "2104:105:21",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:21"
															},
															"nativeSrc": "2104:105:21",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:21"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:21",
														"nodeType": "YulTypedName",
														"src": "1999:4:21",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:21",
														"nodeType": "YulTypedName",
														"src": "2005:6:21",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:21",
														"nodeType": "YulTypedName",
														"src": "2013:7:21",
														"type": ""
													}
												],
												"src": "1946:269:21"
											},
											{
												"body": {
													"nativeSrc": "2270:24:21",
													"nodeType": "YulBlock",
													"src": "2270:24:21",
													"statements": [
														{
															"nativeSrc": "2280:8:21",
															"nodeType": "YulAssignment",
															"src": "2280:8:21",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:21",
																"nodeType": "YulLiteral",
																"src": "2287:1:21",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:21"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:21",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:21",
														"nodeType": "YulTypedName",
														"src": "2266:3:21",
														"type": ""
													}
												],
												"src": "2221:73:21"
											},
											{
												"body": {
													"nativeSrc": "2353:136:21",
													"nodeType": "YulBlock",
													"src": "2353:136:21",
													"statements": [
														{
															"nativeSrc": "2363:46:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:21"
																},
																"nativeSrc": "2377:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:21"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:21",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:21"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:21"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:21"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:21"
																},
																"nativeSrc": "2418:65:21",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:21"
															},
															"nativeSrc": "2418:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:21"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:21",
														"nodeType": "YulTypedName",
														"src": "2339:4:21",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:21",
														"nodeType": "YulTypedName",
														"src": "2345:6:21",
														"type": ""
													}
												],
												"src": "2300:189:21"
											},
											{
												"body": {
													"nativeSrc": "2545:136:21",
													"nodeType": "YulBlock",
													"src": "2545:136:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:21",
																"nodeType": "YulBlock",
																"src": "2612:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:21",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:21"
																			},
																			"nativeSrc": "2626:39:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:21"
																		},
																		"nativeSrc": "2626:39:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:21"
																},
																"nativeSrc": "2562:14:21",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:21"
															},
															"nativeSrc": "2555:120:21",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:21",
																"nodeType": "YulBlock",
																"src": "2577:26:21",
																"statements": [
																	{
																		"nativeSrc": "2579:22:21",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:21",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:21"
																			},
																			"nativeSrc": "2588:13:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:21"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:21",
																"nodeType": "YulBlock",
																"src": "2559:2:21",
																"statements": []
															},
															"src": "2555:120:21"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:21",
														"nodeType": "YulTypedName",
														"src": "2533:5:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:21",
														"nodeType": "YulTypedName",
														"src": "2540:3:21",
														"type": ""
													}
												],
												"src": "2495:186:21"
											},
											{
												"body": {
													"nativeSrc": "2766:464:21",
													"nodeType": "YulBlock",
													"src": "2766:464:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:21",
																"nodeType": "YulBlock",
																"src": "2792:431:21",
																"statements": [
																	{
																		"nativeSrc": "2806:54:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:21"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:21",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:21"
																			},
																			"nativeSrc": "2822:38:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:21"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:21",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:21",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:21",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:21"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:21",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:21"
																					},
																					"nativeSrc": "2906:29:21",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:21"
																			},
																			"nativeSrc": "2892:44:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:21"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:21",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:21",
																			"nodeType": "YulBlock",
																			"src": "3093:27:21",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:21",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:21",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:21",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:21"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:21",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:21"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:21",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:21",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:21"
																			},
																			"nativeSrc": "3074:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:21"
																		},
																		"nativeSrc": "3071:49:21",
																		"nodeType": "YulIf",
																		"src": "3071:49:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:21",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:21",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:21"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:21",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:21"
																							},
																							"nativeSrc": "3189:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:21"
																					},
																					"nativeSrc": "3175:37:21",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:21"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:21",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:21"
																			},
																			"nativeSrc": "3133:80:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:21"
																		},
																		"nativeSrc": "3133:80:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:21"
																},
																"nativeSrc": "2780:11:21",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:21"
															},
															"nativeSrc": "2777:446:21",
															"nodeType": "YulIf",
															"src": "2777:446:21"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:21",
														"nodeType": "YulTypedName",
														"src": "2742:5:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:21",
														"nodeType": "YulTypedName",
														"src": "2749:3:21",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:21",
														"nodeType": "YulTypedName",
														"src": "2754:10:21",
														"type": ""
													}
												],
												"src": "2687:543:21"
											},
											{
												"body": {
													"nativeSrc": "3299:54:21",
													"nodeType": "YulBlock",
													"src": "3299:54:21",
													"statements": [
														{
															"nativeSrc": "3309:37:21",
															"nodeType": "YulAssignment",
															"src": "3309:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:21"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:21"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:21"
																},
																"nativeSrc": "3330:16:21",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:21"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:21",
														"nodeType": "YulTypedName",
														"src": "3274:4:21",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:21",
														"nodeType": "YulTypedName",
														"src": "3280:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:21",
														"nodeType": "YulTypedName",
														"src": "3290:8:21",
														"type": ""
													}
												],
												"src": "3236:117:21"
											},
											{
												"body": {
													"nativeSrc": "3410:118:21",
													"nodeType": "YulBlock",
													"src": "3410:118:21",
													"statements": [
														{
															"nativeSrc": "3420:68:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:21",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:21",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:21"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:21"
																				},
																				"nativeSrc": "3465:13:21",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:21",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:21"
																				},
																				"nativeSrc": "3480:6:21",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:21"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:21",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:21"
																		},
																		"nativeSrc": "3436:51:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:21"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:21"
																},
																"nativeSrc": "3432:56:21",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:21"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:21",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:21",
															"nodeType": "YulAssignment",
															"src": "3497:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:21"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:21"
																},
																"nativeSrc": "3507:15:21",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:21"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:21",
														"nodeType": "YulTypedName",
														"src": "3387:4:21",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:21",
														"nodeType": "YulTypedName",
														"src": "3393:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:21",
														"nodeType": "YulTypedName",
														"src": "3403:6:21",
														"type": ""
													}
												],
												"src": "3359:169:21"
											},
											{
												"body": {
													"nativeSrc": "3614:214:21",
													"nodeType": "YulBlock",
													"src": "3614:214:21",
													"statements": [
														{
															"nativeSrc": "3747:37:21",
															"nodeType": "YulAssignment",
															"src": "3747:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:21"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:21"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:21"
																},
																"nativeSrc": "3755:29:21",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:21"
																}
															]
														},
														{
															"nativeSrc": "3793:29:21",
															"nodeType": "YulAssignment",
															"src": "3793:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:21",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:21",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:21"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:21"
																		},
																		"nativeSrc": "3810:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:21"
																},
																"nativeSrc": "3801:21:21",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:21"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:21"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:21",
														"nodeType": "YulTypedName",
														"src": "3595:4:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:21",
														"nodeType": "YulTypedName",
														"src": "3601:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:21",
														"nodeType": "YulTypedName",
														"src": "3609:4:21",
														"type": ""
													}
												],
												"src": "3533:295:21"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:21",
													"nodeType": "YulBlock",
													"src": "3925:1303:21",
													"statements": [
														{
															"nativeSrc": "3936:51:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:21",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:21"
																},
																"nativeSrc": "3950:37:21",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:21"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:21",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:21",
																"nodeType": "YulBlock",
																"src": "4072:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:21"
																			},
																			"nativeSrc": "4074:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:21"
																		},
																		"nativeSrc": "4074:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:21",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:21"
																},
																"nativeSrc": "4041:30:21",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:21"
															},
															"nativeSrc": "4038:56:21",
															"nodeType": "YulIf",
															"src": "4038:56:21"
														},
														{
															"nativeSrc": "4104:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:21"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:21",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:21"
																		},
																		"nativeSrc": "4144:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:21"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:21"
																},
																"nativeSrc": "4118:38:21",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:21"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:21",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:21"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:21"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:21"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:21",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:21"
																},
																"nativeSrc": "4203:67:21",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:21"
															},
															"nativeSrc": "4203:67:21",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:21"
														},
														{
															"nativeSrc": "4280:18:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:21",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:21",
																"nodeType": "YulLiteral",
																"src": "4297:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:21",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:21",
															"nodeType": "YulAssignment",
															"src": "4308:17:21",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:21",
																"nodeType": "YulLiteral",
																"src": "4321:4:21",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:21"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:21",
																		"nodeType": "YulBlock",
																		"src": "4372:611:21",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:21"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:21",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:21",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:21"
																							},
																							"nativeSrc": "4413:9:21",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:21"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:21"
																					},
																					"nativeSrc": "4401:22:21",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:21"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:21",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:21"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:21",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:21"
																					},
																					"nativeSrc": "4451:37:21",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:21"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:21",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:21",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:21",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:21",
																					"nodeType": "YulBlock",
																					"src": "4569:163:21",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:21",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:21"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:21",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:21"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:21"
																												},
																												"nativeSrc": "4608:19:21",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:21"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:21",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:21"
																										},
																										"nativeSrc": "4602:26:21",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:21"
																								},
																								"nativeSrc": "4587:42:21",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:21"
																							},
																							"nativeSrc": "4587:42:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:21"
																						},
																						{
																							"nativeSrc": "4646:24:21",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:21",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:21"
																								},
																								"nativeSrc": "4656:14:21",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:21"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:21"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:21",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:21",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:21",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:21",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:21"
																								},
																								"nativeSrc": "4700:18:21",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:21"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:21",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:21",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:21"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:21"
																					},
																					"nativeSrc": "4532:14:21",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:21"
																				},
																				"nativeSrc": "4524:208:21",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:21",
																					"nodeType": "YulBlock",
																					"src": "4547:21:21",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:21",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:21",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:21",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:21",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:21"
																								},
																								"nativeSrc": "4554:12:21",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:21"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:21",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:21"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:21",
																					"nodeType": "YulBlock",
																					"src": "4528:3:21",
																					"statements": []
																				},
																				"src": "4524:208:21"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:21",
																					"nodeType": "YulBlock",
																					"src": "4768:156:21",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:21",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:21"
																										},
																										"nativeSrc": "4809:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:21"
																								},
																								"nativeSrc": "4803:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:21"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:21",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:21",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:21"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:21",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:21"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:21",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:21",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:21"
																												},
																												"nativeSrc": "4891:17:21",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:21"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:21",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:21"
																										},
																										"nativeSrc": "4861:48:21",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:21"
																								},
																								"nativeSrc": "4846:64:21",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:21"
																							},
																							"nativeSrc": "4846:64:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:21"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:21"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:21"
																					},
																					"nativeSrc": "4748:19:21",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:21"
																				},
																				"nativeSrc": "4745:179:21",
																				"nodeType": "YulIf",
																				"src": "4745:179:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:21",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:21"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:21",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:21",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:21",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:21"
																									},
																									"nativeSrc": "4954:14:21",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:21"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:21",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:21",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:21"
																							},
																							"nativeSrc": "4950:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:21"
																					},
																					"nativeSrc": "4937:36:21",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:21"
																				},
																				"nativeSrc": "4937:36:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:21"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:21",
																	"nodeType": "YulCase",
																	"src": "4365:618:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:21",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:21",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:21",
																		"nodeType": "YulBlock",
																		"src": "5000:222:21",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:21",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:21",
																					"nodeType": "YulBlock",
																					"src": "5051:67:21",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:21",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:21"
																										},
																										"nativeSrc": "5084:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:21"
																								},
																								"nativeSrc": "5078:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:21"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:21"
																				},
																				"nativeSrc": "5041:77:21",
																				"nodeType": "YulIf",
																				"src": "5041:77:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:21"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:21"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:21",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:21"
																							},
																							"nativeSrc": "5144:67:21",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:21"
																					},
																					"nativeSrc": "5131:81:21",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:21"
																				},
																				"nativeSrc": "5131:81:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:21"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:21",
																	"nodeType": "YulCase",
																	"src": "4992:230:21",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:21"
																},
																"nativeSrc": "4342:14:21",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:21"
															},
															"nativeSrc": "4335:887:21",
															"nodeType": "YulSwitch",
															"src": "4335:887:21"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:21",
														"nodeType": "YulTypedName",
														"src": "3914:4:21",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:21",
														"nodeType": "YulTypedName",
														"src": "3920:3:21",
														"type": ""
													}
												],
												"src": "3833:1395:21"
											},
											{
												"body": {
													"nativeSrc": "5279:32:21",
													"nodeType": "YulBlock",
													"src": "5279:32:21",
													"statements": [
														{
															"nativeSrc": "5289:16:21",
															"nodeType": "YulAssignment",
															"src": "5289:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "5300:5:21",
																"nodeType": "YulIdentifier",
																"src": "5300:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5234:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:21",
														"nodeType": "YulTypedName",
														"src": "5261:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:21",
														"nodeType": "YulTypedName",
														"src": "5271:7:21",
														"type": ""
													}
												],
												"src": "5234:77:21"
											},
											{
												"body": {
													"nativeSrc": "5382:53:21",
													"nodeType": "YulBlock",
													"src": "5382:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5399:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5399:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5422:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5422:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5404:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "5404:17:21"
																		},
																		"nativeSrc": "5404:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5404:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5392:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:21"
																},
																"nativeSrc": "5392:37:21",
																"nodeType": "YulFunctionCall",
																"src": "5392:37:21"
															},
															"nativeSrc": "5392:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "5392:37:21"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5317:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5370:5:21",
														"nodeType": "YulTypedName",
														"src": "5370:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5377:3:21",
														"nodeType": "YulTypedName",
														"src": "5377:3:21",
														"type": ""
													}
												],
												"src": "5317:118:21"
											},
											{
												"body": {
													"nativeSrc": "5506:53:21",
													"nodeType": "YulBlock",
													"src": "5506:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5523:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5523:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5546:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5546:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5528:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "5528:17:21"
																		},
																		"nativeSrc": "5528:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5516:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:21"
																},
																"nativeSrc": "5516:37:21",
																"nodeType": "YulFunctionCall",
																"src": "5516:37:21"
															},
															"nativeSrc": "5516:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "5516:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5441:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5494:5:21",
														"nodeType": "YulTypedName",
														"src": "5494:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5501:3:21",
														"nodeType": "YulTypedName",
														"src": "5501:3:21",
														"type": ""
													}
												],
												"src": "5441:118:21"
											},
											{
												"body": {
													"nativeSrc": "5610:81:21",
													"nodeType": "YulBlock",
													"src": "5610:81:21",
													"statements": [
														{
															"nativeSrc": "5620:65:21",
															"nodeType": "YulAssignment",
															"src": "5620:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5635:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "5635:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5642:42:21",
																		"nodeType": "YulLiteral",
																		"src": "5642:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5631:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:21"
																},
																"nativeSrc": "5631:54:21",
																"nodeType": "YulFunctionCall",
																"src": "5631:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5620:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "5620:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5565:126:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5592:5:21",
														"nodeType": "YulTypedName",
														"src": "5592:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5602:7:21",
														"nodeType": "YulTypedName",
														"src": "5602:7:21",
														"type": ""
													}
												],
												"src": "5565:126:21"
											},
											{
												"body": {
													"nativeSrc": "5742:51:21",
													"nodeType": "YulBlock",
													"src": "5742:51:21",
													"statements": [
														{
															"nativeSrc": "5752:35:21",
															"nodeType": "YulAssignment",
															"src": "5752:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5781:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "5781:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5763:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "5763:17:21"
																},
																"nativeSrc": "5763:24:21",
																"nodeType": "YulFunctionCall",
																"src": "5763:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5752:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "5752:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5697:96:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5724:5:21",
														"nodeType": "YulTypedName",
														"src": "5724:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5734:7:21",
														"nodeType": "YulTypedName",
														"src": "5734:7:21",
														"type": ""
													}
												],
												"src": "5697:96:21"
											},
											{
												"body": {
													"nativeSrc": "5864:53:21",
													"nodeType": "YulBlock",
													"src": "5864:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5881:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5881:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5904:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5904:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5886:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "5886:17:21"
																		},
																		"nativeSrc": "5886:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5886:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5874:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:21"
																},
																"nativeSrc": "5874:37:21",
																"nodeType": "YulFunctionCall",
																"src": "5874:37:21"
															},
															"nativeSrc": "5874:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "5874:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5799:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5852:5:21",
														"nodeType": "YulTypedName",
														"src": "5852:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5859:3:21",
														"nodeType": "YulTypedName",
														"src": "5859:3:21",
														"type": ""
													}
												],
												"src": "5799:118:21"
											},
											{
												"body": {
													"nativeSrc": "6133:454:21",
													"nodeType": "YulBlock",
													"src": "6133:454:21",
													"statements": [
														{
															"nativeSrc": "6143:27:21",
															"nodeType": "YulAssignment",
															"src": "6143:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6155:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6166:3:21",
																		"nodeType": "YulLiteral",
																		"src": "6166:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6151:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6151:3:21"
																},
																"nativeSrc": "6151:19:21",
																"nodeType": "YulFunctionCall",
																"src": "6151:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6143:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6143:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6224:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6224:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:1:21",
																				"nodeType": "YulLiteral",
																				"src": "6248:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:21"
																		},
																		"nativeSrc": "6233:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6180:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6180:43:21"
																},
																"nativeSrc": "6180:71:21",
																"nodeType": "YulFunctionCall",
																"src": "6180:71:21"
															},
															"nativeSrc": "6180:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "6180:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6305:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6305:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6318:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6318:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6329:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6329:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6314:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:21"
																		},
																		"nativeSrc": "6314:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6314:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6261:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6261:43:21"
																},
																"nativeSrc": "6261:72:21",
																"nodeType": "YulFunctionCall",
																"src": "6261:72:21"
															},
															"nativeSrc": "6261:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "6261:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6387:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6387:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6400:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6400:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6411:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6411:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6396:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6396:3:21"
																		},
																		"nativeSrc": "6396:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6396:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6343:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6343:43:21"
																},
																"nativeSrc": "6343:72:21",
																"nodeType": "YulFunctionCall",
																"src": "6343:72:21"
															},
															"nativeSrc": "6343:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "6343:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6469:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6469:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6482:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6482:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6493:2:21",
																				"nodeType": "YulLiteral",
																				"src": "6493:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6478:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6478:3:21"
																		},
																		"nativeSrc": "6478:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6478:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6425:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6425:43:21"
																},
																"nativeSrc": "6425:72:21",
																"nodeType": "YulFunctionCall",
																"src": "6425:72:21"
															},
															"nativeSrc": "6425:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "6425:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6551:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6551:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6575:3:21",
																				"nodeType": "YulLiteral",
																				"src": "6575:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6560:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:21"
																		},
																		"nativeSrc": "6560:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6507:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6507:43:21"
																},
																"nativeSrc": "6507:73:21",
																"nodeType": "YulFunctionCall",
																"src": "6507:73:21"
															},
															"nativeSrc": "6507:73:21",
															"nodeType": "YulExpressionStatement",
															"src": "6507:73:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5923:664:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6073:9:21",
														"nodeType": "YulTypedName",
														"src": "6073:9:21",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6085:6:21",
														"nodeType": "YulTypedName",
														"src": "6085:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6093:6:21",
														"nodeType": "YulTypedName",
														"src": "6093:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6101:6:21",
														"nodeType": "YulTypedName",
														"src": "6101:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6109:6:21",
														"nodeType": "YulTypedName",
														"src": "6109:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6117:6:21",
														"nodeType": "YulTypedName",
														"src": "6117:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6128:4:21",
														"nodeType": "YulTypedName",
														"src": "6128:4:21",
														"type": ""
													}
												],
												"src": "5923:664:21"
											},
											{
												"body": {
													"nativeSrc": "6689:73:21",
													"nodeType": "YulBlock",
													"src": "6689:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6706:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "6706:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6711:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6699:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6699:6:21"
																},
																"nativeSrc": "6699:19:21",
																"nodeType": "YulFunctionCall",
																"src": "6699:19:21"
															},
															"nativeSrc": "6699:19:21",
															"nodeType": "YulExpressionStatement",
															"src": "6699:19:21"
														},
														{
															"nativeSrc": "6727:29:21",
															"nodeType": "YulAssignment",
															"src": "6727:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6746:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "6746:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6751:4:21",
																		"nodeType": "YulLiteral",
																		"src": "6751:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6742:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6742:3:21"
																},
																"nativeSrc": "6742:14:21",
																"nodeType": "YulFunctionCall",
																"src": "6742:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6727:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "6727:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6593:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6661:3:21",
														"nodeType": "YulTypedName",
														"src": "6661:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6666:6:21",
														"nodeType": "YulTypedName",
														"src": "6666:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6677:11:21",
														"nodeType": "YulTypedName",
														"src": "6677:11:21",
														"type": ""
													}
												],
												"src": "6593:169:21"
											},
											{
												"body": {
													"nativeSrc": "6830:184:21",
													"nodeType": "YulBlock",
													"src": "6830:184:21",
													"statements": [
														{
															"nativeSrc": "6840:10:21",
															"nodeType": "YulVariableDeclaration",
															"src": "6840:10:21",
															"value": {
																"kind": "number",
																"nativeSrc": "6849:1:21",
																"nodeType": "YulLiteral",
																"src": "6849:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6844:1:21",
																	"nodeType": "YulTypedName",
																	"src": "6844:1:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6909:63:21",
																"nodeType": "YulBlock",
																"src": "6909:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6934:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "6934:3:21"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6939:1:21",
																							"nodeType": "YulIdentifier",
																							"src": "6939:1:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6930:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "6930:3:21"
																					},
																					"nativeSrc": "6930:11:21",
																					"nodeType": "YulFunctionCall",
																					"src": "6930:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6953:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "6953:3:21"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6958:1:21",
																									"nodeType": "YulIdentifier",
																									"src": "6958:1:21"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6949:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "6949:3:21"
																							},
																							"nativeSrc": "6949:11:21",
																							"nodeType": "YulFunctionCall",
																							"src": "6949:11:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6943:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "6943:5:21"
																					},
																					"nativeSrc": "6943:18:21",
																					"nodeType": "YulFunctionCall",
																					"src": "6943:18:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6923:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6923:6:21"
																			},
																			"nativeSrc": "6923:39:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6923:39:21"
																		},
																		"nativeSrc": "6923:39:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6923:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6870:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "6870:1:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6873:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6873:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6867:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "6867:2:21"
																},
																"nativeSrc": "6867:13:21",
																"nodeType": "YulFunctionCall",
																"src": "6867:13:21"
															},
															"nativeSrc": "6859:113:21",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6881:19:21",
																"nodeType": "YulBlock",
																"src": "6881:19:21",
																"statements": [
																	{
																		"nativeSrc": "6883:15:21",
																		"nodeType": "YulAssignment",
																		"src": "6883:15:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6892:1:21",
																					"nodeType": "YulIdentifier",
																					"src": "6892:1:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6895:2:21",
																					"nodeType": "YulLiteral",
																					"src": "6895:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6888:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "6888:3:21"
																			},
																			"nativeSrc": "6888:10:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6888:10:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6883:1:21",
																				"nodeType": "YulIdentifier",
																				"src": "6883:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6863:3:21",
																"nodeType": "YulBlock",
																"src": "6863:3:21",
																"statements": []
															},
															"src": "6859:113:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6992:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "6992:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6997:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6997:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6988:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:21"
																		},
																		"nativeSrc": "6988:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6988:16:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7006:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6981:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:21"
																},
																"nativeSrc": "6981:27:21",
																"nodeType": "YulFunctionCall",
																"src": "6981:27:21"
															},
															"nativeSrc": "6981:27:21",
															"nodeType": "YulExpressionStatement",
															"src": "6981:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6768:246:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6812:3:21",
														"nodeType": "YulTypedName",
														"src": "6812:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6817:3:21",
														"nodeType": "YulTypedName",
														"src": "6817:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6822:6:21",
														"nodeType": "YulTypedName",
														"src": "6822:6:21",
														"type": ""
													}
												],
												"src": "6768:246:21"
											},
											{
												"body": {
													"nativeSrc": "7068:54:21",
													"nodeType": "YulBlock",
													"src": "7068:54:21",
													"statements": [
														{
															"nativeSrc": "7078:38:21",
															"nodeType": "YulAssignment",
															"src": "7078:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7096:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "7096:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7103:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7103:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7092:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7092:3:21"
																		},
																		"nativeSrc": "7092:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7092:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7112:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7112:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7108:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7108:3:21"
																		},
																		"nativeSrc": "7108:7:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7108:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7088:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:21"
																},
																"nativeSrc": "7088:28:21",
																"nodeType": "YulFunctionCall",
																"src": "7088:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7078:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "7020:102:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7051:5:21",
														"nodeType": "YulTypedName",
														"src": "7051:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7061:6:21",
														"nodeType": "YulTypedName",
														"src": "7061:6:21",
														"type": ""
													}
												],
												"src": "7020:102:21"
											},
											{
												"body": {
													"nativeSrc": "7220:285:21",
													"nodeType": "YulBlock",
													"src": "7220:285:21",
													"statements": [
														{
															"nativeSrc": "7230:53:21",
															"nodeType": "YulVariableDeclaration",
															"src": "7230:53:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7277:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "7277:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7244:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "7244:32:21"
																},
																"nativeSrc": "7244:39:21",
																"nodeType": "YulFunctionCall",
																"src": "7244:39:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7234:6:21",
																	"nodeType": "YulTypedName",
																	"src": "7234:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7292:78:21",
															"nodeType": "YulAssignment",
															"src": "7292:78:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7358:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "7358:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7363:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7363:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7299:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "7299:58:21"
																},
																"nativeSrc": "7299:71:21",
																"nodeType": "YulFunctionCall",
																"src": "7299:71:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7292:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7418:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "7418:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7425:4:21",
																				"nodeType": "YulLiteral",
																				"src": "7425:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7414:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7414:3:21"
																		},
																		"nativeSrc": "7414:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7414:16:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7432:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "7432:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7437:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7437:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7379:34:21",
																	"nodeType": "YulIdentifier",
																	"src": "7379:34:21"
																},
																"nativeSrc": "7379:65:21",
																"nodeType": "YulFunctionCall",
																"src": "7379:65:21"
															},
															"nativeSrc": "7379:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "7379:65:21"
														},
														{
															"nativeSrc": "7453:46:21",
															"nodeType": "YulAssignment",
															"src": "7453:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7464:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "7464:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7491:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "7491:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7469:21:21",
																			"nodeType": "YulIdentifier",
																			"src": "7469:21:21"
																		},
																		"nativeSrc": "7469:29:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7469:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:21"
																},
																"nativeSrc": "7460:39:21",
																"nodeType": "YulFunctionCall",
																"src": "7460:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7453:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7453:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7128:377:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7201:5:21",
														"nodeType": "YulTypedName",
														"src": "7201:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7208:3:21",
														"nodeType": "YulTypedName",
														"src": "7208:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7216:3:21",
														"nodeType": "YulTypedName",
														"src": "7216:3:21",
														"type": ""
													}
												],
												"src": "7128:377:21"
											},
											{
												"body": {
													"nativeSrc": "7629:195:21",
													"nodeType": "YulBlock",
													"src": "7629:195:21",
													"statements": [
														{
															"nativeSrc": "7639:26:21",
															"nodeType": "YulAssignment",
															"src": "7639:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7651:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7651:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7662:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7662:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7647:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7647:3:21"
																},
																"nativeSrc": "7647:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7647:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7639:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7639:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7686:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7697:1:21",
																				"nodeType": "YulLiteral",
																				"src": "7697:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7682:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:21"
																		},
																		"nativeSrc": "7682:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7682:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7705:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "7705:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7711:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7711:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7701:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:21"
																		},
																		"nativeSrc": "7701:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7701:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7675:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7675:6:21"
																},
																"nativeSrc": "7675:47:21",
																"nodeType": "YulFunctionCall",
																"src": "7675:47:21"
															},
															"nativeSrc": "7675:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "7675:47:21"
														},
														{
															"nativeSrc": "7731:86:21",
															"nodeType": "YulAssignment",
															"src": "7731:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7803:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7803:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7812:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "7812:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7739:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "7739:63:21"
																},
																"nativeSrc": "7739:78:21",
																"nodeType": "YulFunctionCall",
																"src": "7739:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7731:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7731:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7511:313:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7601:9:21",
														"nodeType": "YulTypedName",
														"src": "7601:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7613:6:21",
														"nodeType": "YulTypedName",
														"src": "7613:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7624:4:21",
														"nodeType": "YulTypedName",
														"src": "7624:4:21",
														"type": ""
													}
												],
												"src": "7511:313:21"
											},
											{
												"body": {
													"nativeSrc": "7888:40:21",
													"nodeType": "YulBlock",
													"src": "7888:40:21",
													"statements": [
														{
															"nativeSrc": "7899:22:21",
															"nodeType": "YulAssignment",
															"src": "7899:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7915:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "7915:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7909:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "7909:5:21"
																},
																"nativeSrc": "7909:12:21",
																"nodeType": "YulFunctionCall",
																"src": "7909:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7899:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7899:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7830:98:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7871:5:21",
														"nodeType": "YulTypedName",
														"src": "7871:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7881:6:21",
														"nodeType": "YulTypedName",
														"src": "7881:6:21",
														"type": ""
													}
												],
												"src": "7830:98:21"
											},
											{
												"body": {
													"nativeSrc": "7990:60:21",
													"nodeType": "YulBlock",
													"src": "7990:60:21",
													"statements": [
														{
															"nativeSrc": "8000:11:21",
															"nodeType": "YulAssignment",
															"src": "8000:11:21",
															"value": {
																"name": "ptr",
																"nativeSrc": "8008:3:21",
																"nodeType": "YulIdentifier",
																"src": "8008:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8000:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8000:4:21"
																}
															]
														},
														{
															"nativeSrc": "8021:22:21",
															"nodeType": "YulAssignment",
															"src": "8021:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8033:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8033:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8038:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8038:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8029:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:21"
																},
																"nativeSrc": "8029:14:21",
																"nodeType": "YulFunctionCall",
																"src": "8029:14:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8021:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "7934:116:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7977:3:21",
														"nodeType": "YulTypedName",
														"src": "7977:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7985:4:21",
														"nodeType": "YulTypedName",
														"src": "7985:4:21",
														"type": ""
													}
												],
												"src": "7934:116:21"
											},
											{
												"body": {
													"nativeSrc": "8111:99:21",
													"nodeType": "YulBlock",
													"src": "8111:99:21",
													"statements": [
														{
															"nativeSrc": "8122:42:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8122:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8159:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "8159:3:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8153:5:21",
																			"nodeType": "YulIdentifier",
																			"src": "8153:5:21"
																		},
																		"nativeSrc": "8153:10:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8153:10:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "8135:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "8135:17:21"
																},
																"nativeSrc": "8135:29:21",
																"nodeType": "YulFunctionCall",
																"src": "8135:29:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8126:5:21",
																	"nodeType": "YulTypedName",
																	"src": "8126:5:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8174:29:21",
															"nodeType": "YulAssignment",
															"src": "8174:29:21",
															"value": {
																"name": "value",
																"nativeSrc": "8198:5:21",
																"nodeType": "YulIdentifier",
																"src": "8198:5:21"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8174:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "8174:11:21"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "8056:154:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8091:3:21",
														"nodeType": "YulTypedName",
														"src": "8091:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "8099:11:21",
														"nodeType": "YulTypedName",
														"src": "8099:11:21",
														"type": ""
													}
												],
												"src": "8056:154:21"
											},
											{
												"body": {
													"nativeSrc": "8306:504:21",
													"nodeType": "YulBlock",
													"src": "8306:504:21",
													"statements": [
														{
															"nativeSrc": "8317:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8317:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8363:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8363:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8331:31:21",
																	"nodeType": "YulIdentifier",
																	"src": "8331:31:21"
																},
																"nativeSrc": "8331:38:21",
																"nodeType": "YulFunctionCall",
																"src": "8331:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8321:6:21",
																	"nodeType": "YulTypedName",
																	"src": "8321:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8378:21:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8378:21:21",
															"value": {
																"name": "array",
																"nativeSrc": "8394:5:21",
																"nodeType": "YulIdentifier",
																"src": "8394:5:21"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "8382:8:21",
																	"nodeType": "YulTypedName",
																	"src": "8382:8:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8409:52:21",
															"nodeType": "YulAssignment",
															"src": "8409:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8455:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8455:5:21"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "8421:33:21",
																	"nodeType": "YulIdentifier",
																	"src": "8421:33:21"
																},
																"nativeSrc": "8421:40:21",
																"nodeType": "YulFunctionCall",
																"src": "8421:40:21"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "8409:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "8409:8:21"
																}
															]
														},
														{
															"nativeSrc": "8471:44:21",
															"nodeType": "YulAssignment",
															"src": "8471:44:21",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "8506:8:21",
																		"nodeType": "YulIdentifier",
																		"src": "8506:8:21"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "8480:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "8480:25:21"
																},
																"nativeSrc": "8480:35:21",
																"nodeType": "YulFunctionCall",
																"src": "8480:35:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8471:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "8471:5:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8543:260:21",
																"nodeType": "YulBlock",
																"src": "8543:260:21",
																"statements": [
																	{
																		"nativeSrc": "8557:236:21",
																		"nodeType": "YulAssignment",
																		"src": "8557:236:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "8587:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "8587:5:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8654:1:21",
																									"nodeType": "YulLiteral",
																									"src": "8654:1:21",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8661:2:21",
																											"nodeType": "YulLiteral",
																											"src": "8661:2:21",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "8665:6:21",
																											"nodeType": "YulIdentifier",
																											"src": "8665:6:21"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "8657:3:21",
																										"nodeType": "YulIdentifier",
																										"src": "8657:3:21"
																									},
																									"nativeSrc": "8657:15:21",
																									"nodeType": "YulFunctionCall",
																									"src": "8657:15:21"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "8650:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "8650:3:21"
																							},
																							"nativeSrc": "8650:23:21",
																							"nodeType": "YulFunctionCall",
																							"src": "8650:23:21"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8695:66:21",
																							"nodeType": "YulLiteral",
																							"src": "8695:66:21",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "8610:18:21",
																						"nodeType": "YulIdentifier",
																						"src": "8610:18:21"
																					},
																					"nativeSrc": "8610:169:21",
																					"nodeType": "YulFunctionCall",
																					"src": "8610:169:21"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8566:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "8566:3:21"
																			},
																			"nativeSrc": "8566:227:21",
																			"nodeType": "YulFunctionCall",
																			"src": "8566:227:21"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "8557:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "8557:5:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8531:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "8531:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8539:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8539:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8528:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "8528:2:21"
																},
																"nativeSrc": "8528:14:21",
																"nodeType": "YulFunctionCall",
																"src": "8528:14:21"
															},
															"nativeSrc": "8525:278:21",
															"nodeType": "YulIf",
															"src": "8525:278:21"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "8216:594:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8290:5:21",
														"nodeType": "YulTypedName",
														"src": "8290:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8300:5:21",
														"nodeType": "YulTypedName",
														"src": "8300:5:21",
														"type": ""
													}
												],
												"src": "8216:594:21"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53706C696E746572736861726473000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53706C696E746572736861726473000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5350530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFB SWAP2 SWAP1 PUSH3 0x705 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x705 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x12E PUSH1 0x7 DUP4 PUSH3 0x216 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x14C PUSH1 0x8 DUP3 PUSH3 0x216 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x18B PUSH3 0x26B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x1DC PUSH0 DUP1 SHL CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x20F PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x9FC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x23B JUMPI PUSH3 0x233 DUP4 PUSH3 0x3C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x265 JUMP JUMPDEST DUP3 PUSH3 0x24D DUP4 PUSH3 0x42D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x25D SWAP2 SWAP1 PUSH3 0x705 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2AC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0x2DA DUP4 DUP4 PUSH3 0x436 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3B9 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x355 PUSH3 0x49A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x3BD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x412 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x409 SWAP2 SWAP1 PUSH3 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x420 SWAP1 PUSH3 0x98D JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x51D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x533 JUMPI PUSH3 0x532 PUSH3 0x4D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x597 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x55A JUMP JUMPDEST PUSH3 0x5A3 DUP7 DUP4 PUSH3 0x55A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5ED PUSH3 0x5E7 PUSH3 0x5E1 DUP5 PUSH3 0x5BB JUMP JUMPDEST PUSH3 0x5C4 JUMP JUMPDEST PUSH3 0x5BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x608 DUP4 PUSH3 0x5CD JUMP JUMPDEST PUSH3 0x620 PUSH3 0x617 DUP3 PUSH3 0x5F4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x566 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x636 PUSH3 0x628 JUMP JUMPDEST PUSH3 0x643 DUP2 DUP5 DUP5 PUSH3 0x5FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x66A JUMPI PUSH3 0x65E PUSH0 DUP3 PUSH3 0x62C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x649 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6B9 JUMPI PUSH3 0x683 DUP2 PUSH3 0x539 JUMP JUMPDEST PUSH3 0x68E DUP5 PUSH3 0x54B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x69E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6B6 PUSH3 0x6AD DUP6 PUSH3 0x54B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x648 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6DB PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6BE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6F5 DUP4 DUP4 PUSH3 0x6CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x710 DUP3 PUSH3 0x4A1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x72C JUMPI PUSH3 0x72B PUSH3 0x4AB JUMP JUMPDEST JUMPDEST PUSH3 0x738 DUP3 SLOAD PUSH3 0x505 JUMP JUMPDEST PUSH3 0x745 DUP3 DUP3 DUP6 PUSH3 0x66E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x77B JUMPI PUSH0 DUP5 ISZERO PUSH3 0x766 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x772 DUP6 DUP3 PUSH3 0x6E8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7E1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x78B DUP7 PUSH3 0x539 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7B4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x78D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7D4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7D0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7FD DUP2 PUSH3 0x7E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x80E DUP2 PUSH3 0x5BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x83F DUP3 PUSH3 0x814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x851 DUP2 PUSH3 0x833 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x86C PUSH0 DUP4 ADD DUP9 PUSH3 0x7F2 JUMP JUMPDEST PUSH3 0x87B PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x7F2 JUMP JUMPDEST PUSH3 0x88A PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x7F2 JUMP JUMPDEST PUSH3 0x899 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x803 JUMP JUMPDEST PUSH3 0x8A8 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x846 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x8E1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8C4 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x908 DUP3 PUSH3 0x4A1 JUMP JUMPDEST PUSH3 0x914 DUP2 DUP6 PUSH3 0x8B2 JUMP JUMPDEST SWAP4 POP PUSH3 0x926 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8C2 JUMP JUMPDEST PUSH3 0x931 DUP2 PUSH3 0x8EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x956 DUP2 DUP5 PUSH3 0x8FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x984 DUP3 MLOAD PUSH3 0x7E9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x999 DUP3 PUSH3 0x95E JUMP JUMPDEST DUP3 PUSH3 0x9A5 DUP5 PUSH3 0x968 JUMP JUMPDEST SWAP1 POP PUSH3 0x9B2 DUP2 PUSH3 0x977 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x9F5 JUMPI PUSH3 0x9F0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x55A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1E3B PUSH3 0xA3F PUSH0 CODECOPY PUSH0 PUSH2 0xE98 ADD MSTORE PUSH0 PUSH2 0xE5D ADD MSTORE PUSH0 POP POP PUSH0 POP POP PUSH0 POP POP PUSH0 POP POP PUSH0 POP POP PUSH2 0x1E3B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x46D JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x397 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2BD JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x16BF JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BD PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FD JUMPI POP PUSH2 0x4FC DUP3 PUSH2 0xA51 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x513 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53F SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x561 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x58A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59E PUSH2 0xABA JUMP JUMPDEST SWAP1 POP PUSH2 0x5AB DUP2 DUP6 DUP6 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5C9 PUSH2 0xABA JUMP JUMPDEST SWAP1 POP PUSH2 0x5D6 DUP6 DUP3 DUP6 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x5E1 DUP6 DUP6 DUP6 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x613 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xC69 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x63B PUSH2 0xC8B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B3 DUP3 DUP3 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0x6BB PUSH2 0xD4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x6E9 DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x6FB DUP4 DUP4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x703 PUSH2 0xD4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x719 PUSH2 0x713 PUSH2 0xABA JUMP JUMPDEST DUP3 PUSH2 0xDD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x797 DUP3 PUSH2 0x791 PUSH2 0xABA JUMP JUMPDEST DUP4 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x7A1 DUP3 DUP3 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x7B6 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xE8F JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x1D03 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x80B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8BD SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E9 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x934 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x934 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x917 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x94E PUSH2 0xABA JUMP JUMPDEST SWAP1 POP PUSH2 0x95B DUP2 DUP6 DUP6 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x993 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x99C DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x9A6 DUP4 DUP4 PUSH2 0xECA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xACE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xADE DUP5 DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB5F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB50 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC50 DUP4 DUP4 DUP4 PUSH2 0x10BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xC61 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC72 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xC7B DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xC85 DUP4 DUP4 PUSH2 0x1325 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xCD9 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD47 DUP3 DUP3 PUSH2 0x140F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD1 PUSH0 DUP4 DUP4 PUSH2 0x10BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE50 DUP3 PUSH0 DUP4 PUSH2 0x10BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE8A PUSH1 0x7 PUSH32 0x0 PUSH2 0x14F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEC5 PUSH1 0x8 PUSH32 0x0 PUSH2 0x14F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED3 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xEDC DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xEE6 DUP4 DUP4 PUSH2 0x140F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x10B5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10AC SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11D9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1194 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1220 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x126A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x12DE DUP3 DUP3 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1321 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP3 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1330 DUP4 DUP4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1405 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x13A2 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1409 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x141A DUP4 DUP4 PUSH2 0x84A JUMP JUMPDEST ISZERO PUSH2 0x14EF JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x148C PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x14F3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1515 JUMPI PUSH2 0x150E DUP4 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1521 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x154D SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1598 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x156F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1598 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x157B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15B2 DUP4 PUSH2 0x1618 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15CF PUSH2 0x1D03 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1602 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169E DUP2 PUSH2 0x166A JUMP JUMPDEST DUP2 EQ PUSH2 0x16A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B9 DUP2 PUSH2 0x1695 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH2 0x16D3 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E1 DUP5 DUP3 DUP6 ADD PUSH2 0x16AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FE DUP2 PUSH2 0x16EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1717 PUSH0 DUP4 ADD DUP5 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1754 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1739 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1779 DUP3 PUSH2 0x171D JUMP JUMPDEST PUSH2 0x1783 DUP2 DUP6 PUSH2 0x1727 JUMP JUMPDEST SWAP4 POP PUSH2 0x1793 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x175F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17BF DUP2 DUP5 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F0 DUP3 PUSH2 0x17C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1800 DUP2 PUSH2 0x17E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x180A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x181B DUP2 PUSH2 0x17F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1833 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x184E DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1869 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1877 DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1888 DUP6 DUP3 DUP7 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18DE DUP7 DUP3 DUP8 ADD PUSH2 0x180D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18EF DUP7 DUP3 DUP8 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1900 DUP7 DUP3 DUP8 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191C DUP2 PUSH2 0x190A JUMP JUMPDEST DUP2 EQ PUSH2 0x1926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x1913 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195F DUP5 DUP3 DUP6 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x190A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x198A PUSH0 DUP4 ADD DUP5 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C4 DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E3 DUP2 PUSH2 0x19CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FC PUSH0 DUP4 ADD DUP5 PUSH2 0x19DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A24 DUP5 DUP3 DUP6 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A42 JUMPI PUSH2 0x1A41 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A4F DUP5 DUP3 DUP6 ADD PUSH2 0x180D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8C DUP2 PUSH2 0x1A58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A9B DUP2 PUSH2 0x17E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD3 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE4 DUP4 DUP4 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B06 DUP3 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x1B10 DUP2 DUP6 PUSH2 0x1AAB JUMP JUMPDEST SWAP4 POP PUSH2 0x1B1B DUP4 PUSH2 0x1ABB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B4B JUMPI DUP2 MLOAD PUSH2 0x1B32 DUP9 DUP3 PUSH2 0x1AD9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B3D DUP4 PUSH2 0x1AF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B1E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1B6B PUSH0 DUP4 ADD DUP11 PUSH2 0x1A83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B7D DUP2 DUP10 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B91 DUP2 DUP9 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA0 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1BAD PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1968 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 DUP5 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH2 0x1BEF PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFD DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0E DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x1C18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5350533A3A72656E6F756E6365526F6C653A2063616E206F6E6C792072656E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x756E636520726F6C657320666F722073656C6600000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCF PUSH1 0x33 DUP4 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA DUP3 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CFC DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D43 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1D5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D78 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DB5 DUP3 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC0 DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1D7E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DF1 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1DFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH1 0x73 0x2B DUP9 PUSH30 0x6FC10615B4B1043DC17D42ECFB9557669270A5B885B1C72BCA7E64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "782:8992:20:-:0;;;2321:292;;;;;;;;;;3328:431:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1713:1:9;1917:7;:21;;;;3401:45:14;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;2406:42:20::2;2232:4:0;2417:18:20::0;::::2;2437:10;2406;;;:42;;:::i;:::-;;2516:34;1039:23;2539:10;2516;;;:34;;:::i;:::-;;782:8992:::0;;2914:340:10;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:11:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;782:8992:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_3759": {
									"entryPoint": 1889,
									"id": 3759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 2366,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DELEGATION_TYPEHASH_3764": {
									"entryPoint": 2605,
									"id": 3764,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_3754": {
									"entryPoint": 2406,
									"id": 3754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_EIP712Name_2448": {
									"entryPoint": 3668,
									"id": 2448,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2460": {
									"entryPoint": 3727,
									"id": 2460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_1006": {
									"entryPoint": 3820,
									"id": 1006,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_946": {
									"entryPoint": 2753,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_928": {
									"entryPoint": 3541,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4820,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3157,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 4901,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_895": {
									"entryPoint": 3414,
									"id": 895,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1217": {
									"entryPoint": 2746,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1292": {
									"entryPoint": 3404,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1284": {
									"entryPoint": 3211,
									"id": 1284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5135,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1054": {
									"entryPoint": 2771,
									"id": 1054,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_785": {
									"entryPoint": 2917,
									"id": 785,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_862": {
									"entryPoint": 4283,
									"id": 862,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_682": {
									"entryPoint": 2475,
									"id": 682,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_706": {
									"entryPoint": 1428,
									"id": 706,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_641": {
									"entryPoint": 1820,
									"id": 641,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1178": {
									"entryPoint": 1925,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1157": {
									"entryPoint": 1800,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@byteLength_1422": {
									"entryPoint": 5656,
									"id": 1422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_619": {
									"entryPoint": 1579,
									"id": 619,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2436": {
									"entryPoint": 1957,
									"id": 2436,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1517,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 3177,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantRole_3830": {
									"entryPoint": 1546,
									"id": 3830,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2122,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_3808": {
									"entryPoint": 1727,
									"id": 3808,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_601": {
									"entryPoint": 1284,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 3281,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceRole_3879": {
									"entryPoint": 1587,
									"id": 3879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 3786,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_3852": {
									"entryPoint": 2442,
									"id": 3852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2558": {
									"entryPoint": 2641,
									"id": 2558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1163,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_610": {
									"entryPoint": 2222,
									"id": 610,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1489": {
									"entryPoint": 5369,
									"id": 1489,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1390": {
									"entryPoint": 5542,
									"id": 1390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_628": {
									"entryPoint": 1462,
									"id": 628,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_738": {
									"entryPoint": 1471,
									"id": 738,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_665": {
									"entryPoint": 2372,
									"id": 665,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14671:21",
										"nodeType": "YulBlock",
										"src": "0:14671:21",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:21",
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nativeSrc": "57:19:21",
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:21",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nativeSrc": "67:9:21",
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:21",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:21",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nativeSrc": "177:28:21",
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:21",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:21",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nativeSrc": "187:12:21",
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nativeSrc": "187:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nativeSrc": "300:28:21",
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:21",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:21",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nativeSrc": "310:12:21",
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nativeSrc": "310:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nativeSrc": "378:105:21",
													"nodeType": "YulBlock",
													"src": "378:105:21",
													"statements": [
														{
															"nativeSrc": "388:89:21",
															"nodeType": "YulAssignment",
															"src": "388:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:21",
																		"nodeType": "YulLiteral",
																		"src": "410:66:21",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:21"
																},
																"nativeSrc": "399:78:21",
																"nodeType": "YulFunctionCall",
																"src": "399:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:21",
														"nodeType": "YulTypedName",
														"src": "360:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:21",
														"nodeType": "YulTypedName",
														"src": "370:7:21",
														"type": ""
													}
												],
												"src": "334:149:21"
											},
											{
												"body": {
													"nativeSrc": "531:78:21",
													"nodeType": "YulBlock",
													"src": "531:78:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:21",
																"nodeType": "YulBlock",
																"src": "587:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:21",
																					"nodeType": "YulLiteral",
																					"src": "596:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:21",
																					"nodeType": "YulLiteral",
																					"src": "599:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:21"
																			},
																			"nativeSrc": "589:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:21"
																		},
																		"nativeSrc": "589:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:21",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:21"
																				},
																				"nativeSrc": "561:23:21",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:21"
																		},
																		"nativeSrc": "551:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:21"
																},
																"nativeSrc": "544:42:21",
																"nodeType": "YulFunctionCall",
																"src": "544:42:21"
															},
															"nativeSrc": "541:62:21",
															"nodeType": "YulIf",
															"src": "541:62:21"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:21",
														"nodeType": "YulTypedName",
														"src": "524:5:21",
														"type": ""
													}
												],
												"src": "489:120:21"
											},
											{
												"body": {
													"nativeSrc": "666:86:21",
													"nodeType": "YulBlock",
													"src": "666:86:21",
													"statements": [
														{
															"nativeSrc": "676:29:21",
															"nodeType": "YulAssignment",
															"src": "676:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:21"
																},
																"nativeSrc": "685:20:21",
																"nodeType": "YulFunctionCall",
																"src": "685:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:21"
																},
																"nativeSrc": "714:32:21",
																"nodeType": "YulFunctionCall",
																"src": "714:32:21"
															},
															"nativeSrc": "714:32:21",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:21"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:21",
														"nodeType": "YulTypedName",
														"src": "644:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:21",
														"nodeType": "YulTypedName",
														"src": "652:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:21",
														"nodeType": "YulTypedName",
														"src": "660:5:21",
														"type": ""
													}
												],
												"src": "615:137:21"
											},
											{
												"body": {
													"nativeSrc": "823:262:21",
													"nodeType": "YulBlock",
													"src": "823:262:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:21",
																"nodeType": "YulBlock",
																"src": "869:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:21"
																			},
																			"nativeSrc": "871:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:21"
																		},
																		"nativeSrc": "871:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:21"
																		},
																		"nativeSrc": "840:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:21",
																		"nodeType": "YulLiteral",
																		"src": "865:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:21"
																},
																"nativeSrc": "836:32:21",
																"nodeType": "YulFunctionCall",
																"src": "836:32:21"
															},
															"nativeSrc": "833:119:21",
															"nodeType": "YulIf",
															"src": "833:119:21"
														},
														{
															"nativeSrc": "962:116:21",
															"nodeType": "YulBlock",
															"src": "962:116:21",
															"statements": [
																{
																	"nativeSrc": "977:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:21",
																		"nodeType": "YulLiteral",
																		"src": "991:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:21",
																			"nodeType": "YulTypedName",
																			"src": "981:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:21",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:21"
																				},
																				"nativeSrc": "1036:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:21",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:21"
																		},
																		"nativeSrc": "1016:52:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:21",
														"nodeType": "YulTypedName",
														"src": "793:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:21",
														"nodeType": "YulTypedName",
														"src": "804:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:21",
														"nodeType": "YulTypedName",
														"src": "816:6:21",
														"type": ""
													}
												],
												"src": "758:327:21"
											},
											{
												"body": {
													"nativeSrc": "1133:48:21",
													"nodeType": "YulBlock",
													"src": "1133:48:21",
													"statements": [
														{
															"nativeSrc": "1143:32:21",
															"nodeType": "YulAssignment",
															"src": "1143:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:21"
																		},
																		"nativeSrc": "1161:13:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:21"
																},
																"nativeSrc": "1154:21:21",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:21",
														"nodeType": "YulTypedName",
														"src": "1115:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:21",
														"nodeType": "YulTypedName",
														"src": "1125:7:21",
														"type": ""
													}
												],
												"src": "1091:90:21"
											},
											{
												"body": {
													"nativeSrc": "1246:50:21",
													"nodeType": "YulBlock",
													"src": "1246:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:21",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:21"
																		},
																		"nativeSrc": "1268:21:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:21"
																},
																"nativeSrc": "1256:34:21",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:21"
															},
															"nativeSrc": "1256:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:21",
														"nodeType": "YulTypedName",
														"src": "1234:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:21",
														"nodeType": "YulTypedName",
														"src": "1241:3:21",
														"type": ""
													}
												],
												"src": "1187:109:21"
											},
											{
												"body": {
													"nativeSrc": "1394:118:21",
													"nodeType": "YulBlock",
													"src": "1394:118:21",
													"statements": [
														{
															"nativeSrc": "1404:26:21",
															"nodeType": "YulAssignment",
															"src": "1404:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:21"
																},
																"nativeSrc": "1412:18:21",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:21",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:21"
																		},
																		"nativeSrc": "1487:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:21",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:21"
																},
																"nativeSrc": "1440:65:21",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:21"
															},
															"nativeSrc": "1440:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:21",
														"nodeType": "YulTypedName",
														"src": "1366:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:21",
														"nodeType": "YulTypedName",
														"src": "1378:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:21",
														"nodeType": "YulTypedName",
														"src": "1389:4:21",
														"type": ""
													}
												],
												"src": "1302:210:21"
											},
											{
												"body": {
													"nativeSrc": "1577:40:21",
													"nodeType": "YulBlock",
													"src": "1577:40:21",
													"statements": [
														{
															"nativeSrc": "1588:22:21",
															"nodeType": "YulAssignment",
															"src": "1588:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:21"
																},
																"nativeSrc": "1598:12:21",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:21",
														"nodeType": "YulTypedName",
														"src": "1560:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:21",
														"nodeType": "YulTypedName",
														"src": "1570:6:21",
														"type": ""
													}
												],
												"src": "1518:99:21"
											},
											{
												"body": {
													"nativeSrc": "1719:73:21",
													"nodeType": "YulBlock",
													"src": "1719:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:21"
																},
																"nativeSrc": "1729:19:21",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:21"
															},
															"nativeSrc": "1729:19:21",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:21"
														},
														{
															"nativeSrc": "1757:29:21",
															"nodeType": "YulAssignment",
															"src": "1757:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:21",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:21"
																},
																"nativeSrc": "1772:14:21",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:21",
														"nodeType": "YulTypedName",
														"src": "1691:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:21",
														"nodeType": "YulTypedName",
														"src": "1696:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:21",
														"nodeType": "YulTypedName",
														"src": "1707:11:21",
														"type": ""
													}
												],
												"src": "1623:169:21"
											},
											{
												"body": {
													"nativeSrc": "1860:184:21",
													"nodeType": "YulBlock",
													"src": "1860:184:21",
													"statements": [
														{
															"nativeSrc": "1870:10:21",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:21",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:21",
																"nodeType": "YulLiteral",
																"src": "1879:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:21",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:21",
																"nodeType": "YulBlock",
																"src": "1939:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:21"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:21",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:21"
																					},
																					"nativeSrc": "1960:11:21",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:21"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:21",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:21"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:21"
																							},
																							"nativeSrc": "1979:11:21",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:21"
																					},
																					"nativeSrc": "1973:18:21",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:21"
																			},
																			"nativeSrc": "1953:39:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:21"
																		},
																		"nativeSrc": "1953:39:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:21"
																},
																"nativeSrc": "1897:13:21",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:21"
															},
															"nativeSrc": "1889:113:21",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:21",
																"nodeType": "YulBlock",
																"src": "1911:19:21",
																"statements": [
																	{
																		"nativeSrc": "1913:15:21",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:21",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:21",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:21"
																			},
																			"nativeSrc": "1918:10:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:21",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:21",
																"nodeType": "YulBlock",
																"src": "1893:3:21",
																"statements": []
															},
															"src": "1889:113:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:21"
																		},
																		"nativeSrc": "2018:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:21",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:21"
																},
																"nativeSrc": "2011:27:21",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:21"
															},
															"nativeSrc": "2011:27:21",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:21",
														"nodeType": "YulTypedName",
														"src": "1842:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:21",
														"nodeType": "YulTypedName",
														"src": "1847:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:21",
														"nodeType": "YulTypedName",
														"src": "1852:6:21",
														"type": ""
													}
												],
												"src": "1798:246:21"
											},
											{
												"body": {
													"nativeSrc": "2098:54:21",
													"nodeType": "YulBlock",
													"src": "2098:54:21",
													"statements": [
														{
															"nativeSrc": "2108:38:21",
															"nodeType": "YulAssignment",
															"src": "2108:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:21"
																		},
																		"nativeSrc": "2122:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:21"
																		},
																		"nativeSrc": "2138:7:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:21"
																},
																"nativeSrc": "2118:28:21",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:21",
														"nodeType": "YulTypedName",
														"src": "2081:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:21",
														"nodeType": "YulTypedName",
														"src": "2091:6:21",
														"type": ""
													}
												],
												"src": "2050:102:21"
											},
											{
												"body": {
													"nativeSrc": "2250:285:21",
													"nodeType": "YulBlock",
													"src": "2250:285:21",
													"statements": [
														{
															"nativeSrc": "2260:53:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:21"
																},
																"nativeSrc": "2274:39:21",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:21",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:21",
															"nodeType": "YulAssignment",
															"src": "2322:78:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:21"
																},
																"nativeSrc": "2329:71:21",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:21",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:21"
																		},
																		"nativeSrc": "2444:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:21",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:21"
																},
																"nativeSrc": "2409:65:21",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:21"
															},
															"nativeSrc": "2409:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:21"
														},
														{
															"nativeSrc": "2483:46:21",
															"nodeType": "YulAssignment",
															"src": "2483:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:21",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:21"
																		},
																		"nativeSrc": "2499:29:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:21"
																},
																"nativeSrc": "2490:39:21",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:21",
														"nodeType": "YulTypedName",
														"src": "2231:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:21",
														"nodeType": "YulTypedName",
														"src": "2238:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:21",
														"nodeType": "YulTypedName",
														"src": "2246:3:21",
														"type": ""
													}
												],
												"src": "2158:377:21"
											},
											{
												"body": {
													"nativeSrc": "2659:195:21",
													"nodeType": "YulBlock",
													"src": "2659:195:21",
													"statements": [
														{
															"nativeSrc": "2669:26:21",
															"nodeType": "YulAssignment",
															"src": "2669:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:21"
																},
																"nativeSrc": "2677:18:21",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:21",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:21"
																		},
																		"nativeSrc": "2712:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:21"
																		},
																		"nativeSrc": "2731:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:21"
																},
																"nativeSrc": "2705:47:21",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:21"
															},
															"nativeSrc": "2705:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:21"
														},
														{
															"nativeSrc": "2761:86:21",
															"nodeType": "YulAssignment",
															"src": "2761:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:21"
																},
																"nativeSrc": "2769:78:21",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:21",
														"nodeType": "YulTypedName",
														"src": "2631:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:21",
														"nodeType": "YulTypedName",
														"src": "2643:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:21",
														"nodeType": "YulTypedName",
														"src": "2654:4:21",
														"type": ""
													}
												],
												"src": "2541:313:21"
											},
											{
												"body": {
													"nativeSrc": "2905:81:21",
													"nodeType": "YulBlock",
													"src": "2905:81:21",
													"statements": [
														{
															"nativeSrc": "2915:65:21",
															"nodeType": "YulAssignment",
															"src": "2915:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:21",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:21"
																},
																"nativeSrc": "2926:54:21",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:21",
														"nodeType": "YulTypedName",
														"src": "2887:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:21",
														"nodeType": "YulTypedName",
														"src": "2897:7:21",
														"type": ""
													}
												],
												"src": "2860:126:21"
											},
											{
												"body": {
													"nativeSrc": "3037:51:21",
													"nodeType": "YulBlock",
													"src": "3037:51:21",
													"statements": [
														{
															"nativeSrc": "3047:35:21",
															"nodeType": "YulAssignment",
															"src": "3047:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:21"
																},
																"nativeSrc": "3058:24:21",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:21",
														"nodeType": "YulTypedName",
														"src": "3019:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:21",
														"nodeType": "YulTypedName",
														"src": "3029:7:21",
														"type": ""
													}
												],
												"src": "2992:96:21"
											},
											{
												"body": {
													"nativeSrc": "3137:79:21",
													"nodeType": "YulBlock",
													"src": "3137:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:21",
																"nodeType": "YulBlock",
																"src": "3194:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:21"
																			},
																			"nativeSrc": "3196:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:21"
																		},
																		"nativeSrc": "3196:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:21"
																				},
																				"nativeSrc": "3167:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:21"
																		},
																		"nativeSrc": "3157:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:21"
																},
																"nativeSrc": "3150:43:21",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:21"
															},
															"nativeSrc": "3147:63:21",
															"nodeType": "YulIf",
															"src": "3147:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:21",
														"nodeType": "YulTypedName",
														"src": "3130:5:21",
														"type": ""
													}
												],
												"src": "3094:122:21"
											},
											{
												"body": {
													"nativeSrc": "3274:87:21",
													"nodeType": "YulBlock",
													"src": "3274:87:21",
													"statements": [
														{
															"nativeSrc": "3284:29:21",
															"nodeType": "YulAssignment",
															"src": "3284:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:21"
																},
																"nativeSrc": "3293:20:21",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:21"
																},
																"nativeSrc": "3322:33:21",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:21"
															},
															"nativeSrc": "3322:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:21",
														"nodeType": "YulTypedName",
														"src": "3252:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:21",
														"nodeType": "YulTypedName",
														"src": "3260:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:21",
														"nodeType": "YulTypedName",
														"src": "3268:5:21",
														"type": ""
													}
												],
												"src": "3222:139:21"
											},
											{
												"body": {
													"nativeSrc": "3412:32:21",
													"nodeType": "YulBlock",
													"src": "3412:32:21",
													"statements": [
														{
															"nativeSrc": "3422:16:21",
															"nodeType": "YulAssignment",
															"src": "3422:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:21",
																"nodeType": "YulIdentifier",
																"src": "3433:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:21",
														"nodeType": "YulTypedName",
														"src": "3394:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:21",
														"nodeType": "YulTypedName",
														"src": "3404:7:21",
														"type": ""
													}
												],
												"src": "3367:77:21"
											},
											{
												"body": {
													"nativeSrc": "3493:79:21",
													"nodeType": "YulBlock",
													"src": "3493:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:21",
																"nodeType": "YulBlock",
																"src": "3550:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:21",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:21"
																			},
																			"nativeSrc": "3552:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:21"
																		},
																		"nativeSrc": "3552:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:21"
																				},
																				"nativeSrc": "3523:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:21"
																		},
																		"nativeSrc": "3513:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:21"
																},
																"nativeSrc": "3506:43:21",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:21"
															},
															"nativeSrc": "3503:63:21",
															"nodeType": "YulIf",
															"src": "3503:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:21",
														"nodeType": "YulTypedName",
														"src": "3486:5:21",
														"type": ""
													}
												],
												"src": "3450:122:21"
											},
											{
												"body": {
													"nativeSrc": "3630:87:21",
													"nodeType": "YulBlock",
													"src": "3630:87:21",
													"statements": [
														{
															"nativeSrc": "3640:29:21",
															"nodeType": "YulAssignment",
															"src": "3640:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:21"
																},
																"nativeSrc": "3649:20:21",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:21"
																},
																"nativeSrc": "3678:33:21",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:21"
															},
															"nativeSrc": "3678:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:21",
														"nodeType": "YulTypedName",
														"src": "3608:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:21",
														"nodeType": "YulTypedName",
														"src": "3616:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:21",
														"nodeType": "YulTypedName",
														"src": "3624:5:21",
														"type": ""
													}
												],
												"src": "3578:139:21"
											},
											{
												"body": {
													"nativeSrc": "3806:391:21",
													"nodeType": "YulBlock",
													"src": "3806:391:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:21",
																"nodeType": "YulBlock",
																"src": "3852:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:21"
																			},
																			"nativeSrc": "3854:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:21"
																		},
																		"nativeSrc": "3854:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:21"
																		},
																		"nativeSrc": "3823:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:21",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:21"
																},
																"nativeSrc": "3819:32:21",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:21"
															},
															"nativeSrc": "3816:119:21",
															"nodeType": "YulIf",
															"src": "3816:119:21"
														},
														{
															"nativeSrc": "3945:117:21",
															"nodeType": "YulBlock",
															"src": "3945:117:21",
															"statements": [
																{
																	"nativeSrc": "3960:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:21",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:21",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:21"
																				},
																				"nativeSrc": "4020:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:21"
																		},
																		"nativeSrc": "3999:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:21",
															"nodeType": "YulBlock",
															"src": "4072:118:21",
															"statements": [
																{
																	"nativeSrc": "4087:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:21",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:21",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:21"
																				},
																				"nativeSrc": "4148:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:21"
																		},
																		"nativeSrc": "4127:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:21",
														"nodeType": "YulTypedName",
														"src": "3768:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:21",
														"nodeType": "YulTypedName",
														"src": "3779:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:21",
														"nodeType": "YulTypedName",
														"src": "3791:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:21",
														"nodeType": "YulTypedName",
														"src": "3799:6:21",
														"type": ""
													}
												],
												"src": "3723:474:21"
											},
											{
												"body": {
													"nativeSrc": "4268:53:21",
													"nodeType": "YulBlock",
													"src": "4268:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4308:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4290:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:21"
																		},
																		"nativeSrc": "4290:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:21"
																},
																"nativeSrc": "4278:37:21",
																"nodeType": "YulFunctionCall",
																"src": "4278:37:21"
															},
															"nativeSrc": "4278:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4203:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4256:5:21",
														"nodeType": "YulTypedName",
														"src": "4256:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4263:3:21",
														"nodeType": "YulTypedName",
														"src": "4263:3:21",
														"type": ""
													}
												],
												"src": "4203:118:21"
											},
											{
												"body": {
													"nativeSrc": "4425:124:21",
													"nodeType": "YulBlock",
													"src": "4425:124:21",
													"statements": [
														{
															"nativeSrc": "4435:26:21",
															"nodeType": "YulAssignment",
															"src": "4435:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4447:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4443:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:21"
																},
																"nativeSrc": "4443:18:21",
																"nodeType": "YulFunctionCall",
																"src": "4443:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4435:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4515:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4539:1:21",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:21"
																		},
																		"nativeSrc": "4524:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4471:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:21"
																},
																"nativeSrc": "4471:71:21",
																"nodeType": "YulFunctionCall",
																"src": "4471:71:21"
															},
															"nativeSrc": "4471:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4327:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:21",
														"nodeType": "YulTypedName",
														"src": "4397:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4409:6:21",
														"nodeType": "YulTypedName",
														"src": "4409:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:21",
														"nodeType": "YulTypedName",
														"src": "4420:4:21",
														"type": ""
													}
												],
												"src": "4327:222:21"
											},
											{
												"body": {
													"nativeSrc": "4655:519:21",
													"nodeType": "YulBlock",
													"src": "4655:519:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4701:83:21",
																"nodeType": "YulBlock",
																"src": "4701:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4703:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:21"
																			},
																			"nativeSrc": "4703:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:21"
																		},
																		"nativeSrc": "4703:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4676:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4672:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:21"
																		},
																		"nativeSrc": "4672:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4668:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:21"
																},
																"nativeSrc": "4668:32:21",
																"nodeType": "YulFunctionCall",
																"src": "4668:32:21"
															},
															"nativeSrc": "4665:119:21",
															"nodeType": "YulIf",
															"src": "4665:119:21"
														},
														{
															"nativeSrc": "4794:117:21",
															"nodeType": "YulBlock",
															"src": "4794:117:21",
															"statements": [
																{
																	"nativeSrc": "4809:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4823:1:21",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4813:6:21",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4838:63:21",
																	"nodeType": "YulAssignment",
																	"src": "4838:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4884:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:21"
																				},
																				"nativeSrc": "4869:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4893:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4848:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:21"
																		},
																		"nativeSrc": "4848:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4838:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4921:118:21",
															"nodeType": "YulBlock",
															"src": "4921:118:21",
															"statements": [
																{
																	"nativeSrc": "4936:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4950:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4940:6:21",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4966:63:21",
																	"nodeType": "YulAssignment",
																	"src": "4966:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5001:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5012:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4997:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:21"
																				},
																				"nativeSrc": "4997:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5021:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4976:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:21"
																		},
																		"nativeSrc": "4976:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4966:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5049:118:21",
															"nodeType": "YulBlock",
															"src": "5049:118:21",
															"statements": [
																{
																	"nativeSrc": "5064:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:21",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5094:63:21",
																	"nodeType": "YulAssignment",
																	"src": "5094:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5129:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5140:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5125:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:21"
																				},
																				"nativeSrc": "5125:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5149:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5104:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:21"
																		},
																		"nativeSrc": "5104:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5094:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4555:619:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:21",
														"nodeType": "YulTypedName",
														"src": "4609:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:21",
														"nodeType": "YulTypedName",
														"src": "4620:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:21",
														"nodeType": "YulTypedName",
														"src": "4632:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4640:6:21",
														"nodeType": "YulTypedName",
														"src": "4640:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:21",
														"nodeType": "YulTypedName",
														"src": "4648:6:21",
														"type": ""
													}
												],
												"src": "4555:619:21"
											},
											{
												"body": {
													"nativeSrc": "5225:32:21",
													"nodeType": "YulBlock",
													"src": "5225:32:21",
													"statements": [
														{
															"nativeSrc": "5235:16:21",
															"nodeType": "YulAssignment",
															"src": "5235:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "5246:5:21",
																"nodeType": "YulIdentifier",
																"src": "5246:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5235:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5180:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5207:5:21",
														"nodeType": "YulTypedName",
														"src": "5207:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5217:7:21",
														"nodeType": "YulTypedName",
														"src": "5217:7:21",
														"type": ""
													}
												],
												"src": "5180:77:21"
											},
											{
												"body": {
													"nativeSrc": "5306:79:21",
													"nodeType": "YulBlock",
													"src": "5306:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5363:16:21",
																"nodeType": "YulBlock",
																"src": "5363:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5372:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5365:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:21"
																			},
																			"nativeSrc": "5365:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:21"
																		},
																		"nativeSrc": "5365:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5354:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5336:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:21"
																				},
																				"nativeSrc": "5336:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5326:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:21"
																		},
																		"nativeSrc": "5326:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5319:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:21"
																},
																"nativeSrc": "5319:43:21",
																"nodeType": "YulFunctionCall",
																"src": "5319:43:21"
															},
															"nativeSrc": "5316:63:21",
															"nodeType": "YulIf",
															"src": "5316:63:21"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5263:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5299:5:21",
														"nodeType": "YulTypedName",
														"src": "5299:5:21",
														"type": ""
													}
												],
												"src": "5263:122:21"
											},
											{
												"body": {
													"nativeSrc": "5443:87:21",
													"nodeType": "YulBlock",
													"src": "5443:87:21",
													"statements": [
														{
															"nativeSrc": "5453:29:21",
															"nodeType": "YulAssignment",
															"src": "5453:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5475:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5462:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:21"
																},
																"nativeSrc": "5462:20:21",
																"nodeType": "YulFunctionCall",
																"src": "5462:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5453:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5518:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5491:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:21"
																},
																"nativeSrc": "5491:33:21",
																"nodeType": "YulFunctionCall",
																"src": "5491:33:21"
															},
															"nativeSrc": "5491:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:21"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5391:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5421:6:21",
														"nodeType": "YulTypedName",
														"src": "5421:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5429:3:21",
														"nodeType": "YulTypedName",
														"src": "5429:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5437:5:21",
														"nodeType": "YulTypedName",
														"src": "5437:5:21",
														"type": ""
													}
												],
												"src": "5391:139:21"
											},
											{
												"body": {
													"nativeSrc": "5602:263:21",
													"nodeType": "YulBlock",
													"src": "5602:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5648:83:21",
																"nodeType": "YulBlock",
																"src": "5648:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5650:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:21"
																			},
																			"nativeSrc": "5650:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:21"
																		},
																		"nativeSrc": "5650:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5623:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5619:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:21"
																		},
																		"nativeSrc": "5619:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5615:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:21"
																},
																"nativeSrc": "5615:32:21",
																"nodeType": "YulFunctionCall",
																"src": "5615:32:21"
															},
															"nativeSrc": "5612:119:21",
															"nodeType": "YulIf",
															"src": "5612:119:21"
														},
														{
															"nativeSrc": "5741:117:21",
															"nodeType": "YulBlock",
															"src": "5741:117:21",
															"statements": [
																{
																	"nativeSrc": "5756:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5770:1:21",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5760:6:21",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:63:21",
																	"nodeType": "YulAssignment",
																	"src": "5785:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5820:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5831:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5816:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:21"
																				},
																				"nativeSrc": "5816:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5840:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5795:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:21"
																		},
																		"nativeSrc": "5795:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5785:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5536:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:21",
														"nodeType": "YulTypedName",
														"src": "5572:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:21",
														"nodeType": "YulTypedName",
														"src": "5583:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:21",
														"nodeType": "YulTypedName",
														"src": "5595:6:21",
														"type": ""
													}
												],
												"src": "5536:329:21"
											},
											{
												"body": {
													"nativeSrc": "5936:53:21",
													"nodeType": "YulBlock",
													"src": "5936:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5953:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5976:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5958:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:21"
																		},
																		"nativeSrc": "5958:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5946:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:21"
																},
																"nativeSrc": "5946:37:21",
																"nodeType": "YulFunctionCall",
																"src": "5946:37:21"
															},
															"nativeSrc": "5946:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:21"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5871:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:21",
														"nodeType": "YulTypedName",
														"src": "5924:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5931:3:21",
														"nodeType": "YulTypedName",
														"src": "5931:3:21",
														"type": ""
													}
												],
												"src": "5871:118:21"
											},
											{
												"body": {
													"nativeSrc": "6093:124:21",
													"nodeType": "YulBlock",
													"src": "6093:124:21",
													"statements": [
														{
															"nativeSrc": "6103:26:21",
															"nodeType": "YulAssignment",
															"src": "6103:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6115:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:21"
																},
																"nativeSrc": "6111:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6111:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6103:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6183:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:1:21",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:21"
																		},
																		"nativeSrc": "6192:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6139:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:21"
																},
																"nativeSrc": "6139:71:21",
																"nodeType": "YulFunctionCall",
																"src": "6139:71:21"
															},
															"nativeSrc": "6139:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5995:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6065:9:21",
														"nodeType": "YulTypedName",
														"src": "6065:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6077:6:21",
														"nodeType": "YulTypedName",
														"src": "6077:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6088:4:21",
														"nodeType": "YulTypedName",
														"src": "6088:4:21",
														"type": ""
													}
												],
												"src": "5995:222:21"
											},
											{
												"body": {
													"nativeSrc": "6306:391:21",
													"nodeType": "YulBlock",
													"src": "6306:391:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "6352:83:21",
																"nodeType": "YulBlock",
																"src": "6352:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6354:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:21"
																			},
																			"nativeSrc": "6354:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:21"
																		},
																		"nativeSrc": "6354:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6327:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6323:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:21"
																		},
																		"nativeSrc": "6323:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6319:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:21"
																},
																"nativeSrc": "6319:32:21",
																"nodeType": "YulFunctionCall",
																"src": "6319:32:21"
															},
															"nativeSrc": "6316:119:21",
															"nodeType": "YulIf",
															"src": "6316:119:21"
														},
														{
															"nativeSrc": "6445:117:21",
															"nodeType": "YulBlock",
															"src": "6445:117:21",
															"statements": [
																{
																	"nativeSrc": "6460:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6474:1:21",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6464:6:21",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:21",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:21"
																				},
																				"nativeSrc": "6520:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6499:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:21"
																		},
																		"nativeSrc": "6499:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6489:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:21",
															"nodeType": "YulBlock",
															"src": "6572:118:21",
															"statements": [
																{
																	"nativeSrc": "6587:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:21",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:21",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:21"
																				},
																				"nativeSrc": "6648:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6627:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:21"
																		},
																		"nativeSrc": "6627:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6617:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6223:474:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6268:9:21",
														"nodeType": "YulTypedName",
														"src": "6268:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6279:7:21",
														"nodeType": "YulTypedName",
														"src": "6279:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6291:6:21",
														"nodeType": "YulTypedName",
														"src": "6291:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6299:6:21",
														"nodeType": "YulTypedName",
														"src": "6299:6:21",
														"type": ""
													}
												],
												"src": "6223:474:21"
											},
											{
												"body": {
													"nativeSrc": "6746:43:21",
													"nodeType": "YulBlock",
													"src": "6746:43:21",
													"statements": [
														{
															"nativeSrc": "6756:27:21",
															"nodeType": "YulAssignment",
															"src": "6756:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6771:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:4:21",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:21",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6767:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:21"
																},
																"nativeSrc": "6767:16:21",
																"nodeType": "YulFunctionCall",
																"src": "6767:16:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6756:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6703:86:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6728:5:21",
														"nodeType": "YulTypedName",
														"src": "6728:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6738:7:21",
														"nodeType": "YulTypedName",
														"src": "6738:7:21",
														"type": ""
													}
												],
												"src": "6703:86:21"
											},
											{
												"body": {
													"nativeSrc": "6856:51:21",
													"nodeType": "YulBlock",
													"src": "6856:51:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6873:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6894:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6878:15:21",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:21"
																		},
																		"nativeSrc": "6878:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:21"
																},
																"nativeSrc": "6866:35:21",
																"nodeType": "YulFunctionCall",
																"src": "6866:35:21"
															},
															"nativeSrc": "6866:35:21",
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:21"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6795:112:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6844:5:21",
														"nodeType": "YulTypedName",
														"src": "6844:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6851:3:21",
														"nodeType": "YulTypedName",
														"src": "6851:3:21",
														"type": ""
													}
												],
												"src": "6795:112:21"
											},
											{
												"body": {
													"nativeSrc": "7007:120:21",
													"nodeType": "YulBlock",
													"src": "7007:120:21",
													"statements": [
														{
															"nativeSrc": "7017:26:21",
															"nodeType": "YulAssignment",
															"src": "7017:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7029:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7025:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:21"
																},
																"nativeSrc": "7025:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7025:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7017:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7093:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7117:1:21",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7102:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:21"
																		},
																		"nativeSrc": "7102:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7053:39:21",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:21"
																},
																"nativeSrc": "7053:67:21",
																"nodeType": "YulFunctionCall",
																"src": "7053:67:21"
															},
															"nativeSrc": "7053:67:21",
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6913:214:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:21",
														"nodeType": "YulTypedName",
														"src": "6979:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6991:6:21",
														"nodeType": "YulTypedName",
														"src": "6991:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7002:4:21",
														"nodeType": "YulTypedName",
														"src": "7002:4:21",
														"type": ""
													}
												],
												"src": "6913:214:21"
											},
											{
												"body": {
													"nativeSrc": "7199:263:21",
													"nodeType": "YulBlock",
													"src": "7199:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "7245:83:21",
																"nodeType": "YulBlock",
																"src": "7245:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7247:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:21"
																			},
																			"nativeSrc": "7247:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:21"
																		},
																		"nativeSrc": "7247:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7220:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:21"
																		},
																		"nativeSrc": "7216:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7212:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:21"
																},
																"nativeSrc": "7212:32:21",
																"nodeType": "YulFunctionCall",
																"src": "7212:32:21"
															},
															"nativeSrc": "7209:119:21",
															"nodeType": "YulIf",
															"src": "7209:119:21"
														},
														{
															"nativeSrc": "7338:117:21",
															"nodeType": "YulBlock",
															"src": "7338:117:21",
															"statements": [
																{
																	"nativeSrc": "7353:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:21",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:21",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:21"
																				},
																				"nativeSrc": "7413:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7392:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:21"
																		},
																		"nativeSrc": "7392:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7382:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7133:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:21",
														"nodeType": "YulTypedName",
														"src": "7169:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7180:7:21",
														"nodeType": "YulTypedName",
														"src": "7180:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7192:6:21",
														"nodeType": "YulTypedName",
														"src": "7192:6:21",
														"type": ""
													}
												],
												"src": "7133:329:21"
											},
											{
												"body": {
													"nativeSrc": "7534:263:21",
													"nodeType": "YulBlock",
													"src": "7534:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "7580:83:21",
																"nodeType": "YulBlock",
																"src": "7580:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7582:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "7582:77:21"
																			},
																			"nativeSrc": "7582:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "7582:79:21"
																		},
																		"nativeSrc": "7582:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "7582:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7555:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "7555:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7564:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7551:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:21"
																		},
																		"nativeSrc": "7551:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7576:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7576:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7547:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:21"
																},
																"nativeSrc": "7547:32:21",
																"nodeType": "YulFunctionCall",
																"src": "7547:32:21"
															},
															"nativeSrc": "7544:119:21",
															"nodeType": "YulIf",
															"src": "7544:119:21"
														},
														{
															"nativeSrc": "7673:117:21",
															"nodeType": "YulBlock",
															"src": "7673:117:21",
															"statements": [
																{
																	"nativeSrc": "7688:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7688:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7702:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7702:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7692:6:21",
																			"nodeType": "YulTypedName",
																			"src": "7692:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7717:63:21",
																	"nodeType": "YulAssignment",
																	"src": "7717:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7752:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "7752:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7763:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "7763:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7748:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "7748:3:21"
																				},
																				"nativeSrc": "7748:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "7748:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7772:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "7772:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7727:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "7727:20:21"
																		},
																		"nativeSrc": "7727:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7727:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7717:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "7717:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7468:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7504:9:21",
														"nodeType": "YulTypedName",
														"src": "7504:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7515:7:21",
														"nodeType": "YulTypedName",
														"src": "7515:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7527:6:21",
														"nodeType": "YulTypedName",
														"src": "7527:6:21",
														"type": ""
													}
												],
												"src": "7468:329:21"
											},
											{
												"body": {
													"nativeSrc": "7847:105:21",
													"nodeType": "YulBlock",
													"src": "7847:105:21",
													"statements": [
														{
															"nativeSrc": "7857:89:21",
															"nodeType": "YulAssignment",
															"src": "7857:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7872:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "7872:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7879:66:21",
																		"nodeType": "YulLiteral",
																		"src": "7879:66:21",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7868:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:21"
																},
																"nativeSrc": "7868:78:21",
																"nodeType": "YulFunctionCall",
																"src": "7868:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7857:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "7857:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "7803:149:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7829:5:21",
														"nodeType": "YulTypedName",
														"src": "7829:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7839:7:21",
														"nodeType": "YulTypedName",
														"src": "7839:7:21",
														"type": ""
													}
												],
												"src": "7803:149:21"
											},
											{
												"body": {
													"nativeSrc": "8021:52:21",
													"nodeType": "YulBlock",
													"src": "8021:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8038:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8038:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8060:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "8060:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "8043:16:21",
																			"nodeType": "YulIdentifier",
																			"src": "8043:16:21"
																		},
																		"nativeSrc": "8043:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8043:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8031:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8031:6:21"
																},
																"nativeSrc": "8031:36:21",
																"nodeType": "YulFunctionCall",
																"src": "8031:36:21"
															},
															"nativeSrc": "8031:36:21",
															"nodeType": "YulExpressionStatement",
															"src": "8031:36:21"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "7958:115:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8009:5:21",
														"nodeType": "YulTypedName",
														"src": "8009:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8016:3:21",
														"nodeType": "YulTypedName",
														"src": "8016:3:21",
														"type": ""
													}
												],
												"src": "7958:115:21"
											},
											{
												"body": {
													"nativeSrc": "8144:53:21",
													"nodeType": "YulBlock",
													"src": "8144:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8161:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8161:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8184:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "8184:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8166:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "8166:17:21"
																		},
																		"nativeSrc": "8166:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8166:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8154:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:21"
																},
																"nativeSrc": "8154:37:21",
																"nodeType": "YulFunctionCall",
																"src": "8154:37:21"
															},
															"nativeSrc": "8154:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "8154:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8079:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8132:5:21",
														"nodeType": "YulTypedName",
														"src": "8132:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8139:3:21",
														"nodeType": "YulTypedName",
														"src": "8139:3:21",
														"type": ""
													}
												],
												"src": "8079:118:21"
											},
											{
												"body": {
													"nativeSrc": "8277:40:21",
													"nodeType": "YulBlock",
													"src": "8277:40:21",
													"statements": [
														{
															"nativeSrc": "8288:22:21",
															"nodeType": "YulAssignment",
															"src": "8288:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8304:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8304:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8298:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "8298:5:21"
																},
																"nativeSrc": "8298:12:21",
																"nodeType": "YulFunctionCall",
																"src": "8298:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8288:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8288:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8203:114:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8260:5:21",
														"nodeType": "YulTypedName",
														"src": "8260:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8270:6:21",
														"nodeType": "YulTypedName",
														"src": "8270:6:21",
														"type": ""
													}
												],
												"src": "8203:114:21"
											},
											{
												"body": {
													"nativeSrc": "8434:73:21",
													"nodeType": "YulBlock",
													"src": "8434:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8451:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8451:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8456:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "8456:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8444:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:21"
																},
																"nativeSrc": "8444:19:21",
																"nodeType": "YulFunctionCall",
																"src": "8444:19:21"
															},
															"nativeSrc": "8444:19:21",
															"nodeType": "YulExpressionStatement",
															"src": "8444:19:21"
														},
														{
															"nativeSrc": "8472:29:21",
															"nodeType": "YulAssignment",
															"src": "8472:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8491:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8491:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8496:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8496:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8487:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8487:3:21"
																},
																"nativeSrc": "8487:14:21",
																"nodeType": "YulFunctionCall",
																"src": "8487:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8472:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "8472:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8323:184:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8406:3:21",
														"nodeType": "YulTypedName",
														"src": "8406:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8411:6:21",
														"nodeType": "YulTypedName",
														"src": "8411:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8422:11:21",
														"nodeType": "YulTypedName",
														"src": "8422:11:21",
														"type": ""
													}
												],
												"src": "8323:184:21"
											},
											{
												"body": {
													"nativeSrc": "8585:60:21",
													"nodeType": "YulBlock",
													"src": "8585:60:21",
													"statements": [
														{
															"nativeSrc": "8595:11:21",
															"nodeType": "YulAssignment",
															"src": "8595:11:21",
															"value": {
																"name": "ptr",
																"nativeSrc": "8603:3:21",
																"nodeType": "YulIdentifier",
																"src": "8603:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8595:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8595:4:21"
																}
															]
														},
														{
															"nativeSrc": "8616:22:21",
															"nodeType": "YulAssignment",
															"src": "8616:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8628:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8628:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8633:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8633:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8624:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:21"
																},
																"nativeSrc": "8624:14:21",
																"nodeType": "YulFunctionCall",
																"src": "8624:14:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8616:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "8616:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8513:132:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8572:3:21",
														"nodeType": "YulTypedName",
														"src": "8572:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8580:4:21",
														"nodeType": "YulTypedName",
														"src": "8580:4:21",
														"type": ""
													}
												],
												"src": "8513:132:21"
											},
											{
												"body": {
													"nativeSrc": "8706:53:21",
													"nodeType": "YulBlock",
													"src": "8706:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8723:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8723:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8746:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "8746:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8728:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "8728:17:21"
																		},
																		"nativeSrc": "8728:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8728:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8716:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8716:6:21"
																},
																"nativeSrc": "8716:37:21",
																"nodeType": "YulFunctionCall",
																"src": "8716:37:21"
															},
															"nativeSrc": "8716:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "8716:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "8651:108:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8694:5:21",
														"nodeType": "YulTypedName",
														"src": "8694:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8701:3:21",
														"nodeType": "YulTypedName",
														"src": "8701:3:21",
														"type": ""
													}
												],
												"src": "8651:108:21"
											},
											{
												"body": {
													"nativeSrc": "8845:99:21",
													"nodeType": "YulBlock",
													"src": "8845:99:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8889:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "8889:6:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8897:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "8855:33:21",
																	"nodeType": "YulIdentifier",
																	"src": "8855:33:21"
																},
																"nativeSrc": "8855:46:21",
																"nodeType": "YulFunctionCall",
																"src": "8855:46:21"
															},
															"nativeSrc": "8855:46:21",
															"nodeType": "YulExpressionStatement",
															"src": "8855:46:21"
														},
														{
															"nativeSrc": "8910:28:21",
															"nodeType": "YulAssignment",
															"src": "8910:28:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8928:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "8928:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8933:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8933:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8924:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8924:3:21"
																},
																"nativeSrc": "8924:14:21",
																"nodeType": "YulFunctionCall",
																"src": "8924:14:21"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8910:10:21",
																	"nodeType": "YulIdentifier",
																	"src": "8910:10:21"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "8765:179:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8818:6:21",
														"nodeType": "YulTypedName",
														"src": "8818:6:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8826:3:21",
														"nodeType": "YulTypedName",
														"src": "8826:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8834:10:21",
														"nodeType": "YulTypedName",
														"src": "8834:10:21",
														"type": ""
													}
												],
												"src": "8765:179:21"
											},
											{
												"body": {
													"nativeSrc": "9025:38:21",
													"nodeType": "YulBlock",
													"src": "9025:38:21",
													"statements": [
														{
															"nativeSrc": "9035:22:21",
															"nodeType": "YulAssignment",
															"src": "9035:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9047:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9047:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9052:4:21",
																		"nodeType": "YulLiteral",
																		"src": "9052:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9043:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9043:3:21"
																},
																"nativeSrc": "9043:14:21",
																"nodeType": "YulFunctionCall",
																"src": "9043:14:21"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "9035:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9035:4:21"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8950:113:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9012:3:21",
														"nodeType": "YulTypedName",
														"src": "9012:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "9020:4:21",
														"nodeType": "YulTypedName",
														"src": "9020:4:21",
														"type": ""
													}
												],
												"src": "8950:113:21"
											},
											{
												"body": {
													"nativeSrc": "9223:608:21",
													"nodeType": "YulBlock",
													"src": "9223:608:21",
													"statements": [
														{
															"nativeSrc": "9233:68:21",
															"nodeType": "YulVariableDeclaration",
															"src": "9233:68:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9295:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "9295:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "9247:47:21",
																	"nodeType": "YulIdentifier",
																	"src": "9247:47:21"
																},
																"nativeSrc": "9247:54:21",
																"nodeType": "YulFunctionCall",
																"src": "9247:54:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9237:6:21",
																	"nodeType": "YulTypedName",
																	"src": "9237:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9310:93:21",
															"nodeType": "YulAssignment",
															"src": "9310:93:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9391:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9391:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9396:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9396:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9317:73:21",
																	"nodeType": "YulIdentifier",
																	"src": "9317:73:21"
																},
																"nativeSrc": "9317:86:21",
																"nodeType": "YulFunctionCall",
																"src": "9317:86:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9310:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9310:3:21"
																}
															]
														},
														{
															"nativeSrc": "9412:71:21",
															"nodeType": "YulVariableDeclaration",
															"src": "9412:71:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9477:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "9477:5:21"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "9427:49:21",
																	"nodeType": "YulIdentifier",
																	"src": "9427:49:21"
																},
																"nativeSrc": "9427:56:21",
																"nodeType": "YulFunctionCall",
																"src": "9427:56:21"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "9416:7:21",
																	"nodeType": "YulTypedName",
																	"src": "9416:7:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9492:21:21",
															"nodeType": "YulVariableDeclaration",
															"src": "9492:21:21",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9506:7:21",
																"nodeType": "YulIdentifier",
																"src": "9506:7:21"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9496:6:21",
																	"nodeType": "YulTypedName",
																	"src": "9496:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9582:224:21",
																"nodeType": "YulBlock",
																"src": "9582:224:21",
																"statements": [
																	{
																		"nativeSrc": "9596:34:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9596:34:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9623:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "9623:6:21"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9617:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "9617:5:21"
																			},
																			"nativeSrc": "9617:13:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9617:13:21"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9600:13:21",
																				"nodeType": "YulTypedName",
																				"src": "9600:13:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9643:70:21",
																		"nodeType": "YulAssignment",
																		"src": "9643:70:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9694:13:21",
																					"nodeType": "YulIdentifier",
																					"src": "9694:13:21"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9709:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "9709:3:21"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "9650:43:21",
																				"nodeType": "YulIdentifier",
																				"src": "9650:43:21"
																			},
																			"nativeSrc": "9650:63:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9650:63:21"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9643:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "9643:3:21"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9726:70:21",
																		"nodeType": "YulAssignment",
																		"src": "9726:70:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9789:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "9789:6:21"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "9736:52:21",
																				"nodeType": "YulIdentifier",
																				"src": "9736:52:21"
																			},
																			"nativeSrc": "9736:60:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9736:60:21"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9726:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "9726:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9544:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "9544:1:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9547:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9547:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9541:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "9541:2:21"
																},
																"nativeSrc": "9541:13:21",
																"nodeType": "YulFunctionCall",
																"src": "9541:13:21"
															},
															"nativeSrc": "9522:284:21",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9555:18:21",
																"nodeType": "YulBlock",
																"src": "9555:18:21",
																"statements": [
																	{
																		"nativeSrc": "9557:14:21",
																		"nodeType": "YulAssignment",
																		"src": "9557:14:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9566:1:21",
																					"nodeType": "YulIdentifier",
																					"src": "9566:1:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9569:1:21",
																					"nodeType": "YulLiteral",
																					"src": "9569:1:21",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9562:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "9562:3:21"
																			},
																			"nativeSrc": "9562:9:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9562:9:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9557:1:21",
																				"nodeType": "YulIdentifier",
																				"src": "9557:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9526:14:21",
																"nodeType": "YulBlock",
																"src": "9526:14:21",
																"statements": [
																	{
																		"nativeSrc": "9528:10:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9528:10:21",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9537:1:21",
																			"nodeType": "YulLiteral",
																			"src": "9537:1:21",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9532:1:21",
																				"nodeType": "YulTypedName",
																				"src": "9532:1:21",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9522:284:21"
														},
														{
															"nativeSrc": "9815:10:21",
															"nodeType": "YulAssignment",
															"src": "9815:10:21",
															"value": {
																"name": "pos",
																"nativeSrc": "9822:3:21",
																"nodeType": "YulIdentifier",
																"src": "9822:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9815:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9815:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9099:732:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9202:5:21",
														"nodeType": "YulTypedName",
														"src": "9202:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9209:3:21",
														"nodeType": "YulTypedName",
														"src": "9209:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9218:3:21",
														"nodeType": "YulTypedName",
														"src": "9218:3:21",
														"type": ""
													}
												],
												"src": "9099:732:21"
											},
											{
												"body": {
													"nativeSrc": "10191:861:21",
													"nodeType": "YulBlock",
													"src": "10191:861:21",
													"statements": [
														{
															"nativeSrc": "10201:27:21",
															"nodeType": "YulAssignment",
															"src": "10201:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10213:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "10213:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10224:3:21",
																		"nodeType": "YulLiteral",
																		"src": "10224:3:21",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10209:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10209:3:21"
																},
																"nativeSrc": "10209:19:21",
																"nodeType": "YulFunctionCall",
																"src": "10209:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10201:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10201:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10280:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10293:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10293:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10304:1:21",
																				"nodeType": "YulLiteral",
																				"src": "10304:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10289:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10289:3:21"
																		},
																		"nativeSrc": "10289:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10289:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "10238:41:21",
																	"nodeType": "YulIdentifier",
																	"src": "10238:41:21"
																},
																"nativeSrc": "10238:69:21",
																"nodeType": "YulFunctionCall",
																"src": "10238:69:21"
															},
															"nativeSrc": "10238:69:21",
															"nodeType": "YulExpressionStatement",
															"src": "10238:69:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10328:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10328:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10339:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10339:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10324:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10324:3:21"
																		},
																		"nativeSrc": "10324:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10324:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10348:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "10348:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10354:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10354:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10344:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10344:3:21"
																		},
																		"nativeSrc": "10344:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10344:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10317:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:21"
																},
																"nativeSrc": "10317:48:21",
																"nodeType": "YulFunctionCall",
																"src": "10317:48:21"
															},
															"nativeSrc": "10317:48:21",
															"nodeType": "YulExpressionStatement",
															"src": "10317:48:21"
														},
														{
															"nativeSrc": "10374:86:21",
															"nodeType": "YulAssignment",
															"src": "10374:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10446:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10446:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10455:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10455:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10382:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "10382:63:21"
																},
																"nativeSrc": "10382:78:21",
																"nodeType": "YulFunctionCall",
																"src": "10382:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10374:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10374:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10481:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10481:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10492:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10492:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10477:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10477:3:21"
																		},
																		"nativeSrc": "10477:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10477:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10501:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "10501:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10507:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10507:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10497:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10497:3:21"
																		},
																		"nativeSrc": "10497:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10497:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10470:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10470:6:21"
																},
																"nativeSrc": "10470:48:21",
																"nodeType": "YulFunctionCall",
																"src": "10470:48:21"
															},
															"nativeSrc": "10470:48:21",
															"nodeType": "YulExpressionStatement",
															"src": "10470:48:21"
														},
														{
															"nativeSrc": "10527:86:21",
															"nodeType": "YulAssignment",
															"src": "10527:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10599:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10599:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10608:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10608:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10535:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "10535:63:21"
																},
																"nativeSrc": "10535:78:21",
																"nodeType": "YulFunctionCall",
																"src": "10535:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10527:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10527:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10667:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10667:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10680:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10680:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10691:2:21",
																				"nodeType": "YulLiteral",
																				"src": "10691:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10676:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:21"
																		},
																		"nativeSrc": "10676:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10623:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "10623:43:21"
																},
																"nativeSrc": "10623:72:21",
																"nodeType": "YulFunctionCall",
																"src": "10623:72:21"
															},
															"nativeSrc": "10623:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "10623:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10749:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10749:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10762:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10762:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10773:3:21",
																				"nodeType": "YulLiteral",
																				"src": "10773:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10758:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:21"
																		},
																		"nativeSrc": "10758:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10758:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10705:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "10705:43:21"
																},
																"nativeSrc": "10705:73:21",
																"nodeType": "YulFunctionCall",
																"src": "10705:73:21"
															},
															"nativeSrc": "10705:73:21",
															"nodeType": "YulExpressionStatement",
															"src": "10705:73:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10832:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10832:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10845:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10845:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10856:3:21",
																				"nodeType": "YulLiteral",
																				"src": "10856:3:21",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10841:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10841:3:21"
																		},
																		"nativeSrc": "10841:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10841:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10788:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "10788:43:21"
																},
																"nativeSrc": "10788:73:21",
																"nodeType": "YulFunctionCall",
																"src": "10788:73:21"
															},
															"nativeSrc": "10788:73:21",
															"nodeType": "YulExpressionStatement",
															"src": "10788:73:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10882:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10882:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10893:3:21",
																				"nodeType": "YulLiteral",
																				"src": "10893:3:21",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10878:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:21"
																		},
																		"nativeSrc": "10878:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10878:19:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10903:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "10903:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10909:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10909:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10899:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10899:3:21"
																		},
																		"nativeSrc": "10899:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10899:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10871:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:21"
																},
																"nativeSrc": "10871:49:21",
																"nodeType": "YulFunctionCall",
																"src": "10871:49:21"
															},
															"nativeSrc": "10871:49:21",
															"nodeType": "YulExpressionStatement",
															"src": "10871:49:21"
														},
														{
															"nativeSrc": "10929:116:21",
															"nodeType": "YulAssignment",
															"src": "10929:116:21",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "11031:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "11031:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11040:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "11040:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10937:93:21",
																	"nodeType": "YulIdentifier",
																	"src": "10937:93:21"
																},
																"nativeSrc": "10937:108:21",
																"nodeType": "YulFunctionCall",
																"src": "10937:108:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10929:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10929:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9837:1215:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10115:9:21",
														"nodeType": "YulTypedName",
														"src": "10115:9:21",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10127:6:21",
														"nodeType": "YulTypedName",
														"src": "10127:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10135:6:21",
														"nodeType": "YulTypedName",
														"src": "10135:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10143:6:21",
														"nodeType": "YulTypedName",
														"src": "10143:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10151:6:21",
														"nodeType": "YulTypedName",
														"src": "10151:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10159:6:21",
														"nodeType": "YulTypedName",
														"src": "10159:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10167:6:21",
														"nodeType": "YulTypedName",
														"src": "10167:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10175:6:21",
														"nodeType": "YulTypedName",
														"src": "10175:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10186:4:21",
														"nodeType": "YulTypedName",
														"src": "10186:4:21",
														"type": ""
													}
												],
												"src": "9837:1215:21"
											},
											{
												"body": {
													"nativeSrc": "11141:391:21",
													"nodeType": "YulBlock",
													"src": "11141:391:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "11187:83:21",
																"nodeType": "YulBlock",
																"src": "11187:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11189:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "11189:77:21"
																			},
																			"nativeSrc": "11189:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "11189:79:21"
																		},
																		"nativeSrc": "11189:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "11189:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11162:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "11162:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11171:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11171:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11158:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11158:3:21"
																		},
																		"nativeSrc": "11158:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11158:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11183:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11183:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11154:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:21"
																},
																"nativeSrc": "11154:32:21",
																"nodeType": "YulFunctionCall",
																"src": "11154:32:21"
															},
															"nativeSrc": "11151:119:21",
															"nodeType": "YulIf",
															"src": "11151:119:21"
														},
														{
															"nativeSrc": "11280:117:21",
															"nodeType": "YulBlock",
															"src": "11280:117:21",
															"statements": [
																{
																	"nativeSrc": "11295:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11295:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11309:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11309:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11299:6:21",
																			"nodeType": "YulTypedName",
																			"src": "11299:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11324:63:21",
																	"nodeType": "YulAssignment",
																	"src": "11324:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11359:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "11359:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11370:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "11370:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11355:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "11355:3:21"
																				},
																				"nativeSrc": "11355:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "11355:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11379:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "11379:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11334:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "11334:20:21"
																		},
																		"nativeSrc": "11334:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11334:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11324:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "11324:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11407:118:21",
															"nodeType": "YulBlock",
															"src": "11407:118:21",
															"statements": [
																{
																	"nativeSrc": "11422:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11422:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11436:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11426:6:21",
																			"nodeType": "YulTypedName",
																			"src": "11426:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11452:63:21",
																	"nodeType": "YulAssignment",
																	"src": "11452:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11487:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "11487:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11498:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "11498:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11483:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "11483:3:21"
																				},
																				"nativeSrc": "11483:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "11483:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11507:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "11507:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11462:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "11462:20:21"
																		},
																		"nativeSrc": "11462:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11462:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11452:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "11452:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11058:474:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11103:9:21",
														"nodeType": "YulTypedName",
														"src": "11103:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11114:7:21",
														"nodeType": "YulTypedName",
														"src": "11114:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11126:6:21",
														"nodeType": "YulTypedName",
														"src": "11126:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11134:6:21",
														"nodeType": "YulTypedName",
														"src": "11134:6:21",
														"type": ""
													}
												],
												"src": "11058:474:21"
											},
											{
												"body": {
													"nativeSrc": "11566:152:21",
													"nodeType": "YulBlock",
													"src": "11566:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11583:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11583:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11586:77:21",
																		"nodeType": "YulLiteral",
																		"src": "11586:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11576:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:21"
																},
																"nativeSrc": "11576:88:21",
																"nodeType": "YulFunctionCall",
																"src": "11576:88:21"
															},
															"nativeSrc": "11576:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "11576:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11680:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11680:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11683:4:21",
																		"nodeType": "YulLiteral",
																		"src": "11683:4:21",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11673:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11673:6:21"
																},
																"nativeSrc": "11673:15:21",
																"nodeType": "YulFunctionCall",
																"src": "11673:15:21"
															},
															"nativeSrc": "11673:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "11673:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11704:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11704:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11707:4:21",
																		"nodeType": "YulLiteral",
																		"src": "11707:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11697:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11697:6:21"
																},
																"nativeSrc": "11697:15:21",
																"nodeType": "YulFunctionCall",
																"src": "11697:15:21"
															},
															"nativeSrc": "11697:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "11697:15:21"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11538:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "11538:180:21"
											},
											{
												"body": {
													"nativeSrc": "11775:269:21",
													"nodeType": "YulBlock",
													"src": "11775:269:21",
													"statements": [
														{
															"nativeSrc": "11785:22:21",
															"nodeType": "YulAssignment",
															"src": "11785:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11799:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "11799:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11805:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11805:1:21",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11795:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11795:3:21"
																},
																"nativeSrc": "11795:12:21",
																"nodeType": "YulFunctionCall",
																"src": "11795:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11785:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:21"
																}
															]
														},
														{
															"nativeSrc": "11816:38:21",
															"nodeType": "YulVariableDeclaration",
															"src": "11816:38:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11846:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "11846:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11852:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11852:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11842:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11842:3:21"
																},
																"nativeSrc": "11842:12:21",
																"nodeType": "YulFunctionCall",
																"src": "11842:12:21"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11820:18:21",
																	"nodeType": "YulTypedName",
																	"src": "11820:18:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11893:51:21",
																"nodeType": "YulBlock",
																"src": "11893:51:21",
																"statements": [
																	{
																		"nativeSrc": "11907:27:21",
																		"nodeType": "YulAssignment",
																		"src": "11907:27:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11921:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "11921:6:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11929:4:21",
																					"nodeType": "YulLiteral",
																					"src": "11929:4:21",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11917:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "11917:3:21"
																			},
																			"nativeSrc": "11917:17:21",
																			"nodeType": "YulFunctionCall",
																			"src": "11917:17:21"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11907:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "11907:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11873:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "11873:18:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11866:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11866:6:21"
																},
																"nativeSrc": "11866:26:21",
																"nodeType": "YulFunctionCall",
																"src": "11866:26:21"
															},
															"nativeSrc": "11863:81:21",
															"nodeType": "YulIf",
															"src": "11863:81:21"
														},
														{
															"body": {
																"nativeSrc": "11996:42:21",
																"nodeType": "YulBlock",
																"src": "11996:42:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12010:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "12010:16:21"
																			},
																			"nativeSrc": "12010:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12010:18:21"
																		},
																		"nativeSrc": "12010:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12010:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11960:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "11960:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11983:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "11983:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11991:2:21",
																				"nodeType": "YulLiteral",
																				"src": "11991:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11980:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "11980:2:21"
																		},
																		"nativeSrc": "11980:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11980:14:21"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11957:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "11957:2:21"
																},
																"nativeSrc": "11957:38:21",
																"nodeType": "YulFunctionCall",
																"src": "11957:38:21"
															},
															"nativeSrc": "11954:84:21",
															"nodeType": "YulIf",
															"src": "11954:84:21"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11724:320:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11759:4:21",
														"nodeType": "YulTypedName",
														"src": "11759:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11768:6:21",
														"nodeType": "YulTypedName",
														"src": "11768:6:21",
														"type": ""
													}
												],
												"src": "11724:320:21"
											},
											{
												"body": {
													"nativeSrc": "12156:132:21",
													"nodeType": "YulBlock",
													"src": "12156:132:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12178:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12178:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12186:1:21",
																				"nodeType": "YulLiteral",
																				"src": "12186:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12174:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:21"
																		},
																		"nativeSrc": "12174:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:14:21"
																	},
																	{
																		"hexValue": "5350533a3a72656e6f756e6365526f6c653a2063616e206f6e6c792072656e6f",
																		"kind": "string",
																		"nativeSrc": "12190:34:21",
																		"nodeType": "YulLiteral",
																		"src": "12190:34:21",
																		"type": "",
																		"value": "SPS::renounceRole: can only reno"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12167:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:21"
																},
																"nativeSrc": "12167:58:21",
																"nodeType": "YulFunctionCall",
																"src": "12167:58:21"
															},
															"nativeSrc": "12167:58:21",
															"nodeType": "YulExpressionStatement",
															"src": "12167:58:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12246:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12246:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12254:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12254:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12242:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12242:3:21"
																		},
																		"nativeSrc": "12242:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12242:15:21"
																	},
																	{
																		"hexValue": "756e636520726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "12259:21:21",
																		"nodeType": "YulLiteral",
																		"src": "12259:21:21",
																		"type": "",
																		"value": "unce roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12235:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12235:6:21"
																},
																"nativeSrc": "12235:46:21",
																"nodeType": "YulFunctionCall",
																"src": "12235:46:21"
															},
															"nativeSrc": "12235:46:21",
															"nodeType": "YulExpressionStatement",
															"src": "12235:46:21"
														}
													]
												},
												"name": "store_literal_in_memory_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c",
												"nativeSrc": "12050:238:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12148:6:21",
														"nodeType": "YulTypedName",
														"src": "12148:6:21",
														"type": ""
													}
												],
												"src": "12050:238:21"
											},
											{
												"body": {
													"nativeSrc": "12440:220:21",
													"nodeType": "YulBlock",
													"src": "12440:220:21",
													"statements": [
														{
															"nativeSrc": "12450:74:21",
															"nodeType": "YulAssignment",
															"src": "12450:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12516:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "12516:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12521:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:21",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12457:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "12457:58:21"
																},
																"nativeSrc": "12457:67:21",
																"nodeType": "YulFunctionCall",
																"src": "12457:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12450:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12450:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12622:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "12622:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c",
																	"nativeSrc": "12533:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "12533:88:21"
																},
																"nativeSrc": "12533:93:21",
																"nodeType": "YulFunctionCall",
																"src": "12533:93:21"
															},
															"nativeSrc": "12533:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "12533:93:21"
														},
														{
															"nativeSrc": "12635:19:21",
															"nodeType": "YulAssignment",
															"src": "12635:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12646:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "12646:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12651:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12651:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12642:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12642:3:21"
																},
																"nativeSrc": "12642:12:21",
																"nodeType": "YulFunctionCall",
																"src": "12642:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12635:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12635:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12294:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12428:3:21",
														"nodeType": "YulTypedName",
														"src": "12428:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12436:3:21",
														"nodeType": "YulTypedName",
														"src": "12436:3:21",
														"type": ""
													}
												],
												"src": "12294:366:21"
											},
											{
												"body": {
													"nativeSrc": "12837:248:21",
													"nodeType": "YulBlock",
													"src": "12837:248:21",
													"statements": [
														{
															"nativeSrc": "12847:26:21",
															"nodeType": "YulAssignment",
															"src": "12847:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12859:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12859:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12870:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12870:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12855:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12855:3:21"
																},
																"nativeSrc": "12855:18:21",
																"nodeType": "YulFunctionCall",
																"src": "12855:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12847:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12847:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12894:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12894:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12905:1:21",
																				"nodeType": "YulLiteral",
																				"src": "12905:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12890:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12890:3:21"
																		},
																		"nativeSrc": "12890:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12890:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12913:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "12913:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12919:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12919:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12909:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12909:3:21"
																		},
																		"nativeSrc": "12909:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12909:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12883:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12883:6:21"
																},
																"nativeSrc": "12883:47:21",
																"nodeType": "YulFunctionCall",
																"src": "12883:47:21"
															},
															"nativeSrc": "12883:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "12883:47:21"
														},
														{
															"nativeSrc": "12939:139:21",
															"nodeType": "YulAssignment",
															"src": "12939:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13073:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "13073:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12947:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "12947:124:21"
																},
																"nativeSrc": "12947:131:21",
																"nodeType": "YulFunctionCall",
																"src": "12947:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12939:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12939:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12666:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12817:9:21",
														"nodeType": "YulTypedName",
														"src": "12817:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12832:4:21",
														"nodeType": "YulTypedName",
														"src": "12832:4:21",
														"type": ""
													}
												],
												"src": "12666:419:21"
											},
											{
												"body": {
													"nativeSrc": "13119:152:21",
													"nodeType": "YulBlock",
													"src": "13119:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13136:1:21",
																		"nodeType": "YulLiteral",
																		"src": "13136:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13139:77:21",
																		"nodeType": "YulLiteral",
																		"src": "13139:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13129:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13129:6:21"
																},
																"nativeSrc": "13129:88:21",
																"nodeType": "YulFunctionCall",
																"src": "13129:88:21"
															},
															"nativeSrc": "13129:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "13129:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13233:1:21",
																		"nodeType": "YulLiteral",
																		"src": "13233:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13236:4:21",
																		"nodeType": "YulLiteral",
																		"src": "13236:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13226:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13226:6:21"
																},
																"nativeSrc": "13226:15:21",
																"nodeType": "YulFunctionCall",
																"src": "13226:15:21"
															},
															"nativeSrc": "13226:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "13226:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13257:1:21",
																		"nodeType": "YulLiteral",
																		"src": "13257:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13260:4:21",
																		"nodeType": "YulLiteral",
																		"src": "13260:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13250:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13250:6:21"
																},
																"nativeSrc": "13250:15:21",
																"nodeType": "YulFunctionCall",
																"src": "13250:15:21"
															},
															"nativeSrc": "13250:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "13250:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "13091:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "13091:180:21"
											},
											{
												"body": {
													"nativeSrc": "13431:288:21",
													"nodeType": "YulBlock",
													"src": "13431:288:21",
													"statements": [
														{
															"nativeSrc": "13441:26:21",
															"nodeType": "YulAssignment",
															"src": "13441:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13453:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13453:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13464:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13464:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13449:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13449:3:21"
																},
																"nativeSrc": "13449:18:21",
																"nodeType": "YulFunctionCall",
																"src": "13449:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13441:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13441:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13521:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "13521:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13534:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13534:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13545:1:21",
																				"nodeType": "YulLiteral",
																				"src": "13545:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13530:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13530:3:21"
																		},
																		"nativeSrc": "13530:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13530:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13477:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "13477:43:21"
																},
																"nativeSrc": "13477:71:21",
																"nodeType": "YulFunctionCall",
																"src": "13477:71:21"
															},
															"nativeSrc": "13477:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "13477:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13602:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "13602:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13615:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13615:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13626:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13626:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13611:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13611:3:21"
																		},
																		"nativeSrc": "13611:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13611:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13558:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "13558:43:21"
																},
																"nativeSrc": "13558:72:21",
																"nodeType": "YulFunctionCall",
																"src": "13558:72:21"
															},
															"nativeSrc": "13558:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "13558:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13684:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "13684:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13697:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13697:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13708:2:21",
																				"nodeType": "YulLiteral",
																				"src": "13708:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13693:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13693:3:21"
																		},
																		"nativeSrc": "13693:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13693:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13640:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "13640:43:21"
																},
																"nativeSrc": "13640:72:21",
																"nodeType": "YulFunctionCall",
																"src": "13640:72:21"
															},
															"nativeSrc": "13640:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "13640:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13277:442:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13387:9:21",
														"nodeType": "YulTypedName",
														"src": "13387:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13399:6:21",
														"nodeType": "YulTypedName",
														"src": "13399:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13407:6:21",
														"nodeType": "YulTypedName",
														"src": "13407:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13415:6:21",
														"nodeType": "YulTypedName",
														"src": "13415:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13426:4:21",
														"nodeType": "YulTypedName",
														"src": "13426:4:21",
														"type": ""
													}
												],
												"src": "13277:442:21"
											},
											{
												"body": {
													"nativeSrc": "13823:124:21",
													"nodeType": "YulBlock",
													"src": "13823:124:21",
													"statements": [
														{
															"nativeSrc": "13833:26:21",
															"nodeType": "YulAssignment",
															"src": "13833:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13845:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13845:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13856:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13856:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13841:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:21"
																},
																"nativeSrc": "13841:18:21",
																"nodeType": "YulFunctionCall",
																"src": "13841:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13833:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13833:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13913:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "13913:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13926:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13926:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13937:1:21",
																				"nodeType": "YulLiteral",
																				"src": "13937:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13922:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13922:3:21"
																		},
																		"nativeSrc": "13922:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13922:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13869:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "13869:43:21"
																},
																"nativeSrc": "13869:71:21",
																"nodeType": "YulFunctionCall",
																"src": "13869:71:21"
															},
															"nativeSrc": "13869:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "13869:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13725:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13795:9:21",
														"nodeType": "YulTypedName",
														"src": "13795:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13807:6:21",
														"nodeType": "YulTypedName",
														"src": "13807:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13818:4:21",
														"nodeType": "YulTypedName",
														"src": "13818:4:21",
														"type": ""
													}
												],
												"src": "13725:222:21"
											},
											{
												"body": {
													"nativeSrc": "13981:152:21",
													"nodeType": "YulBlock",
													"src": "13981:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13998:1:21",
																		"nodeType": "YulLiteral",
																		"src": "13998:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14001:77:21",
																		"nodeType": "YulLiteral",
																		"src": "14001:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13991:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13991:6:21"
																},
																"nativeSrc": "13991:88:21",
																"nodeType": "YulFunctionCall",
																"src": "13991:88:21"
															},
															"nativeSrc": "13991:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "13991:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14095:1:21",
																		"nodeType": "YulLiteral",
																		"src": "14095:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14098:4:21",
																		"nodeType": "YulLiteral",
																		"src": "14098:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14088:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14088:6:21"
																},
																"nativeSrc": "14088:15:21",
																"nodeType": "YulFunctionCall",
																"src": "14088:15:21"
															},
															"nativeSrc": "14088:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "14088:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14119:1:21",
																		"nodeType": "YulLiteral",
																		"src": "14119:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14122:4:21",
																		"nodeType": "YulLiteral",
																		"src": "14122:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14112:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14112:6:21"
																},
																"nativeSrc": "14112:15:21",
																"nodeType": "YulFunctionCall",
																"src": "14112:15:21"
															},
															"nativeSrc": "14112:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "14112:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13953:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "13953:180:21"
											},
											{
												"body": {
													"nativeSrc": "14183:147:21",
													"nodeType": "YulBlock",
													"src": "14183:147:21",
													"statements": [
														{
															"nativeSrc": "14193:25:21",
															"nodeType": "YulAssignment",
															"src": "14193:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14216:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "14216:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14198:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "14198:17:21"
																},
																"nativeSrc": "14198:20:21",
																"nodeType": "YulFunctionCall",
																"src": "14198:20:21"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14193:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "14193:1:21"
																}
															]
														},
														{
															"nativeSrc": "14227:25:21",
															"nodeType": "YulAssignment",
															"src": "14227:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14250:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "14250:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14232:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "14232:17:21"
																},
																"nativeSrc": "14232:20:21",
																"nodeType": "YulFunctionCall",
																"src": "14232:20:21"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14227:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "14227:1:21"
																}
															]
														},
														{
															"nativeSrc": "14261:16:21",
															"nodeType": "YulAssignment",
															"src": "14261:16:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14272:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "14272:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14275:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "14275:1:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14268:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14268:3:21"
																},
																"nativeSrc": "14268:9:21",
																"nodeType": "YulFunctionCall",
																"src": "14268:9:21"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14261:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14261:3:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14301:22:21",
																"nodeType": "YulBlock",
																"src": "14301:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14303:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "14303:16:21"
																			},
																			"nativeSrc": "14303:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "14303:18:21"
																		},
																		"nativeSrc": "14303:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "14303:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14293:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "14293:1:21"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14296:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "14296:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14290:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "14290:2:21"
																},
																"nativeSrc": "14290:10:21",
																"nodeType": "YulFunctionCall",
																"src": "14290:10:21"
															},
															"nativeSrc": "14287:36:21",
															"nodeType": "YulIf",
															"src": "14287:36:21"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14139:191:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14170:1:21",
														"nodeType": "YulTypedName",
														"src": "14170:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14173:1:21",
														"nodeType": "YulTypedName",
														"src": "14173:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14179:3:21",
														"nodeType": "YulTypedName",
														"src": "14179:3:21",
														"type": ""
													}
												],
												"src": "14139:191:21"
											},
											{
												"body": {
													"nativeSrc": "14462:206:21",
													"nodeType": "YulBlock",
													"src": "14462:206:21",
													"statements": [
														{
															"nativeSrc": "14472:26:21",
															"nodeType": "YulAssignment",
															"src": "14472:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14484:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14484:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14495:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14495:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14480:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14480:3:21"
																},
																"nativeSrc": "14480:18:21",
																"nodeType": "YulFunctionCall",
																"src": "14480:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14472:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14472:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14552:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14552:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14565:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14565:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14576:1:21",
																				"nodeType": "YulLiteral",
																				"src": "14576:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14561:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14561:3:21"
																		},
																		"nativeSrc": "14561:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14561:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14508:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "14508:43:21"
																},
																"nativeSrc": "14508:71:21",
																"nodeType": "YulFunctionCall",
																"src": "14508:71:21"
															},
															"nativeSrc": "14508:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "14508:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14633:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14633:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14646:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14646:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14657:2:21",
																				"nodeType": "YulLiteral",
																				"src": "14657:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14642:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14642:3:21"
																		},
																		"nativeSrc": "14642:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14642:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14589:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "14589:43:21"
																},
																"nativeSrc": "14589:72:21",
																"nodeType": "YulFunctionCall",
																"src": "14589:72:21"
															},
															"nativeSrc": "14589:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "14589:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "14336:332:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14426:9:21",
														"nodeType": "YulTypedName",
														"src": "14426:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14438:6:21",
														"nodeType": "YulTypedName",
														"src": "14438:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14446:6:21",
														"nodeType": "YulTypedName",
														"src": "14446:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14457:4:21",
														"nodeType": "YulTypedName",
														"src": "14457:4:21",
														"type": ""
													}
												],
												"src": "14336:332:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c(memPtr) {\n\n        mstore(add(memPtr, 0), \"SPS::renounceRole: can only reno\")\n\n        mstore(add(memPtr, 32), \"unce roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2266": [
									{
										"length": 32,
										"start": 3677
									}
								],
								"2269": [
									{
										"length": 32,
										"start": 3736
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c806370a08231116100c1578063a217fddf1161007a578063a217fddf146103b5578063a9059cbb146103d3578063d539139314610403578063d547741f14610421578063dd62ed3e1461043d578063e7a324dc1461046d5761014b565b806370a08231146102d957806375b238fc1461030957806379cc67901461032757806384b0196e1461034357806391d148541461036757806395d89b41146103975761014b565b8063248a9ca311610113578063248a9ca31461021b5780632f2ff15d1461024b578063313ce5671461026757806336568abe1461028557806340c10f19146102a157806342966c68146102bd5761014b565b806301ffc9a71461014f57806306fdde031461017f578063095ea7b31461019d57806318160ddd146101cd57806323b872dd146101eb575b5f80fd5b610169600480360381019061016491906116bf565b61048b565b6040516101769190611704565b60405180910390f35b610187610504565b60405161019491906117a7565b60405180910390f35b6101b760048036038101906101b29190611854565b610594565b6040516101c49190611704565b60405180910390f35b6101d56105b6565b6040516101e291906118a1565b60405180910390f35b610205600480360381019061020091906118ba565b6105bf565b6040516102129190611704565b60405180910390f35b6102356004803603810190610230919061193d565b6105ed565b6040516102429190611977565b60405180910390f35b61026560048036038101906102609190611990565b61060a565b005b61026f61062b565b60405161027c91906119e9565b60405180910390f35b61029f600480360381019061029a9190611990565b610633565b005b6102bb60048036038101906102b69190611854565b6106bf565b005b6102d760048036038101906102d29190611a02565b610708565b005b6102f360048036038101906102ee9190611a2d565b61071c565b60405161030091906118a1565b60405180910390f35b610311610761565b60405161031e9190611977565b60405180910390f35b610341600480360381019061033c9190611854565b610785565b005b61034b6107a5565b60405161035e9796959493929190611b58565b60405180910390f35b610381600480360381019061037c9190611990565b61084a565b60405161038e9190611704565b60405180910390f35b61039f6108ae565b6040516103ac91906117a7565b60405180910390f35b6103bd61093e565b6040516103ca9190611977565b60405180910390f35b6103ed60048036038101906103e89190611854565b610944565b6040516103fa9190611704565b60405180910390f35b61040b610966565b6040516104189190611977565b60405180910390f35b61043b60048036038101906104369190611990565b61098a565b005b61045760048036038101906104529190611bda565b6109ab565b60405161046491906118a1565b60405180910390f35b610475610a2d565b6040516104829190611977565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fd57506104fc82610a51565b5b9050919050565b60606003805461051390611c45565b80601f016020809104026020016040519081016040528092919081815260200182805461053f90611c45565b801561058a5780601f106105615761010080835404028352916020019161058a565b820191905f5260205f20905b81548152906001019060200180831161056d57829003601f168201915b5050505050905090565b5f8061059e610aba565b90506105ab818585610ac1565b600191505092915050565b5f600254905090565b5f806105c9610aba565b90506105d6858285610ad3565b6105e1858585610b65565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610613826105ed565b61061c81610c55565b6106268383610c69565b505050565b5f6012905090565b61063b610c8b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090611ce5565b60405180910390fd5b6106b38282610cd1565b6106bb610d4c565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66106e981610c55565b6106f1610c8b565b6106fb8383610d56565b610703610d4c565b505050565b610719610713610aba565b82610dd5565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61079782610791610aba565b83610ad3565b6107a18282610dd5565b5050565b5f6060805f805f60606107b6610e54565b6107be610e8f565b46305f801b5f67ffffffffffffffff8111156107dd576107dc611d03565b5b60405190808252806020026020018201604052801561080b5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546108bd90611c45565b80601f01602080910402602001604051908101604052809291908181526020018280546108e990611c45565b80156109345780601f1061090b57610100808354040283529160200191610934565b820191905f5260205f20905b81548152906001019060200180831161091757829003601f168201915b5050505050905090565b5f801b81565b5f8061094e610aba565b905061095b818585610b65565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610993826105ed565b61099c81610c55565b6109a68383610eca565b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610ace8383836001610eec565b505050565b5f610ade84846109ab565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b5f5781811015610b50578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b4793929190611d30565b60405180910390fd5b610b5e84848484035f610eec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bd5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bcc9190611d65565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c45575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c3c9190611d65565b60405180910390fd5b610c508383836110bb565b505050565b610c6681610c61610aba565b6112d4565b50565b610c72826105ed565b610c7b81610c55565b610c858383611325565b50505050565b600260065403610cc7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600681905550565b610cd9610aba565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d3d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d47828261140f565b505050565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dbd9190611d65565b60405180910390fd5b610dd15f83836110bb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e45575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e3c9190611d65565b60405180910390fd5b610e50825f836110bb565b5050565b6060610e8a60077f00000000000000000000000000000000000000000000000000000000000000006114f990919063ffffffff16565b905090565b6060610ec560087f00000000000000000000000000000000000000000000000000000000000000006114f990919063ffffffff16565b905090565b610ed3826105ed565b610edc81610c55565b610ee6838361140f565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f5c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f539190611d65565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fcc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610fc39190611d65565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156110b5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516110ac91906118a1565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361110b578060025f8282546110ff9190611dab565b925050819055506111d9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611194578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161118b93929190611d30565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611220578060025f828254039250508190555061126a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112c791906118a1565b60405180910390a3505050565b6112de828261084a565b6113215780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611318929190611dde565b60405180910390fd5b5050565b5f611330838361084a565b61140557600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506113a2610aba565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611409565b5f90505b92915050565b5f61141a838361084a565b156114ef575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061148c610aba565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506114f3565b5f90505b92915050565b606060ff5f1b83146115155761150e836115a6565b90506115a0565b81805461152190611c45565b80601f016020809104026020016040519081016040528092919081815260200182805461154d90611c45565b80156115985780601f1061156f57610100808354040283529160200191611598565b820191905f5260205f20905b81548152906001019060200180831161157b57829003601f168201915b505050505090505b92915050565b60605f6115b283611618565b90505f602067ffffffffffffffff8111156115d0576115cf611d03565b5b6040519080825280601f01601f1916602001820160405280156116025781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f81111561165d576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61169e8161166a565b81146116a8575f80fd5b50565b5f813590506116b981611695565b92915050565b5f602082840312156116d4576116d3611666565b5b5f6116e1848285016116ab565b91505092915050565b5f8115159050919050565b6116fe816116ea565b82525050565b5f6020820190506117175f8301846116f5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611754578082015181840152602081019050611739565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6117798261171d565b6117838185611727565b9350611793818560208601611737565b61179c8161175f565b840191505092915050565b5f6020820190508181035f8301526117bf818461176f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117f0826117c7565b9050919050565b611800816117e6565b811461180a575f80fd5b50565b5f8135905061181b816117f7565b92915050565b5f819050919050565b61183381611821565b811461183d575f80fd5b50565b5f8135905061184e8161182a565b92915050565b5f806040838503121561186a57611869611666565b5b5f6118778582860161180d565b925050602061188885828601611840565b9150509250929050565b61189b81611821565b82525050565b5f6020820190506118b45f830184611892565b92915050565b5f805f606084860312156118d1576118d0611666565b5b5f6118de8682870161180d565b93505060206118ef8682870161180d565b925050604061190086828701611840565b9150509250925092565b5f819050919050565b61191c8161190a565b8114611926575f80fd5b50565b5f8135905061193781611913565b92915050565b5f6020828403121561195257611951611666565b5b5f61195f84828501611929565b91505092915050565b6119718161190a565b82525050565b5f60208201905061198a5f830184611968565b92915050565b5f80604083850312156119a6576119a5611666565b5b5f6119b385828601611929565b92505060206119c48582860161180d565b9150509250929050565b5f60ff82169050919050565b6119e3816119ce565b82525050565b5f6020820190506119fc5f8301846119da565b92915050565b5f60208284031215611a1757611a16611666565b5b5f611a2484828501611840565b91505092915050565b5f60208284031215611a4257611a41611666565b5b5f611a4f8482850161180d565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611a8c81611a58565b82525050565b611a9b816117e6565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611ad381611821565b82525050565b5f611ae48383611aca565b60208301905092915050565b5f602082019050919050565b5f611b0682611aa1565b611b108185611aab565b9350611b1b83611abb565b805f5b83811015611b4b578151611b328882611ad9565b9750611b3d83611af0565b925050600181019050611b1e565b5085935050505092915050565b5f60e082019050611b6b5f83018a611a83565b8181036020830152611b7d818961176f565b90508181036040830152611b91818861176f565b9050611ba06060830187611892565b611bad6080830186611a92565b611bba60a0830185611968565b81810360c0830152611bcc8184611afc565b905098975050505050505050565b5f8060408385031215611bf057611bef611666565b5b5f611bfd8582860161180d565b9250506020611c0e8582860161180d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c5c57607f821691505b602082108103611c6f57611c6e611c18565b5b50919050565b7f5350533a3a72656e6f756e6365526f6c653a2063616e206f6e6c792072656e6f5f8201527f756e636520726f6c657320666f722073656c6600000000000000000000000000602082015250565b5f611ccf603383611727565b9150611cda82611c75565b604082019050919050565b5f6020820190508181035f830152611cfc81611cc3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f606082019050611d435f830186611a92565b611d506020830185611892565b611d5d6040830184611892565b949350505050565b5f602082019050611d785f830184611a92565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611db582611821565b9150611dc083611821565b9250828201905080821115611dd857611dd7611d7e565b5b92915050565b5f604082019050611df15f830185611a92565b611dfe6020830184611968565b939250505056fea2646970667358221220b360732b887d6fc10615b4b1043dc17d42ecfb9557669270a5b885b1c72bca7e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x46D JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x397 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2BD JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x16BF JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BD PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FD JUMPI POP PUSH2 0x4FC DUP3 PUSH2 0xA51 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x513 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53F SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x561 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x58A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59E PUSH2 0xABA JUMP JUMPDEST SWAP1 POP PUSH2 0x5AB DUP2 DUP6 DUP6 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5C9 PUSH2 0xABA JUMP JUMPDEST SWAP1 POP PUSH2 0x5D6 DUP6 DUP3 DUP6 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x5E1 DUP6 DUP6 DUP6 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x613 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xC69 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x63B PUSH2 0xC8B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B3 DUP3 DUP3 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0x6BB PUSH2 0xD4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x6E9 DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x6FB DUP4 DUP4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x703 PUSH2 0xD4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x719 PUSH2 0x713 PUSH2 0xABA JUMP JUMPDEST DUP3 PUSH2 0xDD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x797 DUP3 PUSH2 0x791 PUSH2 0xABA JUMP JUMPDEST DUP4 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x7A1 DUP3 DUP3 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x7B6 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xE8F JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x1D03 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x80B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8BD SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E9 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x934 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x934 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x917 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x94E PUSH2 0xABA JUMP JUMPDEST SWAP1 POP PUSH2 0x95B DUP2 DUP6 DUP6 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x993 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x99C DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x9A6 DUP4 DUP4 PUSH2 0xECA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xACE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xADE DUP5 DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB5F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB50 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC50 DUP4 DUP4 DUP4 PUSH2 0x10BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xC61 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC72 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xC7B DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xC85 DUP4 DUP4 PUSH2 0x1325 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xCD9 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD47 DUP3 DUP3 PUSH2 0x140F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD1 PUSH0 DUP4 DUP4 PUSH2 0x10BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE50 DUP3 PUSH0 DUP4 PUSH2 0x10BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE8A PUSH1 0x7 PUSH32 0x0 PUSH2 0x14F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEC5 PUSH1 0x8 PUSH32 0x0 PUSH2 0x14F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED3 DUP3 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xEDC DUP2 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xEE6 DUP4 DUP4 PUSH2 0x140F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x10B5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10AC SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11D9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1194 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1220 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x126A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x12DE DUP3 DUP3 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1321 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP3 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1330 DUP4 DUP4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1405 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x13A2 PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1409 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x141A DUP4 DUP4 PUSH2 0x84A JUMP JUMPDEST ISZERO PUSH2 0x14EF JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x148C PUSH2 0xABA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x14F3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1515 JUMPI PUSH2 0x150E DUP4 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1521 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x154D SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1598 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x156F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1598 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x157B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15B2 DUP4 PUSH2 0x1618 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15CF PUSH2 0x1D03 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1602 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169E DUP2 PUSH2 0x166A JUMP JUMPDEST DUP2 EQ PUSH2 0x16A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B9 DUP2 PUSH2 0x1695 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH2 0x16D3 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E1 DUP5 DUP3 DUP6 ADD PUSH2 0x16AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FE DUP2 PUSH2 0x16EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1717 PUSH0 DUP4 ADD DUP5 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1754 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1739 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1779 DUP3 PUSH2 0x171D JUMP JUMPDEST PUSH2 0x1783 DUP2 DUP6 PUSH2 0x1727 JUMP JUMPDEST SWAP4 POP PUSH2 0x1793 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x175F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17BF DUP2 DUP5 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F0 DUP3 PUSH2 0x17C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1800 DUP2 PUSH2 0x17E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x180A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x181B DUP2 PUSH2 0x17F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1833 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x184E DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1869 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1877 DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1888 DUP6 DUP3 DUP7 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18DE DUP7 DUP3 DUP8 ADD PUSH2 0x180D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18EF DUP7 DUP3 DUP8 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1900 DUP7 DUP3 DUP8 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191C DUP2 PUSH2 0x190A JUMP JUMPDEST DUP2 EQ PUSH2 0x1926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x1913 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195F DUP5 DUP3 DUP6 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x190A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x198A PUSH0 DUP4 ADD DUP5 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C4 DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E3 DUP2 PUSH2 0x19CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FC PUSH0 DUP4 ADD DUP5 PUSH2 0x19DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A24 DUP5 DUP3 DUP6 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A42 JUMPI PUSH2 0x1A41 PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A4F DUP5 DUP3 DUP6 ADD PUSH2 0x180D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8C DUP2 PUSH2 0x1A58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A9B DUP2 PUSH2 0x17E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD3 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE4 DUP4 DUP4 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B06 DUP3 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x1B10 DUP2 DUP6 PUSH2 0x1AAB JUMP JUMPDEST SWAP4 POP PUSH2 0x1B1B DUP4 PUSH2 0x1ABB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B4B JUMPI DUP2 MLOAD PUSH2 0x1B32 DUP9 DUP3 PUSH2 0x1AD9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B3D DUP4 PUSH2 0x1AF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B1E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1B6B PUSH0 DUP4 ADD DUP11 PUSH2 0x1A83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B7D DUP2 DUP10 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B91 DUP2 DUP9 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA0 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1BAD PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1968 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 DUP5 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH2 0x1BEF PUSH2 0x1666 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFD DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0E DUP6 DUP3 DUP7 ADD PUSH2 0x180D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x1C18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5350533A3A72656E6F756E6365526F6C653A2063616E206F6E6C792072656E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x756E636520726F6C657320666F722073656C6600000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCF PUSH1 0x33 DUP4 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA DUP3 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CFC DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D43 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1D5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D78 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DB5 DUP3 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC0 DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1D7E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DF1 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1DFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH1 0x73 0x2B DUP9 PUSH30 0x6FC10615B4B1043DC17D42ECFB9557669270A5B885B1C72BCA7E64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "782:8992:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8350:142:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9545:227:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2897:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:60:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5144:557:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934:62:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8929:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:117:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;8350:142:20:-;8425:18;8438:4;8425:12;:18::i;:::-;2464:16:0;2475:4;2464:10;:16::i;:::-;8455:30:20::1;8471:4;8477:7;8455:15;:30::i;:::-;8350:142:::0;;;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;9545:227:20:-;2356:21:9;:19;:21::i;:::-;9656:10:20::1;9645:21;;:7;:21;;;9637:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;9732:33;9751:4;9757:7;9732:18;:33::i;:::-;2398:20:9::0;:18;:20::i;:::-;9545:227:20;;:::o;2897:180::-;972:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2356:21:9::1;:19;:21::i;:::-;2991:17:20::2;2997:2;3001:6;2991:5;:17::i;:::-;2398:20:9::1;:18;:20::i;:::-;2897:180:20::0;;;:::o;618:87:6:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1002:60:20:-;1039:23;1002:60;:::o;1021:158:6:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;5144:557:14:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;934:62:20:-;972:24;934:62;:::o;8929:144::-;9005:18;9018:4;9005:12;:18::i;:::-;2464:16:0;2475:4;2464:10;:16::i;:::-;9035:31:20::1;9052:4;9058:7;9035:16;:31::i;:::-;8929:144:::0;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1068:117:20:-;1114:71;1068:117;:::o;762:146:16:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2431:307:9:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2744:208:9:-;1713:1;2924:7;:21;;;;2744:208::o;7721::4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;6021:126:14:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3385:267:10:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;2078:405::-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;88:117:21:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:::-;7527:6;7576:2;7564:9;7555:7;7551:23;7547:32;7544:119;;;7582:79;;:::i;:::-;7544:119;7702:1;7727:53;7772:7;7763:6;7752:9;7748:22;7727:53;:::i;:::-;7717:63;;7673:117;7468:329;;;;:::o;7803:149::-;7839:7;7879:66;7872:5;7868:78;7857:89;;7803:149;;;:::o;7958:115::-;8043:23;8060:5;8043:23;:::i;:::-;8038:3;8031:36;7958:115;;:::o;8079:118::-;8166:24;8184:5;8166:24;:::i;:::-;8161:3;8154:37;8079:118;;:::o;8203:114::-;8270:6;8304:5;8298:12;8288:22;;8203:114;;;:::o;8323:184::-;8422:11;8456:6;8451:3;8444:19;8496:4;8491:3;8487:14;8472:29;;8323:184;;;;:::o;8513:132::-;8580:4;8603:3;8595:11;;8633:4;8628:3;8624:14;8616:22;;8513:132;;;:::o;8651:108::-;8728:24;8746:5;8728:24;:::i;:::-;8723:3;8716:37;8651:108;;:::o;8765:179::-;8834:10;8855:46;8897:3;8889:6;8855:46;:::i;:::-;8933:4;8928:3;8924:14;8910:28;;8765:179;;;;:::o;8950:113::-;9020:4;9052;9047:3;9043:14;9035:22;;8950:113;;;:::o;9099:732::-;9218:3;9247:54;9295:5;9247:54;:::i;:::-;9317:86;9396:6;9391:3;9317:86;:::i;:::-;9310:93;;9427:56;9477:5;9427:56;:::i;:::-;9506:7;9537:1;9522:284;9547:6;9544:1;9541:13;9522:284;;;9623:6;9617:13;9650:63;9709:3;9694:13;9650:63;:::i;:::-;9643:70;;9736:60;9789:6;9736:60;:::i;:::-;9726:70;;9582:224;9569:1;9566;9562:9;9557:14;;9522:284;;;9526:14;9822:3;9815:10;;9223:608;;;9099:732;;;;:::o;9837:1215::-;10186:4;10224:3;10213:9;10209:19;10201:27;;10238:69;10304:1;10293:9;10289:17;10280:6;10238:69;:::i;:::-;10354:9;10348:4;10344:20;10339:2;10328:9;10324:18;10317:48;10382:78;10455:4;10446:6;10382:78;:::i;:::-;10374:86;;10507:9;10501:4;10497:20;10492:2;10481:9;10477:18;10470:48;10535:78;10608:4;10599:6;10535:78;:::i;:::-;10527:86;;10623:72;10691:2;10680:9;10676:18;10667:6;10623:72;:::i;:::-;10705:73;10773:3;10762:9;10758:19;10749:6;10705:73;:::i;:::-;10788;10856:3;10845:9;10841:19;10832:6;10788:73;:::i;:::-;10909:9;10903:4;10899:20;10893:3;10882:9;10878:19;10871:49;10937:108;11040:4;11031:6;10937:108;:::i;:::-;10929:116;;9837:1215;;;;;;;;;;:::o;11058:474::-;11126:6;11134;11183:2;11171:9;11162:7;11158:23;11154:32;11151:119;;;11189:79;;:::i;:::-;11151:119;11309:1;11334:53;11379:7;11370:6;11359:9;11355:22;11334:53;:::i;:::-;11324:63;;11280:117;11436:2;11462:53;11507:7;11498:6;11487:9;11483:22;11462:53;:::i;:::-;11452:63;;11407:118;11058:474;;;;;:::o;11538:180::-;11586:77;11583:1;11576:88;11683:4;11680:1;11673:15;11707:4;11704:1;11697:15;11724:320;11768:6;11805:1;11799:4;11795:12;11785:22;;11852:1;11846:4;11842:12;11873:18;11863:81;;11929:4;11921:6;11917:17;11907:27;;11863:81;11991:2;11983:6;11980:14;11960:18;11957:38;11954:84;;12010:18;;:::i;:::-;11954:84;11775:269;11724:320;;;:::o;12050:238::-;12190:34;12186:1;12178:6;12174:14;12167:58;12259:21;12254:2;12246:6;12242:15;12235:46;12050:238;:::o;12294:366::-;12436:3;12457:67;12521:2;12516:3;12457:67;:::i;:::-;12450:74;;12533:93;12622:3;12533:93;:::i;:::-;12651:2;12646:3;12642:12;12635:19;;12294:366;;;:::o;12666:419::-;12832:4;12870:2;12859:9;12855:18;12847:26;;12919:9;12913:4;12909:20;12905:1;12894:9;12890:17;12883:47;12947:131;13073:4;12947:131;:::i;:::-;12939:139;;12666:419;;;:::o;13091:180::-;13139:77;13136:1;13129:88;13236:4;13233:1;13226:15;13260:4;13257:1;13250:15;13277:442;13426:4;13464:2;13453:9;13449:18;13441:26;;13477:71;13545:1;13534:9;13530:17;13521:6;13477:71;:::i;:::-;13558:72;13626:2;13615:9;13611:18;13602:6;13558:72;:::i;:::-;13640;13708:2;13697:9;13693:18;13684:6;13640:72;:::i;:::-;13277:442;;;;;;:::o;13725:222::-;13818:4;13856:2;13845:9;13841:18;13833:26;;13869:71;13937:1;13926:9;13922:17;13913:6;13869:71;:::i;:::-;13725:222;;;;:::o;13953:180::-;14001:77;13998:1;13991:88;14098:4;14095:1;14088:15;14122:4;14119:1;14112:15;14139:191;14179:3;14198:20;14216:1;14198:20;:::i;:::-;14193:25;;14232:20;14250:1;14232:20;:::i;:::-;14227:25;;14275:1;14272;14268:9;14261:16;;14296:3;14293:1;14290:10;14287:36;;;14303:18;;:::i;:::-;14287:36;14139:191;;;;:::o;14336:332::-;14457:4;14495:2;14484:9;14480:18;14472:26;;14508:71;14576:1;14565:9;14561:17;14552:6;14508:71;:::i;:::-;14589:72;14657:2;14646:9;14642:18;14633:6;14589:72;:::i;:::-;14336:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1547800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "352",
								"DELEGATION_TYPEHASH()": "457",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "405",
								"eip712Domain()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3233",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2321,
									"end": 2613,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "E"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "53706C696E746572736861726473000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "E"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "53706C696E746572736861726473000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "5350530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2406,
									"end": 2448,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "18"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2417,
									"end": 2435,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2417,
									"end": 2435,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2437,
									"end": 2447,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 20
								},
								{
									"begin": 2406,
									"end": 2416,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "19"
								},
								{
									"begin": 2406,
									"end": 2416,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2406,
									"end": 2416,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2406,
									"end": 2448,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2406,
									"end": 2448,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 2406,
									"end": 2448,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2406,
									"end": 2448,
									"modifierDepth": 2,
									"name": "tag",
									"source": 20,
									"value": "18"
								},
								{
									"begin": 2406,
									"end": 2448,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2406,
									"end": 2448,
									"modifierDepth": 2,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2516,
									"end": 2550,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1039,
									"end": 1062,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 20,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2539,
									"end": 2549,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 20
								},
								{
									"begin": 2516,
									"end": 2526,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "19"
								},
								{
									"begin": 2516,
									"end": 2526,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2516,
									"end": 2526,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2516,
									"end": 2550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2516,
									"end": 2550,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 2516,
									"end": 2550,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2516,
									"end": 2550,
									"modifierDepth": 2,
									"name": "tag",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2516,
									"end": 2550,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2516,
									"end": 2550,
									"modifierDepth": 2,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "21"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 14,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 21,
									"value": "49"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 21,
									"value": "50"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 21,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 21,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 21,
									"value": "51"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 21,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 21,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 21,
									"value": "52"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 21
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "87"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 21,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 21,
									"value": "87"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "88"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "89"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "51"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 21,
									"value": "89"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 21,
									"value": "88"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 21,
									"value": "53"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 21
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 21,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 21
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 21,
									"value": "55"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 21,
									"value": "56"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "94"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "55"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 21,
									"value": "94"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "95"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "55"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 21,
									"value": "95"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 21
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 21
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 21,
									"value": "57"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 21,
									"value": "58"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 21,
									"value": "59"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "99"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "101"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "57"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 21,
									"value": "101"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "57"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 21,
									"value": "99"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 21,
									"value": "60"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 21,
									"value": "61"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "104"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "59"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 21,
									"value": "104"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "105"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "106"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "60"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 21,
									"value": "106"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 21,
									"value": "105"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 21,
									"value": "62"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 21,
									"value": "63"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "109"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "62"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 21,
									"value": "109"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "110"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 21,
									"value": "110"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 21,
									"value": "64"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 21,
									"value": "112"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "114"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "115"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 21,
									"value": "115"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "112"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 21,
									"value": "114"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 21,
									"value": "65"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 21
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "117"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "118"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "53"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 21,
									"value": "118"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "119"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "54"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 21,
									"value": "119"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "120"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 21,
									"value": "120"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "121"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "122"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "54"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 21,
									"value": "122"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "64"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 21,
									"value": "121"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 21,
									"value": "117"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 21,
									"value": "66"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 21,
									"value": "67"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "125"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "66"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 21,
									"value": "125"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 21,
									"value": "68"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "127"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "67"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 21,
									"value": "127"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 21
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "129"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "49"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 21,
									"value": "129"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 21
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "130"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "131"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "50"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 21,
									"value": "131"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 21,
									"value": "130"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "132"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "52"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 21,
									"value": "132"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "133"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "65"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 21,
									"value": "133"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 21
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "135"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "136"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 21
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 21,
									"value": "136"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "137"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "68"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 21,
									"value": "137"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "134"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 21,
									"value": "135"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "138"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "53"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 21,
									"value": "138"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 21,
									"value": "139"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "141"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 21
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 21
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "139"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 21,
									"value": "141"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "142"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 21
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "143"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 21
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "67"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 21,
									"value": "143"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 21,
									"value": "142"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 21
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 21
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 21,
									"value": "134"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "tag",
									"source": 21,
									"value": "69"
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5305,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 5289,
									"end": 5305,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5289,
									"end": 5305,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5234,
									"end": 5311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "tag",
									"source": 21,
									"value": "70"
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "146"
								},
								{
									"begin": 5422,
									"end": 5427,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "69"
								},
								{
									"begin": 5404,
									"end": 5428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "tag",
									"source": 21,
									"value": "146"
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5399,
									"end": 5402,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5392,
									"end": 5429,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5317,
									"end": 5435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "tag",
									"source": 21,
									"value": "71"
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "148"
								},
								{
									"begin": 5546,
									"end": 5551,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "57"
								},
								{
									"begin": 5528,
									"end": 5552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "tag",
									"source": 21,
									"value": "148"
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5523,
									"end": 5526,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5516,
									"end": 5553,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5441,
									"end": 5559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "tag",
									"source": 21,
									"value": "72"
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5602,
									"end": 5609,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 5642,
									"end": 5684,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5635,
									"end": 5640,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5631,
									"end": 5685,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 5620,
									"end": 5685,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5620,
									"end": 5685,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5565,
									"end": 5691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "tag",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5734,
									"end": 5741,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "151"
								},
								{
									"begin": 5781,
									"end": 5786,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "72"
								},
								{
									"begin": 5763,
									"end": 5787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "tag",
									"source": 21,
									"value": "151"
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5752,
									"end": 5787,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5752,
									"end": 5787,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5697,
									"end": 5793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "tag",
									"source": 21,
									"value": "74"
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "153"
								},
								{
									"begin": 5904,
									"end": 5909,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 5886,
									"end": 5910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "tag",
									"source": 21,
									"value": "153"
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5881,
									"end": 5884,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 5874,
									"end": 5911,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5799,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "tag",
									"source": 21,
									"value": "32"
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6128,
									"end": 6132,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 6166,
									"end": 6169,
									"name": "PUSH",
									"source": 21,
									"value": "A0"
								},
								{
									"begin": 6155,
									"end": 6164,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 6151,
									"end": 6170,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6143,
									"end": 6170,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 6143,
									"end": 6170,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "155"
								},
								{
									"begin": 6248,
									"end": 6249,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 6237,
									"end": 6246,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 6233,
									"end": 6250,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6224,
									"end": 6230,
									"name": "DUP9",
									"source": 21
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "70"
								},
								{
									"begin": 6180,
									"end": 6251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "tag",
									"source": 21,
									"value": "155"
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "156"
								},
								{
									"begin": 6329,
									"end": 6331,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 6318,
									"end": 6327,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 6314,
									"end": 6332,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6305,
									"end": 6311,
									"name": "DUP8",
									"source": 21
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "70"
								},
								{
									"begin": 6261,
									"end": 6333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "tag",
									"source": 21,
									"value": "156"
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "157"
								},
								{
									"begin": 6411,
									"end": 6413,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 6400,
									"end": 6409,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 6396,
									"end": 6414,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6387,
									"end": 6393,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "70"
								},
								{
									"begin": 6343,
									"end": 6415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "tag",
									"source": 21,
									"value": "157"
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "158"
								},
								{
									"begin": 6493,
									"end": 6495,
									"name": "PUSH",
									"source": 21,
									"value": "60"
								},
								{
									"begin": 6482,
									"end": 6491,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 6478,
									"end": 6496,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6469,
									"end": 6475,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "71"
								},
								{
									"begin": 6425,
									"end": 6497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "tag",
									"source": 21,
									"value": "158"
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "159"
								},
								{
									"begin": 6575,
									"end": 6578,
									"name": "PUSH",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 6564,
									"end": 6573,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 6560,
									"end": 6579,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6551,
									"end": 6557,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "74"
								},
								{
									"begin": 6507,
									"end": 6580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "tag",
									"source": 21,
									"value": "159"
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "SWAP7",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "SWAP6",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 5923,
									"end": 6587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "tag",
									"source": 21,
									"value": "75"
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6677,
									"end": 6688,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 6711,
									"end": 6717,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 6706,
									"end": 6709,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 6699,
									"end": 6718,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 6751,
									"end": 6755,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 6746,
									"end": 6749,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 6742,
									"end": 6756,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6727,
									"end": 6756,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 6727,
									"end": 6756,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6593,
									"end": 6762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6768,
									"end": 7014,
									"name": "tag",
									"source": 21,
									"value": "76"
								},
								{
									"begin": 6768,
									"end": 7014,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6849,
									"end": 6850,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "tag",
									"source": 21,
									"value": "162"
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 6873,
									"end": 6879,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 6870,
									"end": 6871,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 6867,
									"end": 6880,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "164"
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 6958,
									"end": 6959,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 6953,
									"end": 6956,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 6949,
									"end": 6960,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6943,
									"end": 6961,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 6934,
									"end": 6937,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 6930,
									"end": 6941,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6923,
									"end": 6962,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 6895,
									"end": 6897,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 6892,
									"end": 6893,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 6888,
									"end": 6898,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6883,
									"end": 6898,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 6883,
									"end": 6898,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "162"
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "tag",
									"source": 21,
									"value": "164"
								},
								{
									"begin": 6859,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7006,
									"end": 7007,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 6997,
									"end": 7003,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 6992,
									"end": 6995,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 6988,
									"end": 7004,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 6981,
									"end": 7008,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 6830,
									"end": 7014,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6768,
									"end": 7014,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6768,
									"end": 7014,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6768,
									"end": 7014,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 6768,
									"end": 7014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7020,
									"end": 7122,
									"name": "tag",
									"source": 21,
									"value": "77"
								},
								{
									"begin": 7020,
									"end": 7122,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7061,
									"end": 7067,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 7112,
									"end": 7114,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 7108,
									"end": 7115,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 7103,
									"end": 7105,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 7096,
									"end": 7101,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 7092,
									"end": 7106,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 7088,
									"end": 7116,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 7078,
									"end": 7116,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7078,
									"end": 7116,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7020,
									"end": 7122,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7020,
									"end": 7122,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7020,
									"end": 7122,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7020,
									"end": 7122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7128,
									"end": 7505,
									"name": "tag",
									"source": 21,
									"value": "78"
								},
								{
									"begin": 7128,
									"end": 7505,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7216,
									"end": 7219,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 7244,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "167"
								},
								{
									"begin": 7277,
									"end": 7282,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 7244,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "49"
								},
								{
									"begin": 7244,
									"end": 7283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7244,
									"end": 7283,
									"name": "tag",
									"source": 21,
									"value": "167"
								},
								{
									"begin": 7244,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7299,
									"end": 7370,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "168"
								},
								{
									"begin": 7363,
									"end": 7369,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7358,
									"end": 7361,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 7299,
									"end": 7370,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "75"
								},
								{
									"begin": 7299,
									"end": 7370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7299,
									"end": 7370,
									"name": "tag",
									"source": 21,
									"value": "168"
								},
								{
									"begin": 7299,
									"end": 7370,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7292,
									"end": 7370,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 7292,
									"end": 7370,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7379,
									"end": 7444,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "169"
								},
								{
									"begin": 7437,
									"end": 7443,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7432,
									"end": 7435,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 7425,
									"end": 7429,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 7418,
									"end": 7423,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 7414,
									"end": 7430,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 7379,
									"end": 7444,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "76"
								},
								{
									"begin": 7379,
									"end": 7444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7379,
									"end": 7444,
									"name": "tag",
									"source": 21,
									"value": "169"
								},
								{
									"begin": 7379,
									"end": 7444,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7469,
									"end": 7498,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "170"
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7469,
									"end": 7498,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "77"
								},
								{
									"begin": 7469,
									"end": 7498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7469,
									"end": 7498,
									"name": "tag",
									"source": 21,
									"value": "170"
								},
								{
									"begin": 7469,
									"end": 7498,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7464,
									"end": 7467,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 7460,
									"end": 7499,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 7453,
									"end": 7499,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7453,
									"end": 7499,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7220,
									"end": 7505,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7128,
									"end": 7505,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 7128,
									"end": 7505,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7128,
									"end": 7505,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7128,
									"end": 7505,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7128,
									"end": 7505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7511,
									"end": 7824,
									"name": "tag",
									"source": 21,
									"value": "43"
								},
								{
									"begin": 7511,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7624,
									"end": 7628,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 7662,
									"end": 7664,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7660,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 7647,
									"end": 7665,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 7639,
									"end": 7665,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7639,
									"end": 7665,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7711,
									"end": 7720,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7705,
									"end": 7709,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7701,
									"end": 7721,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 7697,
									"end": 7698,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 7686,
									"end": 7695,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 7682,
									"end": 7699,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 7675,
									"end": 7722,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 7739,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "172"
								},
								{
									"begin": 7812,
									"end": 7816,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7803,
									"end": 7809,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 7739,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "78"
								},
								{
									"begin": 7739,
									"end": 7817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7739,
									"end": 7817,
									"name": "tag",
									"source": 21,
									"value": "172"
								},
								{
									"begin": 7739,
									"end": 7817,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7731,
									"end": 7817,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7731,
									"end": 7817,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7511,
									"end": 7824,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 7511,
									"end": 7824,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7511,
									"end": 7824,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7511,
									"end": 7824,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7511,
									"end": 7824,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7830,
									"end": 7928,
									"name": "tag",
									"source": 21,
									"value": "79"
								},
								{
									"begin": 7830,
									"end": 7928,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7881,
									"end": 7887,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 7915,
									"end": 7920,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 7909,
									"end": 7921,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 7899,
									"end": 7921,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7899,
									"end": 7921,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7830,
									"end": 7928,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7830,
									"end": 7928,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7830,
									"end": 7928,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7830,
									"end": 7928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7934,
									"end": 8050,
									"name": "tag",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 7934,
									"end": 8050,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7985,
									"end": 7989,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 8008,
									"end": 8011,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 8000,
									"end": 8011,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 8000,
									"end": 8011,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8038,
									"end": 8042,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 8033,
									"end": 8036,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 8029,
									"end": 8043,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 8021,
									"end": 8043,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 8021,
									"end": 8043,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7934,
									"end": 8050,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7934,
									"end": 8050,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7934,
									"end": 8050,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7934,
									"end": 8050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8056,
									"end": 8210,
									"name": "tag",
									"source": 21,
									"value": "81"
								},
								{
									"begin": 8056,
									"end": 8210,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8099,
									"end": 8110,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 8135,
									"end": 8164,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "176"
								},
								{
									"begin": 8159,
									"end": 8162,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 8153,
									"end": 8163,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 8135,
									"end": 8164,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "69"
								},
								{
									"begin": 8135,
									"end": 8164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8135,
									"end": 8164,
									"name": "tag",
									"source": 21,
									"value": "176"
								},
								{
									"begin": 8135,
									"end": 8164,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8198,
									"end": 8203,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 8174,
									"end": 8203,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 8174,
									"end": 8203,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8111,
									"end": 8210,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8056,
									"end": 8210,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 8056,
									"end": 8210,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 8056,
									"end": 8210,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8056,
									"end": 8210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8216,
									"end": 8810,
									"name": "tag",
									"source": 21,
									"value": "45"
								},
								{
									"begin": 8216,
									"end": 8810,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8300,
									"end": 8305,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8369,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "178"
								},
								{
									"begin": 8363,
									"end": 8368,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 8331,
									"end": 8369,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "79"
								},
								{
									"begin": 8331,
									"end": 8369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8331,
									"end": 8369,
									"name": "tag",
									"source": 21,
									"value": "178"
								},
								{
									"begin": 8331,
									"end": 8369,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8394,
									"end": 8399,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 8421,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "179"
								},
								{
									"begin": 8455,
									"end": 8460,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 8421,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 8421,
									"end": 8461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8421,
									"end": 8461,
									"name": "tag",
									"source": 21,
									"value": "179"
								},
								{
									"begin": 8421,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8409,
									"end": 8461,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 8409,
									"end": 8461,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8480,
									"end": 8515,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "180"
								},
								{
									"begin": 8506,
									"end": 8514,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 8480,
									"end": 8515,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "81"
								},
								{
									"begin": 8480,
									"end": 8515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8480,
									"end": 8515,
									"name": "tag",
									"source": 21,
									"value": "180"
								},
								{
									"begin": 8480,
									"end": 8515,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8471,
									"end": 8515,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 8471,
									"end": 8515,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8539,
									"end": 8541,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 8531,
									"end": 8537,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 8528,
									"end": 8542,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 8525,
									"end": 8803,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 8525,
									"end": 8803,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "181"
								},
								{
									"begin": 8525,
									"end": 8803,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 8610,
									"end": 8779,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "182"
								},
								{
									"begin": 8695,
									"end": 8761,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8665,
									"end": 8671,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 8661,
									"end": 8663,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 8657,
									"end": 8672,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 8654,
									"end": 8655,
									"name": "PUSH",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 8650,
									"end": 8673,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 8610,
									"end": 8779,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "55"
								},
								{
									"begin": 8610,
									"end": 8779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 8610,
									"end": 8779,
									"name": "tag",
									"source": 21,
									"value": "182"
								},
								{
									"begin": 8610,
									"end": 8779,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8587,
									"end": 8592,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 8566,
									"end": 8793,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 8557,
									"end": 8793,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 8557,
									"end": 8793,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8525,
									"end": 8803,
									"name": "tag",
									"source": 21,
									"value": "181"
								},
								{
									"begin": 8525,
									"end": 8803,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 8306,
									"end": 8810,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8306,
									"end": 8810,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8216,
									"end": 8810,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 8216,
									"end": 8810,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 8216,
									"end": 8810,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 8216,
									"end": 8810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "tag",
									"source": 20,
									"value": "21"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "C0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "E0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "100"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "120"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "140"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2269"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2266"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2263"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2261"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2259"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2257"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "2255"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 9774,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b360732b887d6fc10615b4b1043dc17d42ecfb9557669270a5b885b1c72bca7e64736f6c63430008180033",
									".code": [
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "70A08231"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "D5391393"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "DD62ED3E"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "E7A324DC"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "tag",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "70A08231"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "75B238FC"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "79CC6790"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "84B0196E"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "95D89B41"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "248A9CA3"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "248A9CA3"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "2F2FF15D"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "313CE567"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "40C10F19"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "42966C68"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "tag",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "1FFC9A7"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "6FDDE03"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "95EA7B3"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "18160DDD"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "tag",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 782,
											"end": 9774,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "tag",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 8350,
											"end": 8492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "tag",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 8350,
											"end": 8492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "tag",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "tag",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "67"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "68"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 9545,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "tag",
											"source": 20,
											"value": "68"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 9545,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "tag",
											"source": 20,
											"value": "67"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "tag",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 2897,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 2897,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "tag",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "tag",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "82"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "83"
										},
										{
											"begin": 1002,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "tag",
											"source": 20,
											"value": "82"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 1002,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "tag",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 934,
											"end": 996,
											"name": "tag",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 934,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "tag",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 934,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "tag",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "tag",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 8929,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "tag",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 8929,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "tag",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "118"
										},
										{
											"begin": 1068,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "tag",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 1068,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "tag",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8425,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 8425,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "149"
										},
										{
											"begin": 8471,
											"end": 8475,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8477,
											"end": 8484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8455,
											"end": 8470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 8455,
											"end": 8485,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8455,
											"end": 8485,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "149"
										},
										{
											"begin": 8455,
											"end": 8485,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8350,
											"end": 8492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "tag",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9666,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 9645,
											"end": 9666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9645,
											"end": 9666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9645,
											"end": 9652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9645,
											"end": 9666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9645,
											"end": 9666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9645,
											"end": 9666,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 9637,
											"end": 9722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "157"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "156"
										},
										{
											"begin": 9637,
											"end": 9722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9732,
											"end": 9765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 9751,
											"end": 9755,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9757,
											"end": 9764,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9732,
											"end": 9750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 9732,
											"end": 9765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9732,
											"end": 9765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 9732,
											"end": 9765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9545,
											"end": 9772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 972,
											"end": 996,
											"name": "PUSH",
											"source": 20,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 2997,
											"end": 2999,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3001,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2991,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 2991,
											"end": 3008,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2991,
											"end": 3008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 2991,
											"end": 3008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2398,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2398,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2398,
											"end": 2418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "tag",
											"source": 20,
											"value": "83"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "PUSH",
											"source": 20,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1002,
											"end": 1062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 14,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 996,
											"name": "tag",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 972,
											"end": 996,
											"name": "PUSH",
											"source": 20,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 934,
											"end": 996,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 934,
											"end": 996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "tag",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9005,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9005,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 9005,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9005,
											"end": 9023,
											"name": "tag",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 9005,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "203"
										},
										{
											"begin": 9052,
											"end": 9056,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9058,
											"end": 9065,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9035,
											"end": 9051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 9035,
											"end": 9066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9035,
											"end": 9066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "203"
										},
										{
											"begin": 9035,
											"end": 9066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8929,
											"end": 9073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "tag",
											"source": 20,
											"value": "118"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1114,
											"end": 1185,
											"name": "PUSH",
											"source": 20,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1068,
											"end": 1185,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1068,
											"end": 1185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2266"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2269"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 21,
											"value": "316"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "360"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 21,
											"value": "360"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "316"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "366"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 21,
											"value": "366"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 21,
											"value": "318"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 21,
											"value": "319"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "369"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "318"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 21,
											"value": "369"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "319"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 21,
											"value": "323"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "382"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 21,
											"value": "382"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "383"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "323"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 21,
											"value": "383"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "388"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 21,
											"value": "388"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "390"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 21,
											"value": "390"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "391"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 21,
											"value": "391"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 21,
											"value": "330"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "397"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 21,
											"value": "397"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "399"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "330"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 21,
											"value": "399"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "401"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "402"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 21,
											"value": "402"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 21,
											"value": "401"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "403"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 21,
											"value": "403"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "404"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 21,
											"value": "404"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "408"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 21,
											"value": "408"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "412"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 21,
											"value": "412"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "413"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 21,
											"value": "413"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 21,
											"value": "333"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "417"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "333"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 21,
											"value": "417"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "418"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 21,
											"value": "418"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "420"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 21,
											"value": "420"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "422"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "423"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 21,
											"value": "423"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 21,
											"value": "422"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "424"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 21,
											"value": "424"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "426"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "333"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 21,
											"value": "426"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "428"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 21,
											"value": "428"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "430"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 21,
											"value": "430"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "432"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 21,
											"value": "432"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "433"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 21,
											"value": "433"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 21,
											"value": "337"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 21,
											"value": "338"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "337"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "338"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "tag",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7527,
											"end": 7533,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7578,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7555,
											"end": 7562,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7551,
											"end": 7574,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7547,
											"end": 7579,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "445"
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 7582,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "tag",
											"source": 21,
											"value": "445"
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "tag",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7702,
											"end": 7703,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7748,
											"end": 7770,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 7727,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "tag",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7717,
											"end": 7780,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7717,
											"end": 7780,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7673,
											"end": 7790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7468,
											"end": 7797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7803,
											"end": 7952,
											"name": "tag",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 7803,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7839,
											"end": 7846,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7945,
											"name": "PUSH",
											"source": 21,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7872,
											"end": 7877,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7868,
											"end": 7946,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7857,
											"end": 7946,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7857,
											"end": 7946,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7803,
											"end": 7952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7803,
											"end": 7952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7803,
											"end": 7952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7803,
											"end": 7952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7958,
											"end": 8073,
											"name": "tag",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 7958,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8043,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "449"
										},
										{
											"begin": 8060,
											"end": 8065,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8043,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 8043,
											"end": 8066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8043,
											"end": 8066,
											"name": "tag",
											"source": 21,
											"value": "449"
										},
										{
											"begin": 8043,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8038,
											"end": 8041,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8031,
											"end": 8067,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7958,
											"end": 8073,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7958,
											"end": 8073,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7958,
											"end": 8073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8079,
											"end": 8197,
											"name": "tag",
											"source": 21,
											"value": "341"
										},
										{
											"begin": 8079,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8166,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "451"
										},
										{
											"begin": 8184,
											"end": 8189,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8166,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 8166,
											"end": 8190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8166,
											"end": 8190,
											"name": "tag",
											"source": 21,
											"value": "451"
										},
										{
											"begin": 8166,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8154,
											"end": 8191,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8079,
											"end": 8197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8079,
											"end": 8197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8079,
											"end": 8197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8203,
											"end": 8317,
											"name": "tag",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 8203,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8270,
											"end": 8276,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8309,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8288,
											"end": 8310,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8288,
											"end": 8310,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8203,
											"end": 8317,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8203,
											"end": 8317,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8203,
											"end": 8317,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8203,
											"end": 8317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8323,
											"end": 8507,
											"name": "tag",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 8323,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8422,
											"end": 8433,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8462,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8451,
											"end": 8454,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8496,
											"end": 8500,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8491,
											"end": 8494,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8487,
											"end": 8501,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8323,
											"end": 8507,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8323,
											"end": 8507,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8323,
											"end": 8507,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8323,
											"end": 8507,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8323,
											"end": 8507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8513,
											"end": 8645,
											"name": "tag",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 8513,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8606,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8595,
											"end": 8606,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8595,
											"end": 8606,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8633,
											"end": 8637,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8628,
											"end": 8631,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8624,
											"end": 8638,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8513,
											"end": 8645,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8513,
											"end": 8645,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8513,
											"end": 8645,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8513,
											"end": 8645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8651,
											"end": 8759,
											"name": "tag",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 8651,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8728,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "456"
										},
										{
											"begin": 8746,
											"end": 8751,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8728,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 8728,
											"end": 8752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8728,
											"end": 8752,
											"name": "tag",
											"source": 21,
											"value": "456"
										},
										{
											"begin": 8728,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8723,
											"end": 8726,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8651,
											"end": 8759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8651,
											"end": 8759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8651,
											"end": 8759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8765,
											"end": 8944,
											"name": "tag",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 8765,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8834,
											"end": 8844,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8855,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 8897,
											"end": 8900,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8889,
											"end": 8895,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8855,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 8855,
											"end": 8901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8855,
											"end": 8901,
											"name": "tag",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 8855,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8933,
											"end": 8937,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8928,
											"end": 8931,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8924,
											"end": 8938,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8910,
											"end": 8938,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8910,
											"end": 8938,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8765,
											"end": 8944,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8765,
											"end": 8944,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8765,
											"end": 8944,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8765,
											"end": 8944,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8765,
											"end": 8944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 9063,
											"name": "tag",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 8950,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9020,
											"end": 9024,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9052,
											"end": 9056,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9047,
											"end": 9050,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9043,
											"end": 9057,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9035,
											"end": 9057,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9035,
											"end": 9057,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 9063,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 9063,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 9063,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 9063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9831,
											"name": "tag",
											"source": 21,
											"value": "348"
										},
										{
											"begin": 9099,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9218,
											"end": 9221,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "461"
										},
										{
											"begin": 9295,
											"end": 9300,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9247,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 9247,
											"end": 9301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9247,
											"end": 9301,
											"name": "tag",
											"source": 21,
											"value": "461"
										},
										{
											"begin": 9247,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9317,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 9396,
											"end": 9402,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9391,
											"end": 9394,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9317,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 9317,
											"end": 9403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9317,
											"end": 9403,
											"name": "tag",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 9317,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9310,
											"end": 9403,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 9310,
											"end": 9403,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 9477,
											"end": 9482,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 9427,
											"end": 9483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "tag",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9506,
											"end": 9513,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9537,
											"end": 9538,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "tag",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9547,
											"end": 9553,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9544,
											"end": 9545,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9541,
											"end": 9554,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9623,
											"end": 9629,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9617,
											"end": 9630,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 9650,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 9709,
											"end": 9712,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9694,
											"end": 9707,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9650,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 9650,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9650,
											"end": 9713,
											"name": "tag",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 9650,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9643,
											"end": 9713,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 9643,
											"end": 9713,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9736,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 9789,
											"end": 9795,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9736,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 9736,
											"end": 9796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9736,
											"end": 9796,
											"name": "tag",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 9736,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9726,
											"end": 9796,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9726,
											"end": 9796,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9582,
											"end": 9806,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9569,
											"end": 9570,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9557,
											"end": 9571,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9557,
											"end": 9571,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "tag",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 9522,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9526,
											"end": 9540,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9822,
											"end": 9825,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9815,
											"end": 9825,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 9815,
											"end": 9825,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9223,
											"end": 9831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9223,
											"end": 9831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9223,
											"end": 9831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9831,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9831,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10224,
											"end": 10227,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 10213,
											"end": 10222,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10209,
											"end": 10228,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10201,
											"end": 10228,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10201,
											"end": 10228,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10238,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10302,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 10238,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 10238,
											"end": 10307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10238,
											"end": 10307,
											"name": "tag",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 10238,
											"end": 10307,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10354,
											"end": 10363,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10344,
											"end": 10364,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10339,
											"end": 10341,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10317,
											"end": 10365,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10382,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "471"
										},
										{
											"begin": 10455,
											"end": 10459,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10446,
											"end": 10452,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 10382,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 10382,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10382,
											"end": 10460,
											"name": "tag",
											"source": 21,
											"value": "471"
										},
										{
											"begin": 10382,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10374,
											"end": 10460,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10374,
											"end": 10460,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10507,
											"end": 10516,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10501,
											"end": 10505,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10492,
											"end": 10494,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10490,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10470,
											"end": 10518,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10535,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 10608,
											"end": 10612,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10599,
											"end": 10605,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 10535,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 10535,
											"end": 10613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10535,
											"end": 10613,
											"name": "tag",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 10535,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10527,
											"end": 10613,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10527,
											"end": 10613,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10623,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 10691,
											"end": 10693,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 10680,
											"end": 10689,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10667,
											"end": 10673,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 10623,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 10623,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10623,
											"end": 10695,
											"name": "tag",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 10623,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10705,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 10773,
											"end": 10776,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 10762,
											"end": 10771,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10758,
											"end": 10777,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10705,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "341"
										},
										{
											"begin": 10705,
											"end": 10778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10705,
											"end": 10778,
											"name": "tag",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 10705,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10788,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "475"
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 10845,
											"end": 10854,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10841,
											"end": 10860,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10832,
											"end": 10838,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10788,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 10788,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10788,
											"end": 10861,
											"name": "tag",
											"source": 21,
											"value": "475"
										},
										{
											"begin": 10788,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10909,
											"end": 10918,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10903,
											"end": 10907,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10899,
											"end": 10919,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10893,
											"end": 10896,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 10882,
											"end": 10891,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10878,
											"end": 10897,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10871,
											"end": 10920,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10937,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "476"
										},
										{
											"begin": 11040,
											"end": 11044,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10937,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "348"
										},
										{
											"begin": 10937,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10937,
											"end": 11045,
											"name": "tag",
											"source": 21,
											"value": "476"
										},
										{
											"begin": 10937,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10929,
											"end": 11045,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10929,
											"end": 11045,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9837,
											"end": 11052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "tag",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11126,
											"end": 11132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11140,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11183,
											"end": 11185,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 11171,
											"end": 11180,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11162,
											"end": 11169,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11158,
											"end": 11181,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 11154,
											"end": 11186,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 11151,
											"end": 11270,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11151,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 11151,
											"end": 11270,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 11189,
											"end": 11268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "tag",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 11189,
											"end": 11268,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11151,
											"end": 11270,
											"name": "tag",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 11151,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11309,
											"end": 11310,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11387,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 11379,
											"end": 11386,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11370,
											"end": 11376,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11359,
											"end": 11368,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11377,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11334,
											"end": 11387,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 11334,
											"end": 11387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11334,
											"end": 11387,
											"name": "tag",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 11334,
											"end": 11387,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11324,
											"end": 11387,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11324,
											"end": 11387,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11280,
											"end": 11397,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11462,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "481"
										},
										{
											"begin": 11507,
											"end": 11514,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11498,
											"end": 11504,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11487,
											"end": 11496,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11483,
											"end": 11505,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11462,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 11462,
											"end": 11515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11462,
											"end": 11515,
											"name": "tag",
											"source": 21,
											"value": "481"
										},
										{
											"begin": 11462,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11452,
											"end": 11515,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11452,
											"end": 11515,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11407,
											"end": 11525,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11058,
											"end": 11532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11538,
											"end": 11718,
											"name": "tag",
											"source": 21,
											"value": "349"
										},
										{
											"begin": 11538,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11586,
											"end": 11663,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11664,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11683,
											"end": 11687,
											"name": "PUSH",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 11680,
											"end": 11681,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 11673,
											"end": 11688,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 11704,
											"end": 11705,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11697,
											"end": 11712,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 11724,
											"end": 12044,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 11724,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11768,
											"end": 11774,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 11799,
											"end": 11803,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11795,
											"end": 11807,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 11785,
											"end": 11807,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11785,
											"end": 11807,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11852,
											"end": 11853,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 11846,
											"end": 11850,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11842,
											"end": 11854,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11863,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 11863,
											"end": 11944,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11929,
											"end": 11933,
											"name": "PUSH",
											"source": 21,
											"value": "7F"
										},
										{
											"begin": 11921,
											"end": 11927,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11917,
											"end": 11934,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11907,
											"end": 11934,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11907,
											"end": 11934,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11863,
											"end": 11944,
											"name": "tag",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 11863,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11991,
											"end": 11993,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11980,
											"end": 11994,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11957,
											"end": 11995,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 11954,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 11954,
											"end": 12038,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "349"
										},
										{
											"begin": 12010,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "tag",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11954,
											"end": 12038,
											"name": "tag",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 11954,
											"end": 12038,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11775,
											"end": 12044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11724,
											"end": 12044,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11724,
											"end": 12044,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11724,
											"end": 12044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11724,
											"end": 12044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12050,
											"end": 12288,
											"name": "tag",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 12050,
											"end": 12288,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12190,
											"end": 12224,
											"name": "PUSH",
											"source": 21,
											"value": "5350533A3A72656E6F756E6365526F6C653A2063616E206F6E6C792072656E6F"
										},
										{
											"begin": 12186,
											"end": 12187,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12184,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12174,
											"end": 12188,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12167,
											"end": 12225,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12259,
											"end": 12280,
											"name": "PUSH",
											"source": 21,
											"value": "756E636520726F6C657320666F722073656C6600000000000000000000000000"
										},
										{
											"begin": 12254,
											"end": 12256,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12246,
											"end": 12252,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12242,
											"end": 12257,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12235,
											"end": 12281,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12050,
											"end": 12288,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12050,
											"end": 12288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12294,
											"end": 12660,
											"name": "tag",
											"source": 21,
											"value": "351"
										},
										{
											"begin": 12294,
											"end": 12660,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12436,
											"end": 12439,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "489"
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 12516,
											"end": 12519,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12457,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 12457,
											"end": 12524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12457,
											"end": 12524,
											"name": "tag",
											"source": 21,
											"value": "489"
										},
										{
											"begin": 12457,
											"end": 12524,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12450,
											"end": 12524,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12450,
											"end": 12524,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12533,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 12622,
											"end": 12625,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12533,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 12533,
											"end": 12626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12533,
											"end": 12626,
											"name": "tag",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 12533,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12651,
											"end": 12653,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12649,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12642,
											"end": 12654,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12635,
											"end": 12654,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12635,
											"end": 12654,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12294,
											"end": 12660,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12294,
											"end": 12660,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12294,
											"end": 12660,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12294,
											"end": 12660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12666,
											"end": 13085,
											"name": "tag",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 12666,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12832,
											"end": 12836,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12870,
											"end": 12872,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12868,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12847,
											"end": 12873,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12847,
											"end": 12873,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12919,
											"end": 12928,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12913,
											"end": 12917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12909,
											"end": 12929,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 12905,
											"end": 12906,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12894,
											"end": 12903,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12890,
											"end": 12907,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 12930,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12947,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "492"
										},
										{
											"begin": 13073,
											"end": 13077,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12947,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "351"
										},
										{
											"begin": 12947,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12947,
											"end": 13078,
											"name": "tag",
											"source": 21,
											"value": "492"
										},
										{
											"begin": 12947,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12939,
											"end": 13078,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12939,
											"end": 13078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12666,
											"end": 13085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12666,
											"end": 13085,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12666,
											"end": 13085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12666,
											"end": 13085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13091,
											"end": 13271,
											"name": "tag",
											"source": 21,
											"value": "187"
										},
										{
											"begin": 13091,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13139,
											"end": 13216,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13136,
											"end": 13137,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13129,
											"end": 13217,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13236,
											"end": 13240,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 13233,
											"end": 13234,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 13226,
											"end": 13241,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13260,
											"end": 13264,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 13257,
											"end": 13258,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13250,
											"end": 13265,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "tag",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13426,
											"end": 13430,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13464,
											"end": 13466,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 13453,
											"end": 13462,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13449,
											"end": 13467,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13441,
											"end": 13467,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13441,
											"end": 13467,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13477,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "495"
										},
										{
											"begin": 13545,
											"end": 13546,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13534,
											"end": 13543,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13530,
											"end": 13547,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13521,
											"end": 13527,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13477,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "341"
										},
										{
											"begin": 13477,
											"end": 13548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13477,
											"end": 13548,
											"name": "tag",
											"source": 21,
											"value": "495"
										},
										{
											"begin": 13477,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13558,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "496"
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13615,
											"end": 13624,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13602,
											"end": 13608,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13558,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 13558,
											"end": 13630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13558,
											"end": 13630,
											"name": "tag",
											"source": 21,
											"value": "496"
										},
										{
											"begin": 13558,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13640,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "497"
										},
										{
											"begin": 13708,
											"end": 13710,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 13697,
											"end": 13706,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13684,
											"end": 13690,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13640,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 13640,
											"end": 13712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13640,
											"end": 13712,
											"name": "tag",
											"source": 21,
											"value": "497"
										},
										{
											"begin": 13640,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13277,
											"end": 13719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13725,
											"end": 13947,
											"name": "tag",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 13725,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13818,
											"end": 13822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13856,
											"end": 13858,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13845,
											"end": 13854,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13833,
											"end": 13859,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13833,
											"end": 13859,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13869,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 13937,
											"end": 13938,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13926,
											"end": 13935,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13922,
											"end": 13939,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13913,
											"end": 13919,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13869,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "341"
										},
										{
											"begin": 13869,
											"end": 13940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13869,
											"end": 13940,
											"name": "tag",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 13869,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13725,
											"end": 13947,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13725,
											"end": 13947,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13725,
											"end": 13947,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13725,
											"end": 13947,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13725,
											"end": 13947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13953,
											"end": 14133,
											"name": "tag",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 13953,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14001,
											"end": 14078,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13998,
											"end": 13999,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13991,
											"end": 14079,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 14095,
											"end": 14096,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 14088,
											"end": 14103,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14119,
											"end": 14120,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14127,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14139,
											"end": 14330,
											"name": "tag",
											"source": 21,
											"value": "272"
										},
										{
											"begin": 14139,
											"end": 14330,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14179,
											"end": 14182,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14198,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "502"
										},
										{
											"begin": 14216,
											"end": 14217,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14198,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 14198,
											"end": 14218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14198,
											"end": 14218,
											"name": "tag",
											"source": 21,
											"value": "502"
										},
										{
											"begin": 14198,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14193,
											"end": 14218,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14193,
											"end": 14218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14232,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 14250,
											"end": 14251,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14232,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 14232,
											"end": 14252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14232,
											"end": 14252,
											"name": "tag",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 14232,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14227,
											"end": 14252,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14227,
											"end": 14252,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14275,
											"end": 14276,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14272,
											"end": 14273,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14268,
											"end": 14277,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14261,
											"end": 14277,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14261,
											"end": 14277,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14296,
											"end": 14299,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14293,
											"end": 14294,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14290,
											"end": 14300,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14287,
											"end": 14323,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14287,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "504"
										},
										{
											"begin": 14287,
											"end": 14323,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "505"
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 14303,
											"end": 14321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "tag",
											"source": 21,
											"value": "505"
										},
										{
											"begin": 14303,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14287,
											"end": 14323,
											"name": "tag",
											"source": 21,
											"value": "504"
										},
										{
											"begin": 14287,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14139,
											"end": 14330,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14139,
											"end": 14330,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14139,
											"end": 14330,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14139,
											"end": 14330,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14139,
											"end": 14330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "tag",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14495,
											"end": 14497,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14493,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14480,
											"end": 14498,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14472,
											"end": 14498,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14472,
											"end": 14498,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14508,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 14576,
											"end": 14577,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14565,
											"end": 14574,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14561,
											"end": 14578,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14552,
											"end": 14558,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 14508,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "341"
										},
										{
											"begin": 14508,
											"end": 14579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14508,
											"end": 14579,
											"name": "tag",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 14508,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14589,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "508"
										},
										{
											"begin": 14657,
											"end": 14659,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14646,
											"end": 14655,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14642,
											"end": 14660,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14633,
											"end": 14639,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14589,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 14589,
											"end": 14661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14589,
											"end": 14661,
											"name": "tag",
											"source": 21,
											"value": "508"
										},
										{
											"begin": 14589,
											"end": 14661,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14336,
											"end": 14668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SPSv2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends ERC20 Token Standard basic implementation with burnability, access control, and anti-reentrancy features. Includes functionality for token minting, delegation of voting power, and signature-based delegation. Utilizes EIP712 for typed structured data hashing and signing.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes EIP-712 domain separator. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overrides the {AccessControl.grantRole} function to include non-reentrancy guard.\",\"params\":{\"account\":\"The address being granted the role.\",\"role\":\"The bytes32 role identifier being granted.\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Mints `amount` tokens to address `to`, requires the caller to have MINTER_ROLE. Emits a {Transfer} event.\",\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address of the beneficiary that will receive the minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overrides the {AccessControl.renounceRole} function to include non-reentrancy guard.\",\"params\":{\"account\":\"The address that is renouncing the role. Must be the transaction sender.\",\"role\":\"The bytes32 role identifier being renounced.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Overrides the {AccessControl.revokeRole} function to include non-reentrancy guard.\",\"params\":{\"account\":\"The address from which the role is being revoked.\",\"role\":\"The bytes32 role identifier being revoked.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"Splintershards (SPS) Token Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"grantRole(bytes32,address)\":{\"notice\":\"Grants a specific role to an account. Only accounts with the admin role for the given role can grant it to others. Emits a {RoleGranted} event.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Renounces a specific role from the calling account. Accounts can renounce roles granted to them, leaving them without that role. Emits a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes a specific role from an account. Only accounts with the admin role for the given role can revoke it from others. Emits a {RoleRevoked} event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SPSv2.sol\":\"SPS\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/SPSv2.sol\":{\"keccak256\":\"0xca9fd3303daf472cb0af5317aeb4aa86e114b03f083cfcd35c30680f4363da70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b45ce34ecc3d0401eb286a869a569f37addc2cb829213c96eafd9b7210661379\",\"dweb:/ipfs/QmWUohkRpeQaG8KfPdN1qHi4rQWKY7g7cPkgHtDR4HLWu1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 563,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 569,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 571,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 573,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 575,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1246,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2271,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 2273,
								"contract": "contracts/SPSv2.sol:SPS",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/SPSv2.sol:SPS",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/SPSv2.sol:SPS",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"grantRole(bytes32,address)": {
								"notice": "Grants a specific role to an account. Only accounts with the admin role for the given role can grant it to others. Emits a {RoleGranted} event."
							},
							"renounceRole(bytes32,address)": {
								"notice": "Renounces a specific role from the calling account. Accounts can renounce roles granted to them, leaving them without that role. Emits a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"notice": "Revokes a specific role from an account. Only accounts with the admin role for the given role can revoke it from others. Emits a {RoleRevoked} event."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1235
						],
						"ERC165": [
							2559
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1236,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1235,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 2560,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2559,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1235,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2559,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								2559,
								2571,
								378,
								1235
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2558
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2558,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "IERC5267",
							"nameLocation": "143:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:2",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 383,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:2"
									},
									"src": "247:28:2"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:2",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "510:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 386,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "537:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "569:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "604:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "633:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "672:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 396,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "698:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 398,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 399,
													"nodeType": "ArrayTypeName",
													"src": "698:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:2"
									},
									"scope": 403,
									"src": "426:310:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 404,
							"src": "133:605:2",
							"usedErrors": [],
							"usedEvents": [
								383
							]
						}
					],
					"src": "107:632:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							540
						],
						"IERC20Errors": [
							445
						],
						"IERC721Errors": [
							493
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 415,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 420,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 425,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 434,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 439,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 444,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 541,
							"src": "278:1764:3",
							"usedErrors": [
								415,
								420,
								425,
								434,
								439,
								444
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 446,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 493,
							"linearizedBaseContracts": [
								493
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 451,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 456,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 465,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 470,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 475,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 482,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 487,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 492,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 541,
							"src": "2186:2092:3",
							"usedErrors": [
								451,
								456,
								465,
								470,
								475,
								482,
								487,
								492
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 494,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 540,
							"linearizedBaseContracts": [
								540
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 505,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 510,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 515,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 522,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 527,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 532,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 539,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 541,
							"src": "4424:2107:3",
							"usedErrors": [
								505,
								510,
								515,
								522,
								527,
								532,
								539
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1235
						],
						"ERC20": [
							1055
						],
						"IERC20": [
							1133
						],
						"IERC20Errors": [
							445
						],
						"IERC20Metadata": [
							1205
						]
					},
					"id": 1056,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 542,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 1134,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 543,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1133,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 1206,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 545,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1205,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 1236,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 547,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1235,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 550,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 541,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 549,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 552,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1235,
										"src": "1428:7:4"
									},
									"id": 553,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 554,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1133,
										"src": "1437:6:4"
									},
									"id": 555,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 556,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1205,
										"src": "1445:14:4"
									},
									"id": 557,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 558,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "1461:12:4"
									},
									"id": 559,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 551,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1055,
							"linearizedBaseContracts": [
								1055,
								445,
								1205,
								1133,
								1235
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 563,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 562,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 560,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 561,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 569,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 568,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 564,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 567,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 565,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 566,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 571,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 573,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 572,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 575,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 574,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 583,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 584,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 587,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 588,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 592,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1055,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1192
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 598,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 573,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 597,
												"id": 599,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1055,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1198
									],
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 607,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 575,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 606,
												"id": 608,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1055,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1204
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 615,
												"id": 617,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 613,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1055,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1082
									],
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 625,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 571,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 624,
												"id": 626,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1055,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1090
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 636,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 638,
													"indexExpression": {
														"id": 637,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 635,
												"id": 639,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1055,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1100
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 651,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 653,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 650,
												"id": 663,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1055,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 675,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 677,
														"indexExpression": {
															"id": 676,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 679,
													"indexExpression": {
														"id": 678,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 680,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1055,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1120
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 692,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															946,
															1006
														],
														"referencedDeclaration": 946,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 691,
												"id": 704,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1055,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1132
									],
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 718,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 720,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 717,
												"id": 736,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1055,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 755,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 754,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 760,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 763,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 764,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 770,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 769,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 775,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 779,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1055,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 796,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																807
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 807,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 811,
															"initialValue": {
																"baseExpression": {
																	"id": 808,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"id": 809,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 812,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 816,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 817,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 818,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 815,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 831,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 823,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 825,
																			"indexExpression": {
																				"id": 824,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 826,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 827,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 801,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 834,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 835,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 852,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 846,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 848,
																			"indexExpression": {
																				"id": 847,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 790,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 844,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 840,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 841,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 843,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 856,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 855,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1055,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 871,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 883,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 877,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 876,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 882,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 886,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1055,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 903,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 904,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 910,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 909,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 915,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 919,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 920,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 918,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1055,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 938,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															946,
															1006
														],
														"referencedDeclaration": 1006,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1055,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 958,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 959,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 965,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 964,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 973,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 974,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 987,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 980,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 979,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 985,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 988,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 991,
															"indexExpression": {
																"id": 989,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 992,
														"indexExpression": {
															"id": 990,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 993,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 996,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 955,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 999,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1000,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 997,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1055,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"arguments": [
														{
															"id": 1019,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1018,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1025,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1024,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1030,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1031,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1040,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1039,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1034,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1011,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1035,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1036,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1013,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1033,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1038,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1050,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1042,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1043,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1011,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1044,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1045,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1013,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1041,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				946,
																				1006
																			],
																			"referencedDeclaration": 1006,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1055,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1056,
							"src": "1401:9741:4",
							"usedErrors": [
								415,
								420,
								425,
								434,
								439,
								444
							],
							"usedEvents": [
								1067,
								1076
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1133
						]
					},
					"id": 1134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1057,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1058,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1133,
							"linearizedBaseContracts": [
								1133
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1067,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1076,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1133,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1133,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1133,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1133,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1133,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1133,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1134,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1067,
								1076
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1235
						],
						"ERC20": [
							1055
						],
						"ERC20Burnable": [
							1179
						]
					},
					"id": 1180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 1056,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1136,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 1236,
							"src": "186:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1138,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1235,
										"src": "194:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1141,
										"name": "Context",
										"nameLocations": [
											"483:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1235,
										"src": "483:7:6"
									},
									"id": 1142,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:6"
								},
								{
									"baseName": {
										"id": 1143,
										"name": "ERC20",
										"nameLocations": [
											"492:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "492:5:6"
									},
									"id": 1144,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:6"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1140,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:6",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1179,
							"linearizedBaseContracts": [
								1179,
								1055,
								445,
								1205,
								1133,
								1235
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "662:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1151,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "678:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "672:26:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:6",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "632:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:6"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:6"
									},
									"scope": 1179,
									"src": "618:87:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "1086:93:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "1112:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1167,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "1121:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "1135:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1096:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1173,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "1157:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "1166:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1172,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "1151:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:6"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1056:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:6"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:6"
									},
									"scope": 1179,
									"src": "1021:158:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1180,
							"src": "448:733:6",
							"usedErrors": [
								415,
								420,
								425,
								434,
								439,
								444
							],
							"usedEvents": [
								1067,
								1076
							]
						}
					],
					"src": "124:1058:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1133
						],
						"IERC20Metadata": [
							1205
						]
					},
					"id": 1206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1206,
							"sourceUnit": 1134,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1182,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1133,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1185,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1133,
										"src": "305:6:7"
									},
									"id": 1186,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1184,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1205,
							"linearizedBaseContracts": [
								1205,
								1133
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1205,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1205,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1201,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1205,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1206,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1067,
								1076
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1235
						]
					},
					"id": 1236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1207,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1208,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1235,
							"linearizedBaseContracts": [
								1235
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1213,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1215,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1235,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1222,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1224,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1235,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1230,
												"id": 1232,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1235,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1236,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1304
						]
					},
					"id": 1305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1237,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1238,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:9",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1304,
							"linearizedBaseContracts": [
								1304
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1241,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1304,
									"src": "1674:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1239,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1240,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1244,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1304,
									"src": "1720:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1242,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1243,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1246,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1304,
									"src": "1763:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:9",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1249,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:9"
									},
									"src": "1850:37:9"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "1907:38:9",
										"statements": [
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "1917:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "1927:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:9"
											}
										]
									},
									"id": 1257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:9"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:9"
									},
									"scope": 1304,
									"src": "1893:52:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "2346:79:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1260,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "2356:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:9"
											},
											{
												"id": 1263,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1264,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "2398:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:9"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:9",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1268,
									"name": "nonReentrant",
									"nameLocation": "2331:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:9"
									},
									"src": "2322:103:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "2470:268:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1271,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "2558:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1272,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "2569:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1278,
												"nodeType": "IfStatement",
												"src": "2554:86:9",
												"trueBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "2578:62:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1274,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "2599:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1276,
															"nodeType": "RevertStatement",
															"src": "2592:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1279,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "2714:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1280,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "2724:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:9"
											}
										]
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:9"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:9"
									},
									"scope": 1304,
									"src": "2431:307:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "2782:170:9",
										"statements": [
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1287,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "2924:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1288,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "2934:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:9"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:9"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:9"
									},
									"scope": 1304,
									"src": "2744:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "3195:42:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "3212:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1299,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "3223:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1301,
												"nodeType": "Return",
												"src": "3205:25:9"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:9",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:9"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "3189:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:9"
									},
									"scope": 1304,
									"src": "3131:106:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1305,
							"src": "886:2353:9",
							"usedErrors": [
								1249
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1310
						],
						"ShortStrings": [
							1521
						],
						"StorageSlot": [
							1631
						]
					},
					"id": 1522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1522,
							"sourceUnit": 1632,
							"src": "132:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1307,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1631,
										"src": "140:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1310,
							"name": "ShortString",
							"nameLocation": "353:11:10",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:10",
							"underlyingType": {
								"id": 1309,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:10",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:10",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1521,
							"linearizedBaseContracts": [
								1521
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1314,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "1345:111:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1312,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1318,
									"name": "StringTooLong",
									"nameLocation": "1469:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "1483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:10"
									},
									"src": "1463:32:10"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1320,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:10"
									},
									"src": "1500:27:10"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "1786:208:10",
										"statements": [
											{
												"assignments": [
													1330
												],
												"declarations": [
													{
														"constant": false,
														"id": 1330,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "1796:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1329,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"initialValue": {
													"arguments": [
														{
															"id": 1333,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "1822:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1331,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1336,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "1840:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1345,
												"nodeType": "IfStatement",
												"src": "1836:72:10",
												"trueBody": {
													"id": 1344,
													"nodeType": "Block",
													"src": "1858:50:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1341,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "1893:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1340,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "1879:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1343,
															"nodeType": "RevertStatement",
															"src": "1872:25:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1354,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1330,
																						"src": "1965:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1352,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1350,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1357,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "1974:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1348,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1346,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1924:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1310_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:10",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1310_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1328,
												"id": 1362,
												"nodeType": "Return",
												"src": "1917:70:10"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:10",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1731:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:10"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1773:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1325,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1310,
														"src": "1773:11:10"
													},
													"referencedDeclaration": 1310,
													"src": "1773:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:10"
									},
									"scope": 1521,
									"src": "1708:286:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "2152:331:10",
										"statements": [
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "2162:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1378,
												"initialValue": {
													"arguments": [
														{
															"id": 1376,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "2187:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																"typeString": "ShortString"
															}
														],
														"id": 1375,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "2176:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1310_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:10"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "2280:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1379,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1381,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:10"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:10",
													"nodeType": "YulBlock",
													"src": "2376:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:10"
																},
																"nativeSrc": "2390:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:10"
															},
															"nativeSrc": "2390:16:10",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:10"
																		},
																		"nativeSrc": "2426:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:10"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:10"
																},
																"nativeSrc": "2419:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:10"
															},
															"nativeSrc": "2419:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:10"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1374,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1380,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1380,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:10",
														"valueSize": 1
													}
												],
												"id": 1386,
												"nodeType": "InlineAssembly",
												"src": "2367:90:10"
											},
											{
												"expression": {
													"id": 1387,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1380,
													"src": "2473:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1388,
												"nodeType": "Return",
												"src": "2466:10:10"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:10",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2096:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1366,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1310,
														"src": "2096:11:10"
													},
													"referencedDeclaration": 1310,
													"src": "2096:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2137:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:10"
									},
									"scope": 1521,
									"src": "2078:405:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "2625:175:10",
										"statements": [
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "2635:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1410,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1405,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "2679:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1403,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "2660:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1310_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:10",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1310_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1401,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1411,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "2706:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1418,
												"nodeType": "IfStatement",
												"src": "2702:69:10",
												"trueBody": {
													"id": 1417,
													"nodeType": "Block",
													"src": "2719:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1414,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "2740:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1416,
															"nodeType": "RevertStatement",
															"src": "2733:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1419,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "2787:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1420,
												"nodeType": "Return",
												"src": "2780:13:10"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:10",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "2575:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1392,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1310,
														"src": "2575:11:10"
													},
													"referencedDeclaration": 1310,
													"src": "2575:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:10"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "2616:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:10"
									},
									"scope": 1521,
									"src": "2555:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "3023:231:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "3043:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1433,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1459,
													"nodeType": "Block",
													"src": "3121:127:10",
													"statements": [
														{
															"expression": {
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1448,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "3161:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1445,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1631,
																				"src": "3135:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:10",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1608,
																			"src": "3135:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1539_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1539_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1538,
																	"src": "3135:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "3176:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1456,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "3219:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1454,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "3202:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1310_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:10",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1310_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1432,
															"id": 1458,
															"nodeType": "Return",
															"src": "3195:42:10"
														}
													]
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "3033:215:10",
												"trueBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "3063:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1441,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "3098:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1440,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "3084:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1310_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1432,
															"id": 1443,
															"nodeType": "Return",
															"src": "3077:27:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:10",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "2949:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "2970:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:10"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "3010:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1429,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1310,
														"src": "3010:11:10"
													},
													"referencedDeclaration": 1310,
													"src": "3010:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:10"
									},
									"scope": 1521,
									"src": "2914:340:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "3494:158:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1475,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "3527:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1473,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "3508:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1310_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1310_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1477,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "3537:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1486,
													"nodeType": "Block",
													"src": "3609:37:10",
													"statements": [
														{
															"expression": {
																"id": 1484,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3630:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1472,
															"id": 1485,
															"nodeType": "Return",
															"src": "3623:12:10"
														}
													]
												},
												"id": 1487,
												"nodeType": "IfStatement",
												"src": "3504:142:10",
												"trueBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "3556:47:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1480,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "3586:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1479,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "3577:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1310_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1472,
															"id": 1482,
															"nodeType": "Return",
															"src": "3570:22:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:10",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3415:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1464,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1310,
														"src": "3415:11:10"
													},
													"referencedDeclaration": 1310,
													"src": "3415:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3434:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:10"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3479:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:10"
									},
									"scope": 1521,
									"src": "3385:267:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "4132:174:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1502,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "4165:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1500,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "4146:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1310_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1310_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1504,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "4175:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "4249:51:10",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1513,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "4276:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1511,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1499,
															"id": 1516,
															"nodeType": "Return",
															"src": "4263:26:10"
														}
													]
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "4142:158:10",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "4194:49:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1507,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "4226:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1506,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "4215:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1310_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1499,
															"id": 1509,
															"nodeType": "Return",
															"src": "4208:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:10",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "4059:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1491,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1310,
														"src": "4059:11:10"
													},
													"referencedDeclaration": 1310,
													"src": "4059:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "4078:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:10"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "4123:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:10"
									},
									"scope": 1521,
									"src": "4027:279:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1522,
							"src": "1255:3053:10",
							"usedErrors": [
								1318,
								1320
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1631
						]
					},
					"id": 1632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1524,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1631,
							"linearizedBaseContracts": [
								1631
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1527,
									"members": [
										{
											"constant": false,
											"id": 1526,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1527,
											"src": "1300:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1525,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:11",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1271:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1530,
									"members": [
										{
											"constant": false,
											"id": 1529,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1530,
											"src": "1355:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1528,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:11",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1326:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1533,
									"members": [
										{
											"constant": false,
											"id": 1532,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1533,
											"src": "1407:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1531,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:11",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1378:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1536,
									"members": [
										{
											"constant": false,
											"id": 1535,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1534,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1539,
									"members": [
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1539,
											"src": "1516:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1537,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:11",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1488:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1542,
									"members": [
										{
											"constant": false,
											"id": 1541,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1542,
											"src": "1568:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1540,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:11",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1541:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "1768:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:11",
													"nodeType": "YulBlock",
													"src": "1830:38:11",
													"statements": [
														{
															"nativeSrc": "1844:14:11",
															"nodeType": "YulAssignment",
															"src": "1844:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:11",
																"nodeType": "YulIdentifier",
																"src": "1854:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1549,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1545,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:11",
														"valueSize": 1
													}
												],
												"id": 1551,
												"nodeType": "InlineAssembly",
												"src": "1821:47:11"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1708:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:11"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1745:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1527_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1547,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "1745:11:11"
													},
													"referencedDeclaration": 1527,
													"src": "1745:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1527_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:11"
									},
									"scope": 1631,
									"src": "1684:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "2056:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:11",
													"nodeType": "YulBlock",
													"src": "2118:38:11",
													"statements": [
														{
															"nativeSrc": "2132:14:11",
															"nodeType": "YulAssignment",
															"src": "2132:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:11",
																"nodeType": "YulIdentifier",
																"src": "2142:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1560,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1556,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:11",
														"valueSize": 1
													}
												],
												"id": 1562,
												"nodeType": "InlineAssembly",
												"src": "2109:47:11"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:11",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "1996:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:11"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2033:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1530_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1559,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1558,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1530,
														"src": "2033:11:11"
													},
													"referencedDeclaration": 1530,
													"src": "2033:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1530_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:11"
									},
									"scope": 1631,
									"src": "1972:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "2344:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:11",
													"nodeType": "YulBlock",
													"src": "2406:38:11",
													"statements": [
														{
															"nativeSrc": "2420:14:11",
															"nodeType": "YulAssignment",
															"src": "2420:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:11",
																"nodeType": "YulIdentifier",
																"src": "2430:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1571,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1567,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:11",
														"valueSize": 1
													}
												],
												"id": 1573,
												"nodeType": "InlineAssembly",
												"src": "2397:47:11"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:11",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2284:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:11"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2321:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1533_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1569,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1533,
														"src": "2321:11:11"
													},
													"referencedDeclaration": 1533,
													"src": "2321:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1533_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:11"
									},
									"scope": 1631,
									"src": "2260:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "2632:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:11",
													"nodeType": "YulBlock",
													"src": "2694:38:11",
													"statements": [
														{
															"nativeSrc": "2708:14:11",
															"nodeType": "YulAssignment",
															"src": "2708:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:11",
																"nodeType": "YulIdentifier",
																"src": "2718:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1582,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1578,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:11",
														"valueSize": 1
													}
												],
												"id": 1584,
												"nodeType": "InlineAssembly",
												"src": "2685:47:11"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:11",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "2572:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1577,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:11"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "2609:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1536_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1580,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1536,
														"src": "2609:11:11"
													},
													"referencedDeclaration": 1536,
													"src": "2609:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1536_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:11"
									},
									"scope": 1631,
									"src": "2548:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "2917:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:11",
													"nodeType": "YulBlock",
													"src": "2979:38:11",
													"statements": [
														{
															"nativeSrc": "2993:14:11",
															"nodeType": "YulAssignment",
															"src": "2993:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:11",
																"nodeType": "YulIdentifier",
																"src": "3003:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1593,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1589,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:11",
														"valueSize": 1
													}
												],
												"id": 1595,
												"nodeType": "InlineAssembly",
												"src": "2970:47:11"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:11",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:11"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2895:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1539_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1539,
														"src": "2895:10:11"
													},
													"referencedDeclaration": 1539,
													"src": "2895:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1539_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:11"
									},
									"scope": 1631,
									"src": "2835:188:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "3225:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:11",
													"nodeType": "YulBlock",
													"src": "3287:44:11",
													"statements": [
														{
															"nativeSrc": "3301:20:11",
															"nodeType": "YulAssignment",
															"src": "3301:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:11",
																"nodeType": "YulIdentifier",
																"src": "3311:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1604,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1600,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1606,
												"nodeType": "InlineAssembly",
												"src": "3278:53:11"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3158:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1599,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:11"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3203:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1539_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1602,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1539,
														"src": "3203:10:11"
													},
													"referencedDeclaration": 1539,
													"src": "3203:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1539_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:11"
									},
									"scope": 1631,
									"src": "3135:202:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "3513:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:11",
													"nodeType": "YulBlock",
													"src": "3575:38:11",
													"statements": [
														{
															"nativeSrc": "3589:14:11",
															"nodeType": "YulAssignment",
															"src": "3589:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:11",
																"nodeType": "YulIdentifier",
																"src": "3599:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:11",
														"valueSize": 1
													}
												],
												"id": 1617,
												"nodeType": "InlineAssembly",
												"src": "3566:47:11"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:11",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3455:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:11"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3492:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1542_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1613,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1542,
														"src": "3492:9:11"
													},
													"referencedDeclaration": 1542,
													"src": "3492:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1542_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:11"
									},
									"scope": 1631,
									"src": "3433:186:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "3816:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:11",
													"nodeType": "YulBlock",
													"src": "3878:44:11",
													"statements": [
														{
															"nativeSrc": "3892:20:11",
															"nodeType": "YulAssignment",
															"src": "3892:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:11",
																"nodeType": "YulIdentifier",
																"src": "3902:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1626,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1628,
												"nodeType": "InlineAssembly",
												"src": "3869:53:11"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3751:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:11"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3795:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1542_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1624,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1542,
														"src": "3795:9:11"
													},
													"referencedDeclaration": 1542,
													"src": "3795:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1542_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:11"
									},
									"scope": 1631,
									"src": "3729:199:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1632,
							"src": "1245:2685:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3625
						],
						"SignedMath": [
							3730
						],
						"Strings": [
							1886
						]
					},
					"id": 1887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1887,
							"sourceUnit": 3626,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1634,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3625,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1887,
							"sourceUnit": 3731,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1636,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3730,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1638,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1886,
							"linearizedBaseContracts": [
								1886
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1641,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1886,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1639,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1640,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1644,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1886,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1642,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1643,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1651,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1697,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1660
														],
														"declarations": [
															{
																"constant": false,
																"id": 1660,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1667,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1663,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1661,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3625,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3625_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3445,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1669
														],
														"declarations": [
															{
																"constant": false,
																"id": 1669,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1668,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1674,
														"initialValue": {
															"arguments": [
																{
																	"id": 1672,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1670,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1676
														],
														"declarations": [
															{
																"constant": false,
																"id": 1676,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1675,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1677,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1669,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1676,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1678,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1693,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1680,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1641,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1676,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1654,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1683,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1692,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1691,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1694,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1695,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1658,
														"id": 1696,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1886,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1710,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1719,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1702,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1717,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3730,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3730_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3729,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1716,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1707,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1723,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1701,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1886,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1743,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1737,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1735,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3625,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3625_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3567,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1733,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1745,
																	1828,
																	1848
																],
																"referencedDeclaration": 1828,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1732,
														"id": 1742,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1886,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1758,
												"initialValue": {
													"id": 1757,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1748,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1759,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1764,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1761,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1770,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1772,
														"indexExpression": {
															"hexValue": "30",
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1776,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1778,
														"indexExpression": {
															"hexValue": "31",
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1810,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1796,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1798,
																	"indexExpression": {
																		"id": 1797,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1799,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1803,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1800,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1805,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1806,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1809,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1790,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1811,
												"initializationExpression": {
													"assignments": [
														1783
													],
													"declarations": [
														{
															"constant": false,
															"id": 1783,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1811,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1782,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1789,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1785,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1793,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1795,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1812,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1821,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1820,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1816,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1817,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1815,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1819,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1824,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1822,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1826,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1886,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1841,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1839,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1837,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1844,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1836,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1745,
															1828,
															1848
														],
														"referencedDeclaration": 1828,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1846,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1886,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1860,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1851,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1858,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1865,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1853,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1863,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1872,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1851,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1870,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1869,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1878,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1876,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1875,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1857,
												"id": 1883,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1886,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1887,
							"src": "251:2847:12",
							"usedErrors": [
								1651
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2234
						]
					},
					"id": 2235,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1889,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:13",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2234,
							"linearizedBaseContracts": [
								2234
							],
							"name": "ECDSA",
							"nameLocation": "352:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1894,
									"members": [
										{
											"id": 1890,
											"name": "NoError",
											"nameLocation": "392:7:13",
											"nodeType": "EnumValue",
											"src": "392:7:13"
										},
										{
											"id": 1891,
											"name": "InvalidSignature",
											"nameLocation": "409:16:13",
											"nodeType": "EnumValue",
											"src": "409:16:13"
										},
										{
											"id": 1892,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:13",
											"nodeType": "EnumValue",
											"src": "435:22:13"
										},
										{
											"id": 1893,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:13",
											"nodeType": "EnumValue",
											"src": "467:17:13"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:13",
									"nodeType": "EnumDefinition",
									"src": "364:126:13"
								},
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:13",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1897,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:13"
									},
									"src": "564:30:13"
								},
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:13",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1902,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "699:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:13"
									},
									"src": "665:50:13"
								},
								{
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:13",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1907,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "840:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1904,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:13"
									},
									"src": "811:40:13"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "2242:653:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1922,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "2256:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1957,
													"nodeType": "Block",
													"src": "2781:108:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1944,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1948,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1894,
																			"src": "2815:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:13",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1892,
																		"src": "2815:35:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1894",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1952,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1912,
																					"src": "2860:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:13",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1950,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1921,
															"id": 1956,
															"nodeType": "Return",
															"src": "2795:83:13"
														}
													]
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "2252:637:13",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "2280:495:13",
													"statements": [
														{
															"assignments": [
																1927
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1927,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1943,
																	"src": "2294:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1926,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1928,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:13"
														},
														{
															"assignments": [
																1930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1930,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1943,
																	"src": "2317:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1929,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1931,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:13"
														},
														{
															"assignments": [
																1933
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1933,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1943,
																	"src": "2340:7:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1932,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1934,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:13"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:13",
																"nodeType": "YulBlock",
																"src": "2548:171:13",
																"statements": [
																	{
																		"nativeSrc": "2566:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:13",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:13"
																					},
																					"nativeSrc": "2577:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:13"
																			},
																			"nativeSrc": "2571:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:13",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:13"
																					},
																					"nativeSrc": "2626:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:13"
																			},
																			"nativeSrc": "2620:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:13",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:13",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:13",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:13"
																							},
																							"nativeSrc": "2683:20:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:13"
																					},
																					"nativeSrc": "2677:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:13"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:13"
																			},
																			"nativeSrc": "2669:36:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:13"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:13"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1927,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1930,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1912,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1912,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1912,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1933,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:13",
																	"valueSize": 1
																}
															],
															"id": 1935,
															"nodeType": "InlineAssembly",
															"src": "2539:180:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1937,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1910,
																		"src": "2750:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1938,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "2756:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1939,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "2759:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1940,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "2762:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1936,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1960,
																		2040,
																		2148
																	],
																	"referencedDeclaration": 2148,
																	"src": "2739:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1921,
															"id": 1942,
															"nodeType": "Return",
															"src": "2732:32:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "2149:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "2163:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:13"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "2210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "2219:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1894",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1916,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1894,
														"src": "2219:12:13"
													},
													"referencedDeclaration": 1894,
													"src": "2219:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1894",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "2233:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:13"
									},
									"scope": 2234,
									"src": "2129:766:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "3789:168:13",
										"statements": [
											{
												"assignments": [
													1971,
													1974,
													1976
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "3800:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1970,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "3819:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1894",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1973,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1972,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1894,
																"src": "3819:12:13"
															},
															"referencedDeclaration": 1894,
															"src": "3819:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "3839:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1975,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1981,
												"initialValue": {
													"arguments": [
														{
															"id": 1978,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "3870:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1979,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "3876:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1977,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1960,
															2040,
															2148
														],
														"referencedDeclaration": 1960,
														"src": "3859:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1983,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "3908:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1984,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "3915:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1982,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "3896:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1894_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:13"
											},
											{
												"expression": {
													"id": 1987,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1971,
													"src": "3941:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1988,
												"nodeType": "Return",
												"src": "3934:16:13"
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3719:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3733:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:13"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "3780:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:13"
									},
									"scope": 2234,
									"src": "3702:255:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "4285:342:13",
										"statements": [
											{
												"id": 2038,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:13",
												"statements": [
													{
														"assignments": [
															2008
														],
														"declarations": [
															{
																"constant": false,
																"id": 2008,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2038,
																"src": "4319:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2007,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2015,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2009,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "4331:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2010,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:13"
													},
													{
														"assignments": [
															2017
														],
														"declarations": [
															{
																"constant": false,
																"id": 2017,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2038,
																"src": "4522:7:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2016,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2030,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2022,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1997,
																							"src": "4547:2:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2020,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:13",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2024,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2026,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2018,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2032,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1993,
																	"src": "4596:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2033,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "4602:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2034,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "4605:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2035,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "4608:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2031,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1960,
																	2040,
																	2148
																],
																"referencedDeclaration": 2148,
																"src": "4585:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2006,
														"id": 2037,
														"nodeType": "Return",
														"src": "4578:32:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4193:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4207:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1994,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4218:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:13"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4253:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4262:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1894",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2001,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1894,
														"src": "4262:12:13"
													},
													"referencedDeclaration": 1894,
													"src": "4262:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1894",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "4276:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:13"
									},
									"scope": 2234,
									"src": "4173:454:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "4840:164:13",
										"statements": [
											{
												"assignments": [
													2053,
													2056,
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2072,
														"src": "4851:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2052,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2072,
														"src": "4870:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1894",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2055,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2054,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1894,
																"src": "4870:12:13"
															},
															"referencedDeclaration": 1894,
															"src": "4870:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2072,
														"src": "4890:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2057,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2064,
												"initialValue": {
													"arguments": [
														{
															"id": 2060,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "4921:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2061,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "4927:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2062,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "4930:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2059,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1960,
															2040,
															2148
														],
														"referencedDeclaration": 2040,
														"src": "4910:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2066,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "4955:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2067,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "4962:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2065,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "4943:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1894_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:13"
											},
											{
												"expression": {
													"id": 2070,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2053,
													"src": "4988:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2051,
												"id": 2071,
												"nodeType": "Return",
												"src": "4981:16:13"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "4771:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2042,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "4785:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "4796:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2046,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:13"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "4831:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:13"
									},
									"scope": 2234,
									"src": "4754:250:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "5298:1372:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2094,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "6194:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2092,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "6182:164:13",
												"trueBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "6267:79:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2098,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2102,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1894,
																			"src": "6301:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:13",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1893,
																		"src": "6301:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1894",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2104,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "6333:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2106,
															"nodeType": "Return",
															"src": "6281:54:13"
														}
													]
												}
											},
											{
												"assignments": [
													2110
												],
												"declarations": [
													{
														"constant": false,
														"id": 2110,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "6440:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2117,
												"initialValue": {
													"arguments": [
														{
															"id": 2112,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "6467:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2113,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "6473:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2114,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "6476:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2115,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "6479:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2111,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2118,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "6495:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2137,
												"nodeType": "IfStatement",
												"src": "6491:113:13",
												"trueBody": {
													"id": 2136,
													"nodeType": "Block",
													"src": "6517:87:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2124,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2128,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1894,
																			"src": "6551:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:13",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1891,
																		"src": "6551:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1894",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2130,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2135,
															"nodeType": "Return",
															"src": "6531:62:13"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2138,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "6622:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2139,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "6630:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:13",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1890,
															"src": "6630:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2141,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2145,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2146,
												"nodeType": "Return",
												"src": "6614:49:13"
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5169:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5191:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2077,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5208:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5227:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2081,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:13"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5266:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5275:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1894",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2086,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1894,
														"src": "5275:12:13"
													},
													"referencedDeclaration": 1894,
													"src": "5275:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1894",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "5289:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2089,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:13"
									},
									"scope": 2234,
									"src": "5140:1530:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "6897:166:13",
										"statements": [
											{
												"assignments": [
													2163,
													2166,
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "6908:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2162,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2166,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "6927:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1894",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2165,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2164,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1894,
																"src": "6927:12:13"
															},
															"referencedDeclaration": 1894,
															"src": "6927:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "6947:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2167,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2175,
												"initialValue": {
													"arguments": [
														{
															"id": 2170,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "6978:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2171,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "6984:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2172,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "6987:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2173,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "6990:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2169,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1960,
															2040,
															2148
														],
														"referencedDeclaration": 2148,
														"src": "6967:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1894_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2177,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "7014:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2178,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "7021:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2176,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "7002:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1894_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:13"
											},
											{
												"expression": {
													"id": 2181,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2163,
													"src": "7047:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2182,
												"nodeType": "Return",
												"src": "7040:16:13"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "6820:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "6834:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "6843:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2154,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "6854:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:13"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "6888:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:13"
									},
									"scope": 2234,
									"src": "6803:260:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "7268:460:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1894",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2193,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "7282:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1894",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2194,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "7291:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:13",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "7291:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1894",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1894",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2199,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "7378:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2200,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "7387:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:13",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1891,
															"src": "7387:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1894",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2207,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "7483:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1894",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2208,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "7492:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:13",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1892,
																"src": "7492:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1894",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1894",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2188,
																	"src": "7617:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1894",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2220,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "7626:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1894_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:13",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1893,
																	"src": "7626:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1894",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2228,
															"nodeType": "IfStatement",
															"src": "7613:109:13",
															"trueBody": {
																"id": 2227,
																"nodeType": "Block",
																"src": "7658:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2224,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2190,
																					"src": "7702:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2223,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1907,
																				"src": "7679:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2226,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:13"
																	}
																]
															}
														},
														"id": 2229,
														"nodeType": "IfStatement",
														"src": "7479:243:13",
														"trueBody": {
															"id": 2218,
															"nodeType": "Block",
															"src": "7529:78:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2214,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2190,
																						"src": "7586:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2212,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2211,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "7550:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2217,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:13"
																}
															]
														}
													},
													"id": 2230,
													"nodeType": "IfStatement",
													"src": "7374:348:13",
													"trueBody": {
														"id": 2206,
														"nodeType": "Block",
														"src": "7418:55:13",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2203,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "7439:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2205,
																"nodeType": "RevertStatement",
																"src": "7432:30:13"
															}
														]
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "7278:444:13",
												"trueBody": {
													"id": 2198,
													"nodeType": "Block",
													"src": "7313:55:13",
													"statements": [
														{
															"functionReturnParameters": 2192,
															"id": 2197,
															"nodeType": "Return",
															"src": "7327:7:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:13",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "7217:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1894",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2186,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1894,
														"src": "7217:12:13"
													},
													"referencedDeclaration": 1894,
													"src": "7217:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1894",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "7237:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:13"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:13"
									},
									"scope": 2234,
									"src": "7196:532:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2235,
							"src": "344:7386:13",
							"usedErrors": [
								1897,
								1902,
								1907
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2461
						],
						"IERC5267": [
							403
						],
						"MessageHashUtils": [
							2535
						],
						"ShortString": [
							1310
						],
						"ShortStrings": [
							1521
						]
					},
					"id": 2462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2236,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2462,
							"sourceUnit": 2536,
							"src": "139:56:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2237,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2535,
										"src": "147:16:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2462,
							"sourceUnit": 1522,
							"src": "196:62:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2239,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1521,
										"src": "204:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2240,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "218:11:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2462,
							"sourceUnit": 404,
							"src": "259:55:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2242,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 403,
										"src": "267:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2245,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "1988:8:14"
									},
									"id": 2246,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:14"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:14",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2461,
							"linearizedBaseContracts": [
								2461,
								403
							],
							"name": "EIP712",
							"nameLocation": "1978:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2248,
									"libraryName": {
										"id": 2247,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1521,
										"src": "2009:12:14"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:14"
								},
								{
									"constant": true,
									"id": 2253,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2034:140:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2249,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2251,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2250,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2252,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2255,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2373:48:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2254,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2257,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2427:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2259,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2473:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2258,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2261,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2517:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2260,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2263,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2560:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2262,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2266,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2607:35:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2264,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1310,
											"src": "2607:11:14"
										},
										"referencedDeclaration": 1310,
										"src": "2607:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2269,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2648:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2267,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1310,
											"src": "2648:11:14"
										},
										"referencedDeclaration": 1310,
										"src": "2648:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2271,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2692:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2270,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2273,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "2726:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2272,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "3383:376:14",
										"statements": [
											{
												"expression": {
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2281,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "3393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2284,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "3432:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2282,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "3401:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "3401:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1310_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:14"
											},
											{
												"expression": {
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2288,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "3456:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2291,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "3501:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2289,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "3467:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "3467:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1310_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
														"typeString": "ShortString"
													}
												},
												"id": 2294,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:14"
											},
											{
												"expression": {
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2295,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "3528:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2299,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3558:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2297,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2296,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:14"
											},
											{
												"expression": {
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2304,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "3574:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2308,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "3607:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2306,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2305,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:14"
											},
											{
												"expression": {
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2313,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "3627:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2314,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:14",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:14"
											},
											{
												"expression": {
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2318,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2255,
														"src": "3667:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2319,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "3692:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2322,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:14"
											},
											{
												"expression": {
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2323,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "3725:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2326,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2461",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2461",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2329,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:14"
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:14",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2331,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "3340:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "3360:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:14"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:14"
									},
									"scope": 2461,
									"src": "3328:431:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "3907:200:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2339,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2461",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2461",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2337,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2341,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "3938:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2343,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2345,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "3970:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2354,
													"nodeType": "Block",
													"src": "4046:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2351,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "4067:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2336,
															"id": 2353,
															"nodeType": "Return",
															"src": "4060:30:14"
														}
													]
												},
												"id": 2355,
												"nodeType": "IfStatement",
												"src": "3917:184:14",
												"trueBody": {
													"id": 2350,
													"nodeType": "Block",
													"src": "3986:54:14",
													"statements": [
														{
															"expression": {
																"id": 2348,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "4007:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2336,
															"id": 2349,
															"nodeType": "Return",
															"src": "4000:29:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:14",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:14"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "3898:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:14"
									},
									"scope": 2461,
									"src": "3845:262:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "4177:115:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2365,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "4215:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2366,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "4226:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2367,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "4239:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2368,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:14",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2372,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2461",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2461",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2370,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2363,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:14",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2362,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2361,
												"id": 2376,
												"nodeType": "Return",
												"src": "4187:98:14"
											}
										]
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:14"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "4168:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:14"
									},
									"scope": 2461,
									"src": "4113:179:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "5003:90:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2388,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2357,
																"src": "5053:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2390,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "5075:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2386,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "5020:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2535_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:14",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2534,
														"src": "5020:32:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2392,
												"nodeType": "Return",
												"src": "5013:73:14"
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:14",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "4943:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:14"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "4994:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2383,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:14"
									},
									"scope": 2461,
									"src": "4917:176:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										402
									],
									"body": {
										"id": 2435,
										"nodeType": "Block",
										"src": "5472:229:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2414,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "5533:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2416,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2460,
																"src": "5560:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2418,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2422,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2461",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2461",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2424,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2428,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2429,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2433,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2412,
												"id": 2434,
												"nodeType": "Return",
												"src": "5482:212:14"
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:14",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:14"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5242:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2397,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5269:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5301:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5336:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5365:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5404:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "5430:27:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2410,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:14"
									},
									"scope": 2461,
									"src": "5144:557:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2447,
										"nodeType": "Block",
										"src": "6082:65:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2444,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "6126:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2442,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "6099:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																"typeString": "ShortString"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1489,
														"src": "6099:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1310_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1310_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2441,
												"id": 2446,
												"nodeType": "Return",
												"src": "6092:48:14"
											}
										]
									},
									"documentation": {
										"id": 2437,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:14",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:14"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "6067:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:14"
									},
									"scope": 2461,
									"src": "6021:126:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2459,
										"nodeType": "Block",
										"src": "6537:71:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2456,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "6584:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2454,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "6554:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1310",
																"typeString": "ShortString"
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1489,
														"src": "6554:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1310_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1310_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2453,
												"id": 2458,
												"nodeType": "Return",
												"src": "6547:54:14"
											}
										]
									},
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:14",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:14"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "6522:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:14"
									},
									"scope": 2461,
									"src": "6473:135:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2462,
							"src": "1960:4650:14",
							"usedErrors": [
								1318,
								1320
							],
							"usedEvents": [
								383
							]
						}
					],
					"src": "113:6498:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2535
						],
						"Strings": [
							1886
						]
					},
					"id": 2536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2536,
							"sourceUnit": 1887,
							"src": "149:39:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2464,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1886,
										"src": "157:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2466,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:15",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2535,
							"linearizedBaseContracts": [
								2535
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "1314:368:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:15",
													"nodeType": "YulBlock",
													"src": "1376:300:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:15",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:15",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:15"
																},
																"nativeSrc": "1390:48:15",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:15"
															},
															"nativeSrc": "1390:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:15",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:15"
																},
																"nativeSrc": "1492:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:15"
															},
															"nativeSrc": "1492:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:15"
														},
														{
															"nativeSrc": "1571:31:15",
															"nodeType": "YulAssignment",
															"src": "1571:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:15",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:15"
																},
																"nativeSrc": "1581:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2472,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2469,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:15",
														"valueSize": 1
													}
												],
												"id": 2474,
												"nodeType": "InlineAssembly",
												"src": "1367:309:15"
											}
										]
									},
									"documentation": {
										"id": 2467,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1254:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:15"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1298:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:15"
									},
									"scope": 2535,
									"src": "1222:460:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "2234:143:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2493,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2479,
																						"src": "2343:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2494,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:15",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2491,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1886,
																					"src": "2326:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1886_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:15",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1699,
																				"src": "2326:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2489,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2497,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "2361:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2485,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:15",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2484,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2483,
												"id": 2500,
												"nodeType": "Return",
												"src": "2244:126:15"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2180:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:15"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2225:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2481,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:15"
									},
									"scope": 2535,
									"src": "2148:229:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "2831:80:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2516,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "2887:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2517,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "2898:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2513,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2512,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2511,
												"id": 2520,
												"nodeType": "Return",
												"src": "2841:63:15"
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "2761:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "2780:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:15"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "2822:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:15"
									},
									"scope": 2535,
									"src": "2720:191:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "3462:292:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:15",
													"nodeType": "YulBlock",
													"src": "3524:224:15",
													"statements": [
														{
															"nativeSrc": "3538:22:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:15",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:15"
																},
																"nativeSrc": "3549:11:15",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:15"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:15",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:15"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:15",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:15",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:15"
																},
																"nativeSrc": "3573:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:15"
															},
															"nativeSrc": "3573:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:15",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:15"
																		},
																		"nativeSrc": "3616:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:15"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:15",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:15"
																},
																"nativeSrc": "3609:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:15"
															},
															"nativeSrc": "3609:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:15",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:15"
																		},
																		"nativeSrc": "3668:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:15"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:15"
																},
																"nativeSrc": "3661:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:15"
															},
															"nativeSrc": "3661:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:15"
														},
														{
															"nativeSrc": "3708:30:15",
															"nodeType": "YulAssignment",
															"src": "3708:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:15",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:15"
																},
																"nativeSrc": "3718:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2530,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2525,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:15",
														"valueSize": 1
													},
													{
														"declaration": 2527,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:15",
														"valueSize": 1
													}
												],
												"id": 2532,
												"nodeType": "InlineAssembly",
												"src": "3515:233:15"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:15",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "3378:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "3403:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:15"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "3446:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:15"
									},
									"scope": 2535,
									"src": "3353:401:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2536,
							"src": "521:3235:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2559
						],
						"IERC165": [
							2571
						]
					},
					"id": 2560,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2537,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2560,
							"sourceUnit": 2572,
							"src": "140:38:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2538,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2571,
										"src": "148:7:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2541,
										"name": "IERC165",
										"nameLocations": [
											"687:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2571,
										"src": "687:7:16"
									},
									"id": 2542,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:16"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2540,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:16",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2559,
							"linearizedBaseContracts": [
								2559,
								2571
							],
							"name": "ERC165",
							"nameLocation": "677:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2570
									],
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "844:64:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2550,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2545,
														"src": "861:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2552,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2571,
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2571_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2571_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2551,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2571",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:16",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2549,
												"id": 2556,
												"nodeType": "Return",
												"src": "854:47:16"
											}
										]
									},
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:16",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "789:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2544,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:16"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "838:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:16"
									},
									"scope": 2559,
									"src": "762:146:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2560,
							"src": "659:251:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2571
						]
					},
					"id": 2572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2561,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2562,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:17",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2571,
							"linearizedBaseContracts": [
								2571
							],
							"name": "IERC165",
							"nameLocation": "431:7:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:17",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "817:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2564,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:17"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "860:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:17"
									},
									"scope": 2571,
									"src": "790:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2572,
							"src": "421:447:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3625
						]
					},
					"id": 3626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2574,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:18",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3625,
							"linearizedBaseContracts": [
								3625
							],
							"name": "Math",
							"nameLocation": "211:4:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:18",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2577,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:18"
									},
									"src": "277:29:18"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2582,
									"members": [
										{
											"id": 2578,
											"name": "Floor",
											"nameLocation": "336:5:18",
											"nodeType": "EnumValue",
											"src": "336:5:18"
										},
										{
											"id": 2579,
											"name": "Ceil",
											"nameLocation": "379:4:18",
											"nodeType": "EnumValue",
											"src": "379:4:18"
										},
										{
											"id": 2580,
											"name": "Trunc",
											"nameLocation": "421:5:18",
											"nodeType": "EnumValue",
											"src": "421:5:18"
										},
										{
											"id": 2581,
											"name": "Expand",
											"nameLocation": "451:6:18",
											"nodeType": "EnumValue",
											"src": "451:6:18"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:18",
									"nodeType": "EnumDefinition",
									"src": "312:169:18"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "661:140:18",
										"statements": [
											{
												"id": 2612,
												"nodeType": "UncheckedBlock",
												"src": "671:124:18",
												"statements": [
													{
														"assignments": [
															2595
														],
														"declarations": [
															{
																"constant": false,
																"id": 2595,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 2612,
																"src": "695:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2599,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2596,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2585,
																"src": "707:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2597,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "711:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2600,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2595,
																"src": "730:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2601,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2585,
																"src": "734:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2607,
														"nodeType": "IfStatement",
														"src": "726:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2593,
															"id": 2606,
															"nodeType": "Return",
															"src": "737:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2609,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2595,
																	"src": "782:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2610,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2593,
														"id": 2611,
														"nodeType": "Return",
														"src": "768:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2583,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:18",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "601:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "612:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:18"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "646:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "652:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:18"
									},
									"scope": 3625,
									"src": "585:216:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2641,
										"nodeType": "Block",
										"src": "984:113:18",
										"statements": [
											{
												"id": 2640,
												"nodeType": "UncheckedBlock",
												"src": "994:97:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2626,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "1022:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2627,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2617,
																"src": "1026:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2633,
														"nodeType": "IfStatement",
														"src": "1018:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2631,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2625,
															"id": 2632,
															"nodeType": "Return",
															"src": "1029:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2635,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2617,
																		"src": "1074:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2636,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "1078:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2638,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2625,
														"id": 2639,
														"nodeType": "Return",
														"src": "1060:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2615,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:18",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "924:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "935:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:18"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "969:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "975:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:18"
									},
									"scope": 3625,
									"src": "908:189:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2683,
										"nodeType": "Block",
										"src": "1283:417:18",
										"statements": [
											{
												"id": 2682,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2654,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2645,
																"src": "1551:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2661,
														"nodeType": "IfStatement",
														"src": "1547:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2659,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2653,
															"id": 2660,
															"nodeType": "Return",
															"src": "1559:16:18"
														}
													},
													{
														"assignments": [
															2663
														],
														"declarations": [
															{
																"constant": false,
																"id": 2663,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 2682,
																"src": "1589:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2667,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2664,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2645,
																"src": "1601:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "1605:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2668,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2663,
																	"src": "1624:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2669,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "1628:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2671,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "1633:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2677,
														"nodeType": "IfStatement",
														"src": "1620:33:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2653,
															"id": 2676,
															"nodeType": "Return",
															"src": "1636:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2679,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2663,
																	"src": "1681:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2680,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2653,
														"id": 2681,
														"nodeType": "Return",
														"src": "1667:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2643,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:18",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2684,
												"src": "1223:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2684,
												"src": "1234:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:18"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2684,
												"src": "1268:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2649,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2684,
												"src": "1274:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:18"
									},
									"scope": 3625,
									"src": "1207:493:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2711,
										"nodeType": "Block",
										"src": "1887:114:18",
										"statements": [
											{
												"id": 2710,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2696,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "1925:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2703,
														"nodeType": "IfStatement",
														"src": "1921:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2701,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2695,
															"id": 2702,
															"nodeType": "Return",
															"src": "1933:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2705,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2687,
																		"src": "1978:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2706,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "1982:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2708,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2695,
														"id": 2709,
														"nodeType": "Return",
														"src": "1964:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2685,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:18",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "1827:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "1838:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:18"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "1872:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "1878:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:18"
									},
									"scope": 3625,
									"src": "1811:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "2198:114:18",
										"statements": [
											{
												"id": 2738,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2724,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "2236:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2731,
														"nodeType": "IfStatement",
														"src": "2232:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2729,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2723,
															"id": 2730,
															"nodeType": "Return",
															"src": "2244:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2733,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2715,
																		"src": "2289:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2734,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "2293:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2736,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2723,
														"id": 2737,
														"nodeType": "Return",
														"src": "2275:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2713,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:18",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "2138:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "2149:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:18"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "2183:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "2189:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:18"
									},
									"scope": 3625,
									"src": "2122:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2757,
										"nodeType": "Block",
										"src": "2449:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2750,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "2466:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2751,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "2470:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2754,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2745,
														"src": "2478:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:18",
													"trueExpression": {
														"id": 2753,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "2474:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2749,
												"id": 2756,
												"nodeType": "Return",
												"src": "2459:20:18"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:18",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "2395:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "2406:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:18"
									},
									"returnParameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "2440:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:18"
									},
									"scope": 3625,
									"src": "2382:104:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2775,
										"nodeType": "Block",
										"src": "2624:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2768,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "2641:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2769,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "2645:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2772,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2763,
														"src": "2653:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:18",
													"trueExpression": {
														"id": 2771,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2761,
														"src": "2649:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2767,
												"id": 2774,
												"nodeType": "Return",
												"src": "2634:20:18"
											}
										]
									},
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:18",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "2570:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "2581:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:18"
									},
									"returnParameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "2615:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:18"
									},
									"scope": 3625,
									"src": "2557:104:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2798,
										"nodeType": "Block",
										"src": "2845:82:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2786,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "2900:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2787,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "2904:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2789,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2790,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2779,
																		"src": "2910:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2791,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2781,
																		"src": "2914:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2793,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2785,
												"id": 2797,
												"nodeType": "Return",
												"src": "2892:28:18"
											}
										]
									},
									"documentation": {
										"id": 2777,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:18",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "2791:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "2802:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:18"
									},
									"returnParameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "2836:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:18"
									},
									"scope": 3625,
									"src": "2774:153:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "3219:260:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2809,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "3233:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2817,
												"nodeType": "IfStatement",
												"src": "3229:127:18",
												"trueBody": {
													"id": 2816,
													"nodeType": "Block",
													"src": "3241:115:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2812,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2802,
																	"src": "3340:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2813,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2804,
																	"src": "3344:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2808,
															"id": 2815,
															"nodeType": "Return",
															"src": "3333:12:18"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2818,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "3444:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2822,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2802,
																			"src": "3458:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2804,
																"src": "3467:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:18",
													"trueExpression": {
														"hexValue": "30",
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2808,
												"id": 2831,
												"nodeType": "Return",
												"src": "3437:35:18"
											}
										]
									},
									"documentation": {
										"id": 2800,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:18",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "3165:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "3176:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:18"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "3210:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:18"
									},
									"scope": 3625,
									"src": "3148:331:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2958,
										"nodeType": "Block",
										"src": "3901:4018:18",
										"statements": [
											{
												"id": 2957,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:18",
												"statements": [
													{
														"assignments": [
															2846
														],
														"declarations": [
															{
																"constant": false,
																"id": 2846,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:18",
																"nodeType": "VariableDeclaration",
																"scope": 2957,
																"src": "4232:13:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2845,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2850,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2847,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2836,
																"src": "4248:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2848,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "4252:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:18"
													},
													{
														"assignments": [
															2852
														],
														"declarations": [
															{
																"constant": false,
																"id": 2852,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:18",
																"nodeType": "VariableDeclaration",
																"scope": 2957,
																"src": "4312:13:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2851,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2853,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:18"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:18",
															"nodeType": "YulBlock",
															"src": "4392:122:18",
															"statements": [
																{
																	"nativeSrc": "4410:30:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:18"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:18"
																				},
																				"nativeSrc": "4433:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:18"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:18"
																		},
																		"nativeSrc": "4420:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:18"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:18",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:18",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:18"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:18"
																				},
																				"nativeSrc": "4470:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:18"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:18"
																				},
																				"nativeSrc": "4486:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:18"
																		},
																		"nativeSrc": "4466:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2836,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:18",
																"valueSize": 1
															},
															{
																"declaration": 2838,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:18",
																"valueSize": 1
															}
														],
														"id": 2854,
														"nodeType": "InlineAssembly",
														"src": "4383:131:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2855,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2852,
																"src": "4595:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2863,
														"nodeType": "IfStatement",
														"src": "4591:368:18",
														"trueBody": {
															"id": 2862,
															"nodeType": "Block",
															"src": "4607:352:18",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2858,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2846,
																			"src": "4925:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2859,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2840,
																			"src": "4933:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2844,
																	"id": 2861,
																	"nodeType": "Return",
																	"src": "4918:26:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2864,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "5065:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2865,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2852,
																"src": "5080:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2871,
														"nodeType": "IfStatement",
														"src": "5061:88:18",
														"trueBody": {
															"id": 2870,
															"nodeType": "Block",
															"src": "5087:62:18",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2867,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2577,
																			"src": "5112:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2869,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:18"
																}
															]
														}
													},
													{
														"assignments": [
															2873
														],
														"declarations": [
															{
																"constant": false,
																"id": 2873,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:18",
																"nodeType": "VariableDeclaration",
																"scope": 2957,
																"src": "5404:17:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2872,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2874,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:18"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:18",
															"nodeType": "YulBlock",
															"src": "5444:291:18",
															"statements": [
																{
																	"nativeSrc": "5513:38:18",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:18"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:18"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:18",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:18"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:18"
																		},
																		"nativeSrc": "5526:25:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:18"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:18",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:18"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:18",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:18"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:18"
																				},
																				"nativeSrc": "5653:20:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:18"
																		},
																		"nativeSrc": "5642:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:18"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:18",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:18"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:18"
																		},
																		"nativeSrc": "5700:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2836,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:18",
																"valueSize": 1
															},
															{
																"declaration": 2838,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:18",
																"valueSize": 1
															}
														],
														"id": 2875,
														"nodeType": "InlineAssembly",
														"src": "5435:300:18"
													},
													{
														"assignments": [
															2877
														],
														"declarations": [
															{
																"constant": false,
																"id": 2877,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:18",
																"nodeType": "VariableDeclaration",
																"scope": 2957,
																"src": "5939:12:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2876,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2884,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "5954:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2880,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2840,
																			"src": "5973:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2882,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:18"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:18",
															"nodeType": "YulBlock",
															"src": "6008:362:18",
															"statements": [
																{
																	"nativeSrc": "6073:37:18",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:18",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:18"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:18"
																		},
																		"nativeSrc": "6088:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:18"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:18"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:18",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:18"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:18"
																		},
																		"nativeSrc": "6186:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:18"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:18",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:18",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:18",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:18",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:18"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:18"
																						},
																						"nativeSrc": "6333:12:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:18"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:18"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:18"
																				},
																				"nativeSrc": "6329:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:18"
																		},
																		"nativeSrc": "6325:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:18"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:18",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2877,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2877,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2877,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2877,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2877,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:18",
																"valueSize": 1
															}
														],
														"id": 2885,
														"nodeType": "InlineAssembly",
														"src": "5999:371:18"
													},
													{
														"expression": {
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2886,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "6436:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2887,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "6445:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2888,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "6453:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2891,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:18"
													},
													{
														"assignments": [
															2893
														],
														"declarations": [
															{
																"constant": false,
																"id": 2893,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:18",
																"nodeType": "VariableDeclaration",
																"scope": 2957,
																"src": "6775:15:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2892,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2900,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2895,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2840,
																			"src": "6798:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2897,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:18"
													},
													{
														"expression": {
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2901,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2893,
																"src": "7031:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2903,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "7046:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2904,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "7060:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2908,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:18"
													},
													{
														"expression": {
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2909,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2893,
																"src": "7100:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2911,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "7115:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2912,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "7129:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2916,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:18"
													},
													{
														"expression": {
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2917,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2893,
																"src": "7170:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2919,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "7185:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2920,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "7199:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2924,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:18"
													},
													{
														"expression": {
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2925,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2893,
																"src": "7240:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2927,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "7255:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2928,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "7269:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2932,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:18"
													},
													{
														"expression": {
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2933,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2893,
																"src": "7310:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2935,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "7325:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2936,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "7339:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2940,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:18"
													},
													{
														"expression": {
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2941,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2893,
																"src": "7381:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2943,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "7396:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2944,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "7410:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2948,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:18"
													},
													{
														"expression": {
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2949,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2843,
																"src": "7851:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2950,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "7860:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2951,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2893,
																	"src": "7868:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2954,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:18"
													},
													{
														"expression": {
															"id": 2955,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2843,
															"src": "7896:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2844,
														"id": 2956,
														"nodeType": "Return",
														"src": "7889:13:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2834,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:18",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "3819:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "3830:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "3841:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:18"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "3885:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:18"
									},
									"scope": 3625,
									"src": "3803:4116:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "8161:192:18",
										"statements": [
											{
												"assignments": [
													2975
												],
												"declarations": [
													{
														"constant": false,
														"id": 2975,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3001,
														"src": "8171:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2981,
												"initialValue": {
													"arguments": [
														{
															"id": 2977,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2962,
															"src": "8195:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2978,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "8198:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2979,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2966,
															"src": "8201:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2976,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2959,
															3002
														],
														"referencedDeclaration": 2959,
														"src": "8188:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2983,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2969,
																"src": "8244:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2582",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2582",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2982,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "8227:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2582_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2986,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2962,
																	"src": "8264:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2987,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "8267:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2988,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2966,
																	"src": "8270:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2985,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2998,
												"nodeType": "IfStatement",
												"src": "8223:101:18",
												"trueBody": {
													"id": 2997,
													"nodeType": "Block",
													"src": "8288:36:18",
													"statements": [
														{
															"expression": {
																"id": 2995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2993,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "8302:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2996,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:18"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2999,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2975,
													"src": "8340:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2973,
												"id": 3000,
												"nodeType": "Return",
												"src": "8333:13:18"
											}
										]
									},
									"documentation": {
										"id": 2960,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:18",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "8067:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "8078:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "8089:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "8110:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2582",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2967,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "8110:8:18"
													},
													"referencedDeclaration": 2582,
													"src": "8110:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2582",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:18"
									},
									"returnParameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "8152:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:18"
									},
									"scope": 3625,
									"src": "8051:302:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3113,
										"nodeType": "Block",
										"src": "8644:1585:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3010,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "8658:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3016,
												"nodeType": "IfStatement",
												"src": "8654:45:18",
												"trueBody": {
													"id": 3015,
													"nodeType": "Block",
													"src": "8666:33:18",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3009,
															"id": 3014,
															"nodeType": "Return",
															"src": "8680:8:18"
														}
													]
												}
											},
											{
												"assignments": [
													3018
												],
												"declarations": [
													{
														"constant": false,
														"id": 3018,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3113,
														"src": "9378:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3027,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3021,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "9406:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3020,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3281,
																			3316
																		],
																		"referencedDeclaration": 3281,
																		"src": "9401:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3025,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:18"
											},
											{
												"id": 3112,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:18",
												"statements": [
													{
														"expression": {
															"id": 3037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3028,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "9839:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3029,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "9849:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "9858:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3031,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "9862:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3038,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:18"
													},
													{
														"expression": {
															"id": 3048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "9888:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3040,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "9898:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "9907:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3042,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "9911:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3049,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:18"
													},
													{
														"expression": {
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3050,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "9937:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3051,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "9947:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "9956:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3053,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "9960:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3060,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:18"
													},
													{
														"expression": {
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3061,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "9986:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3062,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "9996:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "10005:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3064,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "10009:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3071,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:18"
													},
													{
														"expression": {
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3072,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "10035:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3073,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "10045:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3074,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "10054:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3075,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "10058:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3082,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:18"
													},
													{
														"expression": {
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3083,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "10084:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3084,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "10094:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3085,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "10103:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3086,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "10107:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3089,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3093,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:18"
													},
													{
														"expression": {
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3094,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3018,
																"src": "10133:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3095,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3018,
																				"src": "10143:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3096,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3005,
																					"src": "10152:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3097,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "10156:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3100,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3104,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:18"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3106,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3018,
																	"src": "10193:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3107,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3005,
																		"src": "10201:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3108,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3018,
																		"src": "10205:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3105,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2776,
																"src": "10189:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3009,
														"id": 3111,
														"nodeType": "Return",
														"src": "10182:30:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3003,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:18",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "8601:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:18"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "8635:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:18"
									},
									"scope": 3625,
									"src": "8587:1642:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3148,
										"nodeType": "Block",
										"src": "10405:164:18",
										"statements": [
											{
												"id": 3147,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:18",
												"statements": [
													{
														"assignments": [
															3126
														],
														"declarations": [
															{
																"constant": false,
																"id": 3126,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3147,
																"src": "10439:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3125,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3130,
														"initialValue": {
															"arguments": [
																{
																	"id": 3128,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3117,
																	"src": "10461:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3127,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3114,
																	3149
																],
																"referencedDeclaration": 3114,
																"src": "10456:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3126,
																"src": "10484:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3133,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3120,
																						"src": "10511:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3132,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3624,
																					"src": "10494:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2582_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3135,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3126,
																						"src": "10524:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3136,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3126,
																						"src": "10533:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3138,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3117,
																					"src": "10542:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3124,
														"id": 3146,
														"nodeType": "Return",
														"src": "10477:75:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3115,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:18",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "10343:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "10354:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2582",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3118,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "10354:8:18"
													},
													"referencedDeclaration": 2582,
													"src": "10354:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2582",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:18"
									},
									"returnParameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "10396:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:18"
									},
									"scope": 3625,
									"src": "10329:240:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3280,
										"nodeType": "Block",
										"src": "10760:922:18",
										"statements": [
											{
												"assignments": [
													3158
												],
												"declarations": [
													{
														"constant": false,
														"id": 3158,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3280,
														"src": "10770:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3160,
												"initialValue": {
													"hexValue": "30",
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:18"
											},
											{
												"id": 3277,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "10826:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3175,
														"nodeType": "IfStatement",
														"src": "10822:99:18",
														"trueBody": {
															"id": 3174,
															"nodeType": "Block",
															"src": "10844:77:18",
															"statements": [
																{
																	"expression": {
																		"id": 3168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "10862:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3169,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:18"
																},
																{
																	"expression": {
																		"id": 3172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "10893:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3173,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "10938:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3190,
														"nodeType": "IfStatement",
														"src": "10934:96:18",
														"trueBody": {
															"id": 3189,
															"nodeType": "Block",
															"src": "10955:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3181,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "10973:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3184,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:18"
																},
																{
																	"expression": {
																		"id": 3187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11003:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3188,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3191,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11047:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3205,
														"nodeType": "IfStatement",
														"src": "11043:96:18",
														"trueBody": {
															"id": 3204,
															"nodeType": "Block",
															"src": "11064:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3196,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11082:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3199,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:18"
																},
																{
																	"expression": {
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3200,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11112:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3203,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11156:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3220,
														"nodeType": "IfStatement",
														"src": "11152:96:18",
														"trueBody": {
															"id": 3219,
															"nodeType": "Block",
															"src": "11173:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11191:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3214,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:18"
																},
																{
																	"expression": {
																		"id": 3217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3215,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11221:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3218,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11265:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3235,
														"nodeType": "IfStatement",
														"src": "11261:93:18",
														"trueBody": {
															"id": 3234,
															"nodeType": "Block",
															"src": "11281:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3226,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11299:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3229,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:18"
																},
																{
																	"expression": {
																		"id": 3232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3230,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11328:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3233,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3236,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11371:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3250,
														"nodeType": "IfStatement",
														"src": "11367:93:18",
														"trueBody": {
															"id": 3249,
															"nodeType": "Block",
															"src": "11387:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3241,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11405:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3244,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:18"
																},
																{
																	"expression": {
																		"id": 3247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3245,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11434:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3248,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3251,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11477:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3265,
														"nodeType": "IfStatement",
														"src": "11473:93:18",
														"trueBody": {
															"id": 3264,
															"nodeType": "Block",
															"src": "11493:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3256,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11511:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3259,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:18"
																},
																{
																	"expression": {
																		"id": 3262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3260,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11540:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3263,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3266,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11583:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3276,
														"nodeType": "IfStatement",
														"src": "11579:64:18",
														"trueBody": {
															"id": 3275,
															"nodeType": "Block",
															"src": "11599:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3271,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11617:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3274,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3278,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3158,
													"src": "11669:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3156,
												"id": 3279,
												"nodeType": "Return",
												"src": "11662:13:18"
											}
										]
									},
									"documentation": {
										"id": 3150,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:18",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "10713:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:18"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "10751:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:18"
									},
									"scope": 3625,
									"src": "10699:983:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3315,
										"nodeType": "Block",
										"src": "11915:168:18",
										"statements": [
											{
												"id": 3314,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:18",
												"statements": [
													{
														"assignments": [
															3293
														],
														"declarations": [
															{
																"constant": false,
																"id": 3293,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3314,
																"src": "11949:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3292,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3297,
														"initialValue": {
															"arguments": [
																{
																	"id": 3295,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3284,
																	"src": "11971:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3294,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3281,
																	3316
																],
																"referencedDeclaration": 3281,
																"src": "11966:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3298,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3293,
																"src": "11998:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3300,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3287,
																						"src": "12025:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3299,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3624,
																					"src": "12008:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2582_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3303,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3293,
																						"src": "12043:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3305,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3284,
																					"src": "12052:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3291,
														"id": 3313,
														"nodeType": "Return",
														"src": "11991:75:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3282,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:18",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "11849:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "11864:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2582",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3285,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "11864:8:18"
													},
													"referencedDeclaration": 2582,
													"src": "11864:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2582",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:18"
									},
									"returnParameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "11906:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:18"
									},
									"scope": 3625,
									"src": "11835:248:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3444,
										"nodeType": "Block",
										"src": "12276:854:18",
										"statements": [
											{
												"assignments": [
													3325
												],
												"declarations": [
													{
														"constant": false,
														"id": 3325,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3444,
														"src": "12286:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3327,
												"initialValue": {
													"hexValue": "30",
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:18"
											},
											{
												"id": 3441,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3328,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "12342:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3344,
														"nodeType": "IfStatement",
														"src": "12338:103:18",
														"trueBody": {
															"id": 3343,
															"nodeType": "Block",
															"src": "12361:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3333,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12379:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3338,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:18"
																},
																{
																	"expression": {
																		"id": 3341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3339,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12414:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3342,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3345,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "12458:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3361,
														"nodeType": "IfStatement",
														"src": "12454:103:18",
														"trueBody": {
															"id": 3360,
															"nodeType": "Block",
															"src": "12477:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12495:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3355,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:18"
																},
																{
																	"expression": {
																		"id": 3358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3356,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12530:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3359,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3362,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "12574:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3378,
														"nodeType": "IfStatement",
														"src": "12570:103:18",
														"trueBody": {
															"id": 3377,
															"nodeType": "Block",
															"src": "12593:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12611:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3372,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:18"
																},
																{
																	"expression": {
																		"id": 3375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3373,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12646:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3376,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "12690:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3395,
														"nodeType": "IfStatement",
														"src": "12686:100:18",
														"trueBody": {
															"id": 3394,
															"nodeType": "Block",
															"src": "12708:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3384,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12726:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3389,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:18"
																},
																{
																	"expression": {
																		"id": 3392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3390,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12760:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3393,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3396,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "12803:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3412,
														"nodeType": "IfStatement",
														"src": "12799:100:18",
														"trueBody": {
															"id": 3411,
															"nodeType": "Block",
															"src": "12821:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3401,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12839:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3406,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:18"
																},
																{
																	"expression": {
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3407,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12873:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3410,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "12916:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3429,
														"nodeType": "IfStatement",
														"src": "12912:100:18",
														"trueBody": {
															"id": 3428,
															"nodeType": "Block",
															"src": "12934:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3418,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12952:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3423,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:18"
																},
																{
																	"expression": {
																		"id": 3426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3424,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12986:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3427,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3319,
																"src": "13029:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3440,
														"nodeType": "IfStatement",
														"src": "13025:66:18",
														"trueBody": {
															"id": 3439,
															"nodeType": "Block",
															"src": "13047:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3435,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "13065:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3438,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3442,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3325,
													"src": "13117:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3323,
												"id": 3443,
												"nodeType": "Return",
												"src": "13110:13:18"
											}
										]
									},
									"documentation": {
										"id": 3317,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:18",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3445,
												"src": "12229:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:18"
									},
									"returnParameters": {
										"id": 3323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3445,
												"src": "12267:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:18"
									},
									"scope": 3625,
									"src": "12214:916:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3479,
										"nodeType": "Block",
										"src": "13365:170:18",
										"statements": [
											{
												"id": 3478,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:18",
												"statements": [
													{
														"assignments": [
															3457
														],
														"declarations": [
															{
																"constant": false,
																"id": 3457,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3478,
																"src": "13399:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3456,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3461,
														"initialValue": {
															"arguments": [
																{
																	"id": 3459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3448,
																	"src": "13422:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3458,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3445,
																	3480
																],
																"referencedDeclaration": 3445,
																"src": "13416:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3462,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3457,
																"src": "13449:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3464,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3451,
																						"src": "13476:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3463,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3624,
																					"src": "13459:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2582_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3466,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3467,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3457,
																						"src": "13495:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3469,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3448,
																					"src": "13504:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3475,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3455,
														"id": 3477,
														"nodeType": "Return",
														"src": "13442:76:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3446,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:18",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "13299:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3451,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "13314:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2582",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3449,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "13314:8:18"
													},
													"referencedDeclaration": 2582,
													"src": "13314:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2582",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:18"
									},
									"returnParameters": {
										"id": 3455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3480,
												"src": "13356:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:18"
									},
									"scope": 3625,
									"src": "13284:251:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3566,
										"nodeType": "Block",
										"src": "13855:600:18",
										"statements": [
											{
												"assignments": [
													3489
												],
												"declarations": [
													{
														"constant": false,
														"id": 3489,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3566,
														"src": "13865:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3491,
												"initialValue": {
													"hexValue": "30",
													"id": 3490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:18"
											},
											{
												"id": 3563,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3492,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3483,
																	"src": "13921:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3506,
														"nodeType": "IfStatement",
														"src": "13917:98:18",
														"trueBody": {
															"id": 3505,
															"nodeType": "Block",
															"src": "13939:76:18",
															"statements": [
																{
																	"expression": {
																		"id": 3499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3497,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "13957:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3500,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:18"
																},
																{
																	"expression": {
																		"id": 3503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3501,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "13988:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3504,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3483,
																	"src": "14032:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3521,
														"nodeType": "IfStatement",
														"src": "14028:95:18",
														"trueBody": {
															"id": 3520,
															"nodeType": "Block",
															"src": "14049:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3512,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14067:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3515,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:18"
																},
																{
																	"expression": {
																		"id": 3518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3516,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14097:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3519,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3522,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3483,
																	"src": "14140:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3536,
														"nodeType": "IfStatement",
														"src": "14136:95:18",
														"trueBody": {
															"id": 3535,
															"nodeType": "Block",
															"src": "14157:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14175:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3530,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:18"
																},
																{
																	"expression": {
																		"id": 3533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3531,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14205:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3534,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3483,
																	"src": "14248:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3551,
														"nodeType": "IfStatement",
														"src": "14244:95:18",
														"trueBody": {
															"id": 3550,
															"nodeType": "Block",
															"src": "14265:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3542,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14283:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3545,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:18"
																},
																{
																	"expression": {
																		"id": 3548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14313:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3549,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3483,
																	"src": "14356:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3562,
														"nodeType": "IfStatement",
														"src": "14352:64:18",
														"trueBody": {
															"id": 3561,
															"nodeType": "Block",
															"src": "14372:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3557,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14390:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3560,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3564,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3489,
													"src": "14442:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3487,
												"id": 3565,
												"nodeType": "Return",
												"src": "14435:13:18"
											}
										]
									},
									"documentation": {
										"id": 3481,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:18",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "13808:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:18"
									},
									"returnParameters": {
										"id": 3487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "13846:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:18"
									},
									"scope": 3625,
									"src": "13792:663:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3604,
										"nodeType": "Block",
										"src": "14692:177:18",
										"statements": [
											{
												"id": 3603,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:18",
												"statements": [
													{
														"assignments": [
															3579
														],
														"declarations": [
															{
																"constant": false,
																"id": 3579,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3603,
																"src": "14726:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3578,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3583,
														"initialValue": {
															"arguments": [
																{
																	"id": 3581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3570,
																	"src": "14750:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3580,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3567,
																	3605
																],
																"referencedDeclaration": 3567,
																"src": "14743:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3584,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3579,
																"src": "14777:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3586,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3573,
																						"src": "14804:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2582",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3585,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3624,
																					"src": "14787:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2582_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3588,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3591,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3589,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3579,
																									"src": "14823:6:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3590,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3592,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3594,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3570,
																					"src": "14838:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3600,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3577,
														"id": 3602,
														"nodeType": "Return",
														"src": "14770:82:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3568,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:18",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3605,
												"src": "14626:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3605,
												"src": "14641:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2582",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3571,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "14641:8:18"
													},
													"referencedDeclaration": 2582,
													"src": "14641:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2582",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:18"
									},
									"returnParameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3605,
												"src": "14683:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:18"
									},
									"scope": 3625,
									"src": "14610:259:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3623,
										"nodeType": "Block",
										"src": "15067:48:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3616,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3609,
																	"src": "15090:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2582",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2582",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3614,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3613,
												"id": 3622,
												"nodeType": "Return",
												"src": "15077:31:18"
											}
										]
									},
									"documentation": {
										"id": 3606,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:18",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3609,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3624,
												"src": "15019:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2582",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3607,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2582,
														"src": "15019:8:18"
													},
													"referencedDeclaration": 2582,
													"src": "15019:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2582",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:18"
									},
									"returnParameters": {
										"id": 3613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3624,
												"src": "15061:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:18"
									},
									"scope": 3625,
									"src": "14993:122:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3626,
							"src": "203:14914:18",
							"usedErrors": [
								2577
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3730
						]
					},
					"id": 3731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3628,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:19",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3730,
							"linearizedBaseContracts": [
								3730
							],
							"name": "SignedMath",
							"nameLocation": "224:10:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3645,
										"nodeType": "Block",
										"src": "376:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3638,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "393:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3639,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3633,
															"src": "397:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3642,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3633,
														"src": "405:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:19",
													"trueExpression": {
														"id": 3641,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "401:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3637,
												"id": 3644,
												"nodeType": "Return",
												"src": "386:20:19"
											}
										]
									},
									"documentation": {
										"id": 3629,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:19",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "325:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3630,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "335:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3632,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:19"
									},
									"returnParameters": {
										"id": 3637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3646,
												"src": "368:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3635,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:19"
									},
									"scope": 3730,
									"src": "312:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3663,
										"nodeType": "Block",
										"src": "555:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3656,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3649,
															"src": "572:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3657,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3651,
															"src": "576:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3660,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3651,
														"src": "584:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:19",
													"trueExpression": {
														"id": 3659,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3649,
														"src": "580:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3655,
												"id": 3662,
												"nodeType": "Return",
												"src": "565:20:19"
											}
										]
									},
									"documentation": {
										"id": 3647,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:19",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3649,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "504:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3648,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3651,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "514:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3650,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:19"
									},
									"returnParameters": {
										"id": 3655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "547:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3653,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:19"
									},
									"scope": 3730,
									"src": "491:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3707,
										"nodeType": "Block",
										"src": "797:162:19",
										"statements": [
											{
												"assignments": [
													3675
												],
												"declarations": [
													{
														"constant": false,
														"id": 3675,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "859:8:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3674,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3688,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3676,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3667,
																	"src": "871:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3677,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3669,
																	"src": "875:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3679,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3680,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3667,
																				"src": "882:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3681,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3669,
																				"src": "886:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3683,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3686,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:19"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3689,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3675,
														"src": "911:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3694,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3675,
																						"src": "931:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3692,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:19",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3690,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3699,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3667,
																				"src": "945:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3700,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3669,
																				"src": "949:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3704,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3673,
												"id": 3706,
												"nodeType": "Return",
												"src": "904:48:19"
											}
										]
									},
									"documentation": {
										"id": 3665,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:19",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3667,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "746:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3666,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "756:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3668,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:19"
									},
									"returnParameters": {
										"id": 3673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "789:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3671,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:19"
									},
									"scope": 3730,
									"src": "729:230:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3728,
										"nodeType": "Block",
										"src": "1103:158:19",
										"statements": [
											{
												"id": 3727,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:19",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3718,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3711,
																			"src": "1228:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:19",
																		"subExpression": {
																			"id": 3722,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3711,
																			"src": "1242:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:19",
																	"trueExpression": {
																		"id": 3721,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3711,
																		"src": "1237:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3716,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 3725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3715,
														"id": 3726,
														"nodeType": "Return",
														"src": "1213:31:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3709,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:19",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "1061:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3710,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:19"
									},
									"returnParameters": {
										"id": 3715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "1094:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:19"
									},
									"scope": 3730,
									"src": "1048:213:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3731,
							"src": "216:1047:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:19"
				},
				"id": 19
			},
			"contracts/SPSv2.sol": {
				"ast": {
					"absolutePath": "contracts/SPSv2.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1235
						],
						"ECDSA": [
							2234
						],
						"EIP712": [
							2461
						],
						"ERC165": [
							2559
						],
						"ERC20": [
							1055
						],
						"ERC20Burnable": [
							1179
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1133
						],
						"IERC20Errors": [
							445
						],
						"IERC20Metadata": [
							1205
						],
						"IERC5267": [
							403
						],
						"MessageHashUtils": [
							2535
						],
						"ReentrancyGuard": [
							1304
						],
						"SPS": [
							3880
						],
						"ShortString": [
							1310
						],
						"ShortStrings": [
							1521
						]
					},
					"id": 3881,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3881,
							"sourceUnit": 1056,
							"src": "57:55:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 3734,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3881,
							"sourceUnit": 1180,
							"src": "113:74:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 3735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3881,
							"sourceUnit": 296,
							"src": "188:58:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 3736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3881,
							"sourceUnit": 1305,
							"src": "247:59:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"id": 3737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3881,
							"sourceUnit": 2462,
							"src": "307:63:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 3738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3881,
							"sourceUnit": 2235,
							"src": "371:62:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3740,
										"name": "ERC20",
										"nameLocations": [
											"798:5:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "798:5:20"
									},
									"id": 3741,
									"nodeType": "InheritanceSpecifier",
									"src": "798:5:20"
								},
								{
									"baseName": {
										"id": 3742,
										"name": "ERC20Burnable",
										"nameLocations": [
											"805:13:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1179,
										"src": "805:13:20"
									},
									"id": 3743,
									"nodeType": "InheritanceSpecifier",
									"src": "805:13:20"
								},
								{
									"baseName": {
										"id": 3744,
										"name": "AccessControl",
										"nameLocations": [
											"820:13:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "820:13:20"
									},
									"id": 3745,
									"nodeType": "InheritanceSpecifier",
									"src": "820:13:20"
								},
								{
									"baseName": {
										"id": 3746,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"835:15:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "835:15:20"
									},
									"id": 3747,
									"nodeType": "InheritanceSpecifier",
									"src": "835:15:20"
								},
								{
									"baseName": {
										"id": 3748,
										"name": "EIP712",
										"nameLocations": [
											"852:6:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2461,
										"src": "852:6:20"
									},
									"id": 3749,
									"nodeType": "InheritanceSpecifier",
									"src": "852:6:20"
								}
							],
							"canonicalName": "SPS",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3739,
								"nodeType": "StructuredDocumentation",
								"src": "435:346:20",
								"text": " @title Splintershards (SPS) Token Contract\n @dev Extends ERC20 Token Standard basic implementation with burnability, access control, and anti-reentrancy features.\n Includes functionality for token minting, delegation of voting power, and signature-based delegation.\n Utilizes EIP712 for typed structured data hashing and signing."
							},
							"fullyImplemented": true,
							"id": 3880,
							"linearizedBaseContracts": [
								3880,
								2461,
								403,
								1304,
								295,
								2559,
								2571,
								378,
								1179,
								1055,
								445,
								1205,
								1133,
								1235
							],
							"name": "SPS",
							"nameLocation": "791:3:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 3754,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "958:11:20",
									"nodeType": "VariableDeclaration",
									"scope": 3880,
									"src": "934:62:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3750,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "934:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 3752,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "982:13:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 3751,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "972:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3753,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "972:24:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 3759,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "1026:10:20",
									"nodeType": "VariableDeclaration",
									"scope": 3880,
									"src": "1002:60:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3755,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1002:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 3757,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1049:12:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 3756,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1039:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1039:23:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e7a324dc",
									"id": 3764,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nameLocation": "1092:19:20",
									"nodeType": "VariableDeclaration",
									"scope": 3880,
									"src": "1068:117:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3760,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1068:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 3762,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1124:60:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 3761,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1114:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3763,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1114:71:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3788,
										"nodeType": "Block",
										"src": "2396:217:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3777,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2417:18:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 3778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2437:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2441:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2437:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3776,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2406:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2406:42:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3781,
												"nodeType": "ExpressionStatement",
												"src": "2406:42:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3783,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3759,
															"src": "2527:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 3784,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2539:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2543:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2539:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3782,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2516:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:34:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3787,
												"nodeType": "ExpressionStatement",
												"src": "2516:34:20"
											}
										]
									},
									"documentation": {
										"id": 3765,
										"nodeType": "StructuredDocumentation",
										"src": "2121:195:20",
										"text": " @dev Sets the values for {name} and {symbol}, initializes EIP-712 domain separator.\n All two of these values are immutable: they can only be set once during construction."
									},
									"id": 3789,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53706c696e746572736861726473",
													"id": 3768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2341:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c95d14b2543b9b33eda86235bd046822fa36d3db9cc46f50874aea644db58e07",
														"typeString": "literal_string \"Splintershards\""
													},
													"value": "Splintershards"
												},
												{
													"hexValue": "535053",
													"id": 3769,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2359:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_92c535a7d95b44d9b1d34c20d5ae332c3609e2901295d96fcd233956938235fd",
														"typeString": "literal_string \"SPS\""
													},
													"value": "SPS"
												}
											],
											"id": 3770,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3767,
												"name": "ERC20",
												"nameLocations": [
													"2335:5:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1055,
												"src": "2335:5:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2335:30:20"
										},
										{
											"arguments": [
												{
													"hexValue": "53706c696e746572736861726473",
													"id": 3772,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2373:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c95d14b2543b9b33eda86235bd046822fa36d3db9cc46f50874aea644db58e07",
														"typeString": "literal_string \"Splintershards\""
													},
													"value": "Splintershards"
												},
												{
													"hexValue": "31",
													"id": 3773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2391:3:20",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3774,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3771,
												"name": "EIP712",
												"nameLocations": [
													"2366:6:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2461,
												"src": "2366:6:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2366:29:20"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2332:2:20"
									},
									"returnParameters": {
										"id": 3775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:20"
									},
									"scope": 3880,
									"src": "2321:292:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3807,
										"nodeType": "Block",
										"src": "2981:96:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3803,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3792,
															"src": "2997:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3804,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3794,
															"src": "3001:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3802,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "2991:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:17:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3806,
												"nodeType": "ExpressionStatement",
												"src": "2991:17:20"
											}
										]
									},
									"documentation": {
										"id": 3790,
										"nodeType": "StructuredDocumentation",
										"src": "2620:272:20",
										"text": " @dev Mints `amount` tokens to address `to`, requires the caller to have MINTER_ROLE.\n Emits a {Transfer} event.\n @param to The address of the beneficiary that will receive the minted tokens.\n @param amount The amount of tokens to mint."
									},
									"functionSelector": "40c10f19",
									"id": 3808,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3797,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3754,
													"src": "2955:11:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3798,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3796,
												"name": "onlyRole",
												"nameLocations": [
													"2946:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2946:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2946:21:20"
										},
										{
											"id": 3800,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3799,
												"name": "nonReentrant",
												"nameLocations": [
													"2968:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1268,
												"src": "2968:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2968:12:20"
										}
									],
									"name": "mint",
									"nameLocation": "2906:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2919:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 3808,
												"src": "2911:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3794,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2931:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3808,
												"src": "2923:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2923:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:28:20"
									},
									"returnParameters": {
										"id": 3801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2981:0:20"
									},
									"scope": 3880,
									"src": "2897:180:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 3829,
										"nodeType": "Block",
										"src": "8445:47:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3825,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3811,
															"src": "8471:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3826,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3813,
															"src": "8477:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3822,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "8455:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SPS_$3880_$",
																"typeString": "type(contract super SPS)"
															}
														},
														"id": 3824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8461:9:20",
														"memberName": "grantRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "8455:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3828,
												"nodeType": "ExpressionStatement",
												"src": "8455:30:20"
											}
										]
									},
									"documentation": {
										"id": 3809,
										"nodeType": "StructuredDocumentation",
										"src": "7940:405:20",
										"text": " @notice Grants a specific role to an account.\n Only accounts with the admin role for the given role can grant it to others.\n Emits a {RoleGranted} event.\n @dev Overrides the {AccessControl.grantRole} function to include non-reentrancy guard.\n @param role The bytes32 role identifier being granted.\n @param account The address being granted the role."
									},
									"functionSelector": "2f2ff15d",
									"id": 3830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 3818,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3811,
															"src": "8438:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3817,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "8425:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8425:18:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3820,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3816,
												"name": "onlyRole",
												"nameLocations": [
													"8416:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "8416:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "8416:28:20"
										}
									],
									"name": "grantRole",
									"nameLocation": "8359:9:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3815,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8407:8:20"
									},
									"parameters": {
										"id": 3814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3811,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8377:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3830,
												"src": "8369:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3810,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8369:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3813,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8391:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3830,
												"src": "8383:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8383:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8368:31:20"
									},
									"returnParameters": {
										"id": 3821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8445:0:20"
									},
									"scope": 3880,
									"src": "8350:142:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 3851,
										"nodeType": "Block",
										"src": "9025:48:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3847,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3833,
															"src": "9052:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3848,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3835,
															"src": "9058:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3844,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "9035:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SPS_$3880_$",
																"typeString": "type(contract super SPS)"
															}
														},
														"id": 3846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9041:10:20",
														"memberName": "revokeRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "9035:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9035:31:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3850,
												"nodeType": "ExpressionStatement",
												"src": "9035:31:20"
											}
										]
									},
									"documentation": {
										"id": 3831,
										"nodeType": "StructuredDocumentation",
										"src": "8498:426:20",
										"text": " @notice Revokes a specific role from an account.\n Only accounts with the admin role for the given role can revoke it from others.\n Emits a {RoleRevoked} event.\n @dev Overrides the {AccessControl.revokeRole} function to include non-reentrancy guard.\n @param role The bytes32 role identifier being revoked.\n @param account The address from which the role is being revoked."
									},
									"functionSelector": "d547741f",
									"id": 3852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 3840,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3833,
															"src": "9018:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3839,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9005:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9005:18:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3838,
												"name": "onlyRole",
												"nameLocations": [
													"8996:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "8996:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "8996:28:20"
										}
									],
									"name": "revokeRole",
									"nameLocation": "8938:10:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3837,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8987:8:20"
									},
									"parameters": {
										"id": 3836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3833,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8957:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3852,
												"src": "8949:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8949:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3835,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8971:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3852,
												"src": "8963:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8963:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8948:31:20"
									},
									"returnParameters": {
										"id": 3843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9025:0:20"
									},
									"scope": 3880,
									"src": "8929:144:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 3878,
										"nodeType": "Block",
										"src": "9627:145:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3864,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3857,
																"src": "9645:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3865,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9656:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9660:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9656:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9645:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5350533a3a72656e6f756e6365526f6c653a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 3868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9668:53:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c",
																"typeString": "literal_string \"SPS::renounceRole: can only renounce roles for self\""
															},
															"value": "SPS::renounceRole: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ea7e7f630d10db9a45080eddcf20b952a1fd0c5a5f9f628ebf68454d8dac01c",
																"typeString": "literal_string \"SPS::renounceRole: can only renounce roles for self\""
															}
														],
														"id": 3863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9637:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9637:85:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3870,
												"nodeType": "ExpressionStatement",
												"src": "9637:85:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3874,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3855,
															"src": "9751:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3875,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3857,
															"src": "9757:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3871,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "9732:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SPS_$3880_$",
																"typeString": "type(contract super SPS)"
															}
														},
														"id": 3873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9738:12:20",
														"memberName": "renounceRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "9732:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9732:33:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3877,
												"nodeType": "ExpressionStatement",
												"src": "9732:33:20"
											}
										]
									},
									"documentation": {
										"id": 3853,
										"nodeType": "StructuredDocumentation",
										"src": "9079:461:20",
										"text": " @notice Renounces a specific role from the calling account.\n Accounts can renounce roles granted to them, leaving them without that role.\n Emits a {RoleRevoked} event.\n @dev Overrides the {AccessControl.renounceRole} function to include non-reentrancy guard.\n @param role The bytes32 role identifier being renounced.\n @param account The address that is renouncing the role. Must be the transaction sender."
									},
									"functionSelector": "36568abe",
									"id": 3879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3861,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3860,
												"name": "nonReentrant",
												"nameLocations": [
													"9614:12:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1268,
												"src": "9614:12:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "9614:12:20"
										}
									],
									"name": "renounceRole",
									"nameLocation": "9554:12:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9605:8:20"
									},
									"parameters": {
										"id": 3858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3855,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "9575:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3879,
												"src": "9567:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9567:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3857,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9589:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3879,
												"src": "9581:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9581:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:31:20"
									},
									"returnParameters": {
										"id": 3862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9627:0:20"
									},
									"scope": 3880,
									"src": "9545:227:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3881,
							"src": "782:8992:20",
							"usedErrors": [
								305,
								308,
								415,
								420,
								425,
								434,
								439,
								444,
								1249,
								1318,
								1320
							],
							"usedEvents": [
								317,
								326,
								335,
								383,
								1067,
								1076
							]
						}
					],
					"src": "32:9742:20"
				},
				"id": 20
			}
		}
	}
}